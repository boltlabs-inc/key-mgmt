[config]
default_to_workspace = false

# -- Server Tasks --

# Shorthand task to start server in the background.
[tasks.start]
alias = "start-server-detached"

# Shorthand task to stop a server running in the background.
[tasks.stop]
alias = "stop-server"

# Shorthand task to destroy the docker containers for a server.
[tasks.teardown]
alias = "teardown-server"

# Stops the server, recompiles it, and restarts it
[tasks.restart]
dependencies = ["stop", "start"]

# Start a key server and monitor its output.
[tasks.start-server]
command = "docker"
args = ["compose", "up", "--build", "mongodb", "key_server"]
dependencies = ["certs"]

# Start a key server in the background.
[tasks.start-server-detached]
command = "docker"
args = ["compose", "up", "--build", "mongodb", "key_server", "--detach", "--wait"]
dependencies = ["certs"]

# Stop a key server running in the background.
[tasks.stop-server]
command = "docker"
args = ["compose", "stop"]

# Destroy the docker containers for a server.
[tasks.teardown-server]
command = "docker"
args = ["compose", "down"]

# Start a server running on your local machine without Docker.
[tasks.start-server-local]
command = "cargo"
args = ["run", "--bin", "key-server-cli", "./dev/local/Server.toml"]
dependencies = ["certs"]

# -- Testing Tasks --

# Run end-to-end tests against a server that can be accessed via localhost.
# Servers running in Docker satisfy this requirement.
[tasks.e2e]
command = "cargo"
args = ["run", "--bin", "lock-keeper-tests", "./dev/local/Client.toml"]

# -- CI Tasks --
[tasks.ci]
dependencies = ["ci-format", "ci-clippy", "ci-build", "ci-tests", "ci-doc-tests", "ci-docs", "ci-database-tests"]

[tasks.ci-format]
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.ci-clippy]
command = "cargo"
args = ["clippy", "--all-features", "--all-targets", "--workspace", "--", "-Dwarnings"]

[tasks.ci-build]
command = "cargo"
args = ["build", "--all-features", "--all-targets", "--workspace"]

[tasks.ci-tests]
command = "cargo"
args = ["test", "--all-features", "--lib", "--bins", "--workspace"]

[tasks.ci-doc-tests]
command = "cargo"
args = ["test", "--all-features", "--doc", "--workspace"]

[tasks.ci-docs]
command = "cargo"
env = { "RUSTDOCFLAGS" = "-Dwarnings" }
args = ["doc", "--all-features", "--no-deps", "--workspace"]

# TODO: Remove with #268
[tasks.ci-database-tests]
command = "cargo"
args = ["test", "--all-features", "--lib", "--bins", "--workspace", "--", "--ignored"]

# -- Utility Tasks --

# Run the interactive client.
[tasks.lkic]
command = "cargo"
args = ["run", "--bin", "lkic"]

# Generate certificates in the dev directory at the root of this repo.
[tasks.certs]
command = "cargo"
args = ["make", "generate-certificates", "./dev"]

# Generate certificates in the directory specified by the first command line argument.
[tasks.generate-certificates]
script = { file = "dev/generate-certificates" }
