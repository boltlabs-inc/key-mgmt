version: '3.8'

services:

  postgres:
      image: postgres
      restart: always
      environment:
        # The container will create a postgres user with this name and password. We use these to connect to our DB.
        - POSTGRES_USER=test
        - POSTGRES_PASSWORD=test_password
      ports:
        - "5432:5432"
      volumes:
          # This postgres image will automatically look in the `/docker-entrypoint-initdb.d/` directory for any
          # SQL files and execute them during container initialization. So our container will be all set up after
          # it runs this script.
          - ./persistence/migrations/:/docker-entrypoint-initdb.d/
      stdin_open: true
      tty: true

  nginx:
    image: nginx:latest
    container_name: nginx_tls
    restart: always
    ports:
      - 1115:1115
    depends_on:
      - "ks_nginx"
    volumes:
      - ./dev/config/nginx-tls/nginx.conf:/etc/nginx/nginx.conf
      - ./dev/test-pki/gen/certs/server.key:/etc/ssl/certs/server.key
      - ./dev/test-pki/gen/certs/server.chain:/etc/ssl/certs/server.crt

  key_server:
    build: .
    restart: always
    volumes:
      - ./dev:/app
    environment:
      CONFIG: "/app/config/docker/Binary.toml"
    ports:
      - 1113:1113
    healthcheck:
      test: "sh ./healthcheck.sh http://localhost:1113"
      interval: 10s
      timeout: 5s
    depends_on:
      - "postgres"
    stdin_open: true
    tty: true 

  ks_client_auth:
    build: .
    restart: always
    volumes:
      - ./dev:/app
    environment:
      CONFIG: "/app/config/docker-client-auth/Binary.toml"
    ports:
      - "1114:1114"
    healthcheck:
      test: "sh ./healthcheck.sh http://localhost:1114"
      interval: 10s
      timeout: 5s
    depends_on:
      - "postgres"
    stdin_open: true
    tty: true

  ks_nginx:
    build: .
    volumes:
      - ./dev:/app
    environment:
      CONFIG: "/app/config/nginx-tls/Binary.toml"
    healthcheck:
      test: "sh ./healthcheck.sh http://localhost:1113"
      interval: 10s
      timeout: 5s
    depends_on:
      - "postgres"
    stdin_open: true
    tty: true
