var searchIndex = JSON.parse('{\
"dams":{"doc":"Cryptography, protocols, and other shared types and â€¦","t":[13,4,13,2,13,13,13,13,13,13,4,13,13,4,0,0,11,11,11,11,11,11,0,11,11,0,0,0,0,11,11,0,11,11,11,11,11,11,11,14,11,11,11,11,11,11,0,0,0,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,0,0,11,11,11,12,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,13,13,3,3,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,3,16,16,16,16,11,10,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,0,0,17,17,17,17,5,5,5,5,5,5,5,17,17,17,17,5,5,5,5,5,5,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,8,10,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,6,0,0,0,0,0,0,0,0,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["Authenticate","ClientAction","CreateStorageKey","DamsError","Export","Generate","LocalOnly","Null","Register","Retrieve","RetrieveContext","RetrieveStorageKey","ServerSpawned","TestLogs","audit_log","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone_into","config","crypto","dams_rpc","defaults","deserialize","deserialize","error","fmt","fmt","fmt","fmt","from","from","from","impl_message_conversion","into","into","into","into_request","into_request","into_request","keys","opaque_storage","pem_utils","serialize","serialize","timeout","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","user","vzip","vzip","vzip","0","Failed","LogEntry","Outcome","Successful","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","fmt","from","from","into","into","into_request","into_request","new","serialize","serialize","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blockchain","ECDSA","EVM","SignatureScheme","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","signature_scheme","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Channel","ClientChannel","ServerChannel","borrow","borrow_mut","create","create","create","create","fmt","from","into","into_request","receive","send","send","send","send","send_error","send_error","try_from","try_into","type_id","vzip","client","opaque","server","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","from_str","into","into_request","load","serialize","server_location","server_location","tls_config","to_owned","trust_certificate","try_from","try_into","type_id","vzip","OpaqueCipherSuite","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","Config","DatabaseSpec","Service","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone","clone_into","clone_into","clone_into","connection_timeout","database","db_name","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from_str","into","into","into","into_request","into_request","into_request","load","max_message_length","max_pending_connection_retries","message_timeout","mongodb_uri","opaque_path","opaque_server_key","port","private_key","serialize","serialize","serialize","services","tls_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","KeyDerivationFailed","KeyId","OpaqueExportKey","OpaqueSessionKey","RandomNumberGeneratorFailed","Secret","StorageKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_and_encrypt_secret","create_and_encrypt_storage_key","decrypt_secret","decrypt_storage_key","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","generate","get_hash","hash","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ne","ne","ne","ne","ne","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","Message","borrow","borrow_mut","clear","clone","clone_into","content","dams_rpc_client","dams_rpc_server","default","encoded_len","eq","fmt","from","into","into_request","ne","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","type_id","vzip","DamsRpcClient","accept_compressed","authenticate","borrow","borrow_mut","clone","clone_into","connect","create_storage_key","fmt","from","generate","into","into_request","new","register","retrieve","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","AuthenticateStream","CreateStorageKeyStream","DamsRpc","DamsRpcServer","GenerateStream","RegisterStream","RetrieveStorageKeyStream","RetrieveStream","accept_compressed","authenticate","borrow","borrow_mut","call","call","clone","clone_into","create_storage_key","fmt","from","from_arc","generate","into","into_request","new","poll_ready","poll_ready","register","retrieve","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","client","server","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","config_path","connection_timeout","max_message_length","max_note_length","max_pending_connection_retries","message_timeout","port","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","address","config_path","max_message_length","max_pending_connection_retries","message_timeout","port","Bincode","Crypto","DamsError","InvalidMessage","InvalidOpaqueDirectory","InvalidPrivateKey","InvalidUri","Io","NoMessageReceived","OpaqueProtocol","ProjectDirs","Rustls","TokioSender","Toml","TonicStatus","WebPki","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","Delegated","DigitalAssetPublicKey","KeyInfo","KeyMaterial","Passive","SelfCustodial","SharedControl","Unilateral","UsePermission","UseRestriction","UserPolicySpecification","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","create_or_retrieve_server_key_opaque","read_certificates","read_private_key","WithTimeout","with_timeout","AssetId","TarId","Transaction","TransactionApprovalRequest","TransactionSignature","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Message","MessageStream","authenticate","create_storage_key","generate","register","retrieve","retrieve_storage_key","client","server","AuthenticateFinish","AuthenticateStart","account_name","account_name","borrow","borrow","borrow_mut","borrow_mut","credential_finalization","credential_request","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuthenticateFinish","AuthenticateStart","SendUserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","credential_response","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","serialize","serialize","serialize","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","client","server","RequestUserId","SendStorageKey","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","storage_key","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKeyResult","SendUserId","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","client","server","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","ciphertext","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RegisterFinish","RegisterStart","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_request","registration_upload","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RegisterFinish","RegisterStart","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_response","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","Request","borrow","borrow_mut","context","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","stored_secret","try_from","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","ciphertext","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","vzip","AccountName","LogIdentifier","StoredSecret","User","UserId","account_name","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","into","into","into","into","into","into_iter","into_parts","into_request","into_request","into_request","into_request","into_request","key_id","ne","ne","new","new","new","retrieved","secret","secrets","serialize","serialize","serialize","serialize","serialize","server_registration","storage_key","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_id","vzip","vzip","vzip","vzip","vzip"],"q":["dams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::TestLogs","dams::audit_log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::channel","","","","","","","","","","","","","","","","","","","","","","","","dams::config","","","dams::config::client","","","","","","","","","","","","","","","","","","","","","","","dams::config::opaque","","","","","","","","","","","dams::config::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::crypto::CryptoError","dams::dams_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::dams_rpc::dams_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","dams::dams_rpc::dams_rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::defaults","","dams::defaults::client","","","","","","","","","","","dams::defaults::server","","","","","","","","","","dams::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::error::DamsError","","","","","","","","","","dams::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::opaque_storage","dams::pem_utils","","dams::timeout","","dams::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types","","","","","","","","dams::types::authenticate","","dams::types::authenticate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::authenticate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::create_storage_key","","dams::types::create_storage_key::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::create_storage_key::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::generate","","dams::types::generate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::generate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::register","","dams::types::register::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::register::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams::types::retrieve","","dams::types::retrieve::client","","","","","","","","","","","","","","","","","dams::types::retrieve::server","","","","","","","","","","","","","","","dams::types::retrieve_storage_key","","dams::types::retrieve_storage_key::client","","","","","","","","","","","","","","","dams::types::retrieve_storage_key::server","","","","","","","","","","","","","","","dams::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Options for actions the DAMS client can take.","","","","","","","","","Options for the asset ownerâ€™s intended use of a secret","","Server successfully serving at address described by â€¦","Logs used to verify that an operation completed in the â€¦","Audit log entries, fields, and types","Blockchain abstraction.","","","","","","","","","","","Application-specific cryptographic types and operations.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates <code>TryFrom</code> implementations to and from the <code>Message</code> â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Digital asset keys and descriptions.","","","","","","","","Library for blockchains, transactions, and requests for â€¦","","","","","","","","","","","Models for the first pass of MongoDB integration.","","","","","","A single log entry that specifies the actor, action, â€¦","Options for the outcome of a given action in a <code>LogEntry</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Options for type of blockchain.","The ECDSA signature scheme","","Indicator trait to identify objects that represent a â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Identify signature scheme that corresponds to each â€¦","","","","","","","","","","A two-way channel between a client and server used to â€¦","","","","","Create a server-side <code>Channel</code> that sends error codes in â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","Create a server-side <code>Channel</code> that sends error codes in â€¦","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Receive the next message on the channel and convert it to â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted â€¦","","","Universally unique identifier for a secret.","An export key is secure key material produced as client â€¦","A session key is produced as shared output for client and â€¦","","An arbitrary secret.","A storage key is a default-length symmetric encryption key â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create and encrypt a new secret. This is part of the â€¦","Create an encrypted storage key. This is part of the â€¦","Decrypt a secret. This should be run as part of the â€¦","Decrypt a storage key. This should be run as part of the â€¦","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Generate a new, random <code>KeyId</code> for the given <code>UserId</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given â€¦","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Compress requests with the given encoding.","","","","","","","","Server streaming response type for the Authenticate method.","Server streaming response type for the CreateStorageKey â€¦","Generated trait containing gRPC methods that should be â€¦","","Server streaming response type for the Generate method.","Server streaming response type for the Register method.","Server streaming response type for the RetrieveStorageKey â€¦","Server streaming response type for the Retrieve method.","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Use permission that delegates signing authority to a â€¦","Public key portion of a digital asset key pair.","Convenient grouping of the non-secret components of a â€¦","Key material that is generated externally to the system.","Use permission that refers to a digital asset key that was â€¦","Use permission that assigns key custody to the asset â€¦","Use restriction that assigns veto power to a given set of â€¦","Use restriction that does not assign veto power to a given â€¦","A use permission is a type that defines the degree to â€¦","A use restriction is a type that defines what entities â€¦","Specification of a user-set policy. This describes the set â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the <code>ServerSetup</code> used for OPAQUE authentication, â€¦","Returns all certificates in the pemfile at the given path","Returns the first private key found in the pemfile at the â€¦","","","Unique ID for a digital asset.","Unique ID for a <code>TransactionApprovalRequest</code>.","A transaction describes the transfer of a digital asset â€¦","A transaction approval request is used to log a request â€¦","Signature on a <code>Transaction</code> under a digital asset key.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass account name and registration-finish message from â€¦","Pass account name and registration-start message from â€¦","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful.","Check if user exists and return OPAQUE message if so","Return authenticated user id if authentication worked.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID to server","pass user ID and encrypted secret","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","return new requested key ID","Return true if successful","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and registration-finish message from OPAQUE","pass user ID and registration-start message from OPAQUE","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","Check if user exists and return successful if not","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and key ID to server","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","return new requested key and key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","pass user ID to server","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","return encrypted storage key","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Account name used as human-memorable identifier for a user â€¦","Abstraction to wrap around <code>UserId</code> and <code>AccountName</code> as user â€¦","Wrapper around an <code>Encrypted&lt;Secret&gt;</code> and its <code>KeyId</code>","One user with a set of arbitrary secrets and a â€¦","Unique ID for a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,0,2,0,1,2,1,1,2,2,0,2,6,0,0,0,2,1,6,2,1,6,0,1,1,0,0,0,0,2,1,0,2,1,6,6,2,1,6,0,2,1,6,2,1,6,0,0,0,2,1,0,1,6,0,2,1,6,2,1,6,2,1,6,0,0,2,1,6,128,10,0,0,10,10,11,10,11,10,11,10,11,11,10,11,10,11,10,11,11,10,11,11,10,11,10,11,10,11,10,11,0,0,15,0,15,16,15,16,15,15,15,16,15,16,15,16,15,16,15,16,15,16,15,15,15,16,15,16,15,16,15,16,0,0,0,22,22,25,21,22,22,22,22,22,22,22,25,21,22,22,25,22,22,22,22,22,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,36,36,36,36,36,36,36,36,36,36,0,0,0,39,37,38,39,37,38,39,39,37,38,39,37,38,39,39,37,38,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,39,39,39,38,39,39,39,39,37,38,39,37,39,37,38,39,37,38,39,37,38,39,37,38,39,37,38,39,41,0,41,0,41,41,0,0,0,41,0,0,41,43,44,45,46,47,13,41,43,44,45,46,47,13,41,43,44,45,46,47,13,41,43,44,45,46,47,13,47,46,43,43,43,44,13,43,44,46,47,13,43,44,46,47,13,41,41,43,44,45,46,47,13,41,43,44,45,45,46,46,47,13,13,13,13,41,43,44,45,46,47,13,13,41,43,44,45,46,47,13,43,44,46,47,13,43,44,13,41,43,44,45,46,47,13,41,41,43,44,44,45,46,47,47,13,41,43,44,45,46,47,13,41,43,44,45,46,47,13,41,43,44,45,46,47,13,129,0,18,18,18,18,18,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,82,82,0,0,82,82,82,82,83,82,83,83,83,83,83,83,82,83,83,83,82,83,83,83,83,83,82,82,82,83,83,83,83,83,83,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,130,131,132,133,134,135,136,137,138,139,0,0,0,0,0,0,0,0,0,0,0,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,103,104,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,105,106,103,104,107,108,109,110,111,0,0,0,0,140,0,0,0,0,0,121,119,120,122,123,121,119,120,122,123,119,120,119,120,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,119,120,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,121,119,120,122,123,0,0,0,0,0,0,0,0,0,0,0,0,57,66,57,66,57,66,66,57,57,66,57,66,57,66,57,66,57,66,57,66,57,57,66,66,57,66,57,66,57,66,0,0,0,67,68,69,67,68,69,67,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,68,67,67,68,68,69,69,67,68,69,67,68,69,69,67,68,69,0,0,0,0,70,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,71,70,70,71,71,70,71,70,71,71,70,71,0,0,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,73,72,72,73,73,72,73,72,73,72,72,73,0,0,0,0,74,75,74,75,75,74,75,74,75,74,75,74,75,74,75,74,75,74,74,75,75,74,75,74,75,74,75,74,75,0,0,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,76,77,77,76,76,77,77,76,77,76,77,76,77,0,0,0,0,58,58,64,58,64,58,64,58,64,58,64,58,64,58,64,58,64,58,64,58,58,64,64,58,64,58,64,58,64,0,0,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,61,60,60,61,61,60,60,61,60,61,60,61,60,0,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,0,126,48,124,48,124,125,126,12,48,124,125,126,12,48,124,12,48,124,12,48,48,124,125,126,12,48,124,48,124,48,48,124,124,125,126,12,48,124,125,126,12,12,12,124,48,124,125,126,12,48,126,48,124,125,126,12,125,48,124,48,125,126,125,125,126,48,124,125,126,12,126,126,48,124,12,48,124,48,124,125,126,12,48,124,125,126,12,48,124,125,126,12,126,48,124,125,126,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],0,0,0,0,[[],[[3,[2]]]],[[],[[3,[1]]]],0,[[2,4],5],[[1,4],5],[[6,4],5],[[6,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],0,0,0,[2,3],[1,3],0,[[]],[[],8],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[10]]]],[[],[[3,[11]]]],[[10,4],5],[[11,4],5],[[11,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[[12,[14,[13]],2,10],11],[10,3],[11,3],[[],8],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[[]],[[],[[3,[15]]]],[[],[[3,[16]]]],[[15,4],5],[[16,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[15,3],[16,3],[15,17],[[]],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],[[[19,[18]]]],[[[20,[18]],[19,[18]]],21],[[[20,[18]],[19,[18]]],[[22,[18]]]],[[[19,[18]]]],[[[22,[23]],4],5],[[]],[[]],[[],7],[22,24],[[25,[26,[18]]],24],[[21,[26,[18]]],24],[[[22,[18]],[26,[18]]],24],[[[22,[[3,[18,27]]]],[26,[18]]],24],[[25,[28,[27]]],24],[[[22,[[3,[18,27]]]],[28,[27]]],24],[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[29,29],[[]],[[],29],[[],[[3,[29]]]],[[29,4],5],[[]],[30,[[3,[29]]]],[[]],[[],7],[[[32,[31]]],24],[29,3],[29,[[3,[33,34]]]],0,[29,[[3,[35,34]]]],[[]],0,[[],3],[[],3],[[],9],[[]],0,[[]],[[]],[[36,4],5],[[]],[[]],[[],7],[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[37,37],[38,38],[39,39],[[]],[[]],[[]],0,0,0,[[],[[3,[37]]]],[[],[[3,[38]]]],[[],[[3,[39]]]],[[37,4],5],[[38,4],5],[[39,4],5],[[]],[[]],[[]],[30,[[3,[37]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[[32,[31]]],24],0,0,0,0,0,0,0,0,[37,3],[38,3],[39,3],0,[39,[[3,[40,34]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,41],[[[43,[42]]],[[43,[42]]]],[44,44],[45,45],[46,46],[47,47],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,48,13],[[3,[34]]]],[[46,48],[[3,[[43,[47]],34]]]],[[[43,[44]],47],[[3,[44,34]]]],[[[43,[47]],46,48],[[3,[47,34]]]],[[],[[3,[43]]]],[[],[[3,[44]]]],[[],[[3,[13]]]],[[[43,[49]],43],50],[[44,44],50],[[46,46],50],[[47,47],50],[[13,13],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[41,4],5],[[41,4],5],[[[43,[23]],4],5],[[44,4],5],[[45,4],5],[[46,4],5],[[47,4],5],[[13,4],5],[[]],[[]],[[]],[[[53,[51,52]]],45],[[]],[[]],[[[53,[51,52]]],46],[[]],[[]],[48,[[3,[13,34]]]],[[],54],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[43,[49]],43],50],[[44,44],50],[[46,46],50],[[47,47],50],[[13,13],50],[43,3],[44,3],[13,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],3],[[],3],[[[55,[51]]],[[3,[44]]]],[[],3],[[],3],[[],3],[[[55,[51]]],[[3,[47]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[18],[18,18],[[]],0,0,0,[[],18],[18,56],[[18,18],50],[[18,4],5],[[]],[[]],[[],7],[[18,18],50],[[]],[57,[[3,[18]]]],[58,[[3,[18]]]],[59,[[3,[18]]]],[60,[[3,[18]]]],[61,[[3,[18]]]],[62,[[3,[18]]]],[63,[[3,[18]]]],[[],3],[64,[[3,[18]]]],[65,[[3,[18]]]],[66,[[3,[18]]]],[67,[[3,[18]]]],[68,[[3,[18]]]],[69,[[3,[18]]]],[70,[[3,[18]]]],[71,[[3,[18]]]],[72,[[3,[18]]]],[73,[[3,[18]]]],[74,[[3,[18]]]],[75,[[3,[18]]]],[76,[[3,[18]]]],[77,[[3,[18]]]],[[],3],[[],9],[[]],0,[[78,79],78],[[78,80],24],[[]],[[]],[[[78,[42]]],[[78,[42]]]],[[]],[[],24],[[78,80],24],[[[78,[23]],4],5],[[]],[[78,80],24],[[]],[[],7],[[],78],[[78,80],24],[[78,80],24],[[78,80],24],[[78,79],78],[[]],[[],3],[[],3],[[],9],[[]],[[],[[78,[81]]]],[33,78],0,0,0,0,0,0,0,0,[[[83,[82]],79],[[83,[82]]]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[]],[[]],[86],[[83,86]],[[[83,[82]]],[[83,[82]]]],[[]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[[83,[[0,[23,82]]]],4],5],[[]],[[[87,[82]]],[[83,[82]]]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[]],[[],7],[82,[[83,[82]]]],[[83,88],[[89,[3]]]],[88,[[89,[3]]]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[[7,[[19,[18]]]]],[[85,[[84,[24]]]]]],[[[83,[82]],79],[[83,[82]]]],[[]],[[],3],[[],3],[[],9],[[]],[82,[[81,[[83,[82]]]]]],0,0,0,0,0,0,[[],[[3,[90,34]]]],[[],[[14,[91]]]],[[],56],[[],54],[[],56],[[],91],[[],92],0,0,0,0,[[],93],[[],[[3,[90,34]]]],[[],56],[[],56],[[],91],[[],92],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[34,4],5],[[34,4],5],[94,34],[[]],[95,34],[96,34],[27,34],[97,34],[98,34],[99,34],[100,34],[101,34],[41,34],[[]],[[],7],[34,[[14,[102]]]],[[],8],[[],3],[[],3],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],104],[[],[[3,[105]]]],[[],[[3,[106]]]],[[],[[3,[103]]]],[[],[[3,[104]]]],[[],[[3,[107]]]],[[],[[3,[108]]]],[[],[[3,[109]]]],[[],[[3,[110]]]],[[],[[3,[111]]]],[[105,4],5],[[106,4],5],[[103,4],5],[[104,4],5],[[107,4],5],[[108,4],5],[[109,4],5],[[110,4],5],[[111,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[105,3],[106,3],[103,3],[104,3],[107,3],[108,3],[109,3],[110,3],[111,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[112,39],[[3,[[115,[36,[114,[113]]]],34]]]],[[[32,[31]]],[[3,[[55,[116]],34]]]],[[[32,[31]]],[[3,[117,34]]]],0,[91,118],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[120,120],[[]],[[]],[[],[[3,[121]]]],[[],[[3,[119]]]],[[],[[3,[120]]]],[[],[[3,[122]]]],[[],[[3,[123]]]],[[121,4],5],[[119,4],5],[[120,4],5],[[122,4],5],[[123,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[121,3],[119,3],[120,3],[122,3],[123,3],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[3,[57]]]],[[],[[3,[66]]]],[[57,4],5],[[66,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[57,3],[66,3],[[],3],[18,[[3,[57]]]],[[],3],[18,[[3,[66]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[3,[67]]]],[[],[[3,[68]]]],[[],[[3,[69]]]],[[67,4],5],[[68,4],5],[[69,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[67,3],[68,3],[69,3],0,[18,[[3,[67]]]],[[],3],[[],3],[18,[[3,[68]]]],[[],3],[18,[[3,[69]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[70]]]],[[],[[3,[71]]]],[[70,4],5],[[71,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[70,3],[71,3],0,[18,[[3,[70]]]],[[],3],[[],3],[18,[[3,[71]]]],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[72]]]],[[],[[3,[73]]]],[[72,4],5],[[73,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[72,3],[73,3],0,[18,[[3,[72]]]],[[],3],[18,[[3,[73]]]],[[],3],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[3,[74]]]],[[],[[3,[75]]]],[[74,4],5],[[75,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[74,3],[75,3],[[],3],[18,[[3,[74]]]],[[],3],[18,[[3,[75]]]],[[],3],[[],3],[[],9],[[],9],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[76]]]],[[],[[3,[77]]]],[[76,4],5],[[77,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[76,3],[77,3],0,[[],3],[18,[[3,[76]]]],[18,[[3,[77]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[58]]]],[[],[[3,[64]]]],[[58,4],5],[[64,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,0,[58,3],[64,3],[[],3],[18,[[3,[58]]]],[18,[[3,[64]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[61]]]],[[],[[3,[60]]]],[[61,4],5],[[60,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[61,3],[60,3],0,[[],3],[18,[[3,[61]]]],[18,[[3,[60]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],0,[[],[[3,[62]]]],[[62,4],5],[[]],[[]],[[],7],0,[62,3],[[],3],[18,[[3,[62]]]],[[],3],[[],9],0,[[]],0,[[]],[[]],[[],[[3,[63]]]],[[63,4],5],[[]],[[]],[[],7],[63,3],0,[[],3],[18,[[3,[63]]]],[[],3],[[],9],[[]],0,0,0,[[]],[[]],[[],[[3,[59]]]],[[59,4],5],[[]],[[]],[[],7],[59,3],[18,[[3,[59]]]],[[],3],[[],3],[[],9],0,[[]],0,[[]],[[]],0,[[],[[3,[65]]]],[[65,4],5],[[]],[[]],[[],7],[65,3],[[],3],[18,[[3,[65]]]],[[],3],[[],9],[[]],0,0,0,0,0,0,[48],[124],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[124,124],[12,12],[[]],[[]],[[]],[[],48],[[],[[3,[48]]]],[[],[[3,[124]]]],[[],[[3,[125]]]],[[],[[3,[126]]]],[[],[[3,[12]]]],[[48,48],50],[[124,124],50],[[],50],[[],50],[[48,4],5],[[48,4],5],[[124,4],5],[[124,4],5],[[125,4],5],[[126,4],5],[[12,4],5],[[]],[[]],[[]],[[]],[124,12],[48,12],[[]],[30,[[3,[124]]]],[[]],[[]],[[]],[[]],[[]],[48],[126],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[48,48],50],[[124,124],50],[[],[[3,[48,34]]]],[[[43,[44]],13],125],[[48,124,[127,[36]]],126],0,0,0,[48,3],[124,3],[125,3],[126,3],[12,3],0,0,[[]],[[]],[[]],[[],8],[[],8],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[]]],"p":[[4,"RetrieveContext"],[4,"ClientAction"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"TestLogs"],[3,"Request"],[3,"String"],[3,"TypeId"],[4,"Outcome"],[3,"LogEntry"],[3,"LogIdentifier"],[3,"KeyId"],[4,"Option"],[4,"Blockchain"],[3,"ECDSA"],[8,"SignatureScheme"],[3,"Message"],[3,"Streaming"],[3,"Sender"],[6,"ClientChannel"],[3,"Channel"],[8,"Debug"],[8,"Future"],[6,"ServerChannel"],[8,"TryInto"],[3,"Status"],[8,"Into"],[3,"Config"],[15,"str"],[3,"Path"],[8,"AsRef"],[3,"Uri"],[4,"DamsError"],[3,"ClientConfig"],[3,"OpaqueCipherSuite"],[3,"Config"],[3,"DatabaseSpec"],[3,"Service"],[3,"ServerConfig"],[4,"CryptoError"],[8,"Clone"],[3,"Encrypted"],[3,"Secret"],[3,"OpaqueSessionKey"],[3,"OpaqueExportKey"],[3,"StorageKey"],[3,"UserId"],[8,"PartialEq"],[15,"bool"],[15,"u8"],[6,"U64"],[3,"GenericArray"],[15,"u64"],[3,"Vec"],[15,"usize"],[3,"AuthenticateStart"],[3,"RegisterStart"],[3,"Request"],[3,"RegisterFinish"],[3,"RegisterStart"],[3,"Request"],[3,"Response"],[3,"RegisterFinish"],[3,"Response"],[3,"AuthenticateFinish"],[3,"AuthenticateStart"],[3,"AuthenticateFinish"],[3,"SendUserId"],[3,"RequestUserId"],[3,"SendStorageKey"],[3,"SendUserId"],[3,"CreateStorageKeyResult"],[3,"Generate"],[3,"Store"],[3,"Generate"],[3,"Store"],[3,"DamsRpcClient"],[4,"CompressionEncoding"],[8,"IntoStreamingRequest"],[3,"InterceptedService"],[8,"DamsRpc"],[3,"DamsRpcServer"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"PathBuf"],[3,"Duration"],[15,"u16"],[4,"IpAddr"],[4,"ProtocolError"],[3,"SendError"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"InvalidUri"],[3,"Error"],[6,"Error"],[8,"Error"],[3,"KeyMaterial"],[3,"SelfCustodial"],[3,"DigitalAssetPublicKey"],[3,"KeyInfo"],[3,"Delegated"],[3,"Passive"],[3,"UserPolicySpecification"],[3,"SharedControl"],[3,"Unilateral"],[3,"StdRng"],[3,"Ristretto255"],[3,"PrivateKey"],[3,"ServerSetup"],[3,"Certificate"],[3,"PrivateKey"],[3,"Timeout"],[3,"TarId"],[3,"AssetId"],[3,"TransactionApprovalRequest"],[3,"Transaction"],[3,"TransactionSignature"],[3,"AccountName"],[3,"StoredSecret"],[3,"User"],[3,"ServerRegistration"],[13,"ServerSpawned"],[13,"KeyDerivationFailed"],[13,"Crypto"],[13,"Bincode"],[13,"Io"],[13,"InvalidUri"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"TokioSender"],[13,"Toml"],[13,"TonicStatus"],[13,"WebPki"],[8,"WithTimeout"]]},\
"dams_client":{"doc":"This crate is an implementation of a client to a key â€¦","t":[2,2,0,0,0,0,5,5,5,5,5,5,13,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["DamsClient","DamsClientError","api","client","error","arbitrary_secrets","create_digital_asset_key","request_transaction_signature","retrieve_audit_log","retrieve_public_key_by_id","retrieve_public_keys","set_user_key_policy","ArbitraryKey","ExportedKey","LocalStorage","None","RetrieveResult","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","DamsClient","Password","as_bytes","authenticated_client","borrow","borrow","borrow_mut","borrow_mut","close","default","fmt","fmt","from","from","from_str","generate_and_store","into","into","into_request","into_request","register","retrieve","to_string","tonic_client","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","AccountAlreadyRegistered","Dams","DamsClientError","DamsCrypto","HttpNotAllowed","InvalidAccount","InvalidLogin","OpaqueProtocol","ServerReturnedFailure","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0"],"q":["dams_client","","","","","dams_client::api","","","","","","","dams_client::api::arbitrary_secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_client::api::arbitrary_secrets::RetrieveResult","","dams_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_client::error::DamsClientError","","","",""],"d":["","","Full implementation of the public API for the DAMS client â€¦","Client object to interact with the key server.","","","Generate a new, distributed digital asset key with the â€¦","Request a signature on a transaction from the key server.","Retrieve the audit log from the key server for a specified â€¦","Retrieve the public key info for the specified key â€¦","Retrieve the public key info for all keys associated with â€¦","Set an asset-owner-specified key policy for a delegated â€¦","","","","","Ways of returning a key from the retrieval process based â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A <code>DamsClient</code> is an abstraction over client operations; â€¦","","","Authenticate to the DAMS key server as a previously â€¦","","","","","Close a session.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Generate and store an arbitrary secret at the key server","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Register a new user who has not yet interacted with the â€¦","Retrieve an arbitrary secret from the key server by <code>KeyId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,15,0,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,40,41,0,0,21,25,21,25,21,25,25,21,21,25,21,25,21,25,21,25,21,25,25,25,21,25,21,25,21,25,21,25,25,21,25,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,42,43,44,45,46],"f":[0,0,0,0,0,0,[[1,2,3,4],[[7,[5,6]]]],[8,[[7,[9,6]]]],[[1,[11,[10]]],[[7,[12,6]]]],[[1,10],[[7,[5,6]]]],[1,[[7,[[13,[5]],6]]]],[[1,10,14],[[7,[6]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[7,[15]]]],[[],[[7,[16]]]],[[15,17],18],[[16,17],18],[[]],[[]],[[]],[[]],[[],19],[[],19],[15,7],[16,7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[]],[[]],0,0,0,0,[21],[[22,21,23],24],[[]],[[]],[[]],[[]],[25,[[7,[6]]]],[[],21],[[21,17],18],[[25,17],18],[[]],[[]],[26,[[7,[21]]]],[25,24],[[]],[[]],[[],19],[[],19],[[22,21,23],24],[[25,10,27],24],[21,12],[25,[[34,[[33,[[29,[28]],[32,[30,31]]]]]]]],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[25,1],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[6,17],18],[[6,17],18],[[]],[35,6],[36,6],[37,6],[31,6],[38,6],[[]],[[],19],[6,[[11,[39]]]],[[],12],[[],7],[[],7],[[],20],[[]],0,0,0,0,0],"p":[[3,"UserId"],[4,"Blockchain"],[8,"UsePermission"],[8,"UseRestriction"],[3,"KeyInfo"],[4,"DamsClientError"],[4,"Result"],[3,"TransactionApprovalRequest"],[3,"TransactionSignature"],[3,"KeyId"],[4,"Option"],[3,"String"],[3,"Vec"],[3,"UserPolicySpecification"],[4,"RetrieveResult"],[3,"LocalStorage"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"Password"],[3,"AccountName"],[3,"Config"],[8,"Future"],[3,"DamsClient"],[15,"str"],[4,"RetrieveContext"],[3,"HttpConnector"],[3,"HttpsConnector"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Client"],[3,"DamsRpcClient"],[4,"CryptoError"],[3,"Error"],[4,"ProtocolError"],[4,"DamsError"],[8,"Error"],[13,"ArbitraryKey"],[13,"ExportedKey"],[13,"Dams"],[13,"DamsCrypto"],[13,"OpaqueProtocol"],[13,"TonicStatus"],[13,"TonicTransport"]]},\
"dams_key_server":{"doc":"This crate is an implementation of a key server to a key â€¦","t":[2,0,0,0,0,0,0,3,3,13,4,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,8,3,4,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11],"n":["DamsServerError","cli","database","error","operations","policy_engine","server","Cli","Run","Run","Server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","config","fmt","fmt","fmt","from","from","from","from_clap","from_clap","from_clap","into","into","into","into_request","into_request","into_request","run","server","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","Database","add_user_secret","borrow","borrow_mut","clone","clone_into","connect","create_log_entry","create_user","delete_user","drop","find_user","find_user_by_id","fmt","from","get_user_secret","into","into_request","set_storage_key","to_owned","try_from","try_into","type_id","vzip","AccountAlreadyRegistered","Bson","Dams","DamsServerError","EnvVar","Hyper","InvalidAccount","Io","KeyNotFound","MissingService","MongoDb","OpaqueProtocol","StorageKeyAlreadySet","StorageKeyNotSet","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","Authenticate","CreateStorageKey","Generate","Register","Retrieve","RetrieveStorageKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Approve","AssetFiduciaryConfig","FiduciaryApproval","PolicyEngine","PolicyEngineConfig","PolicyEngineError","Reject","RejectionContext","TransactionApprovalDecision","asset_fiduciaries","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","initialize","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","max_delegated","max_self_custodial","request_transaction_approval","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unilateral_control_allowed","vzip","vzip","vzip","vzip","vzip","vzip","0","0","Context","DamsKeyServer","authenticate","borrow","borrow","borrow_mut","borrow_mut","context","create_storage_key","db","fmt","fmt","from","from","generate","into","into","into_request","into_request","new","register","retrieve","retrieve_storage_key","rng","service","start_dams_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["dams_key_server","","","","","","","dams_key_server::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_key_server::cli::Server","dams_key_server::database","","","","","","","","","","","","","","","","","","","","","","","","dams_key_server::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_key_server::error::DamsServerError","","","","","","","","","dams_key_server::operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_key_server::policy_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dams_key_server::policy_engine::TransactionApprovalDecision","","dams_key_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Database for key-servers.","","","Black-box policy engine API and supporting types.","","The keyMgmt server command-line interface.","Run the server.","","","","","","","","","","","","Path to a configuration file.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Run server commands.","","","","","","","","","","","","","","","Add a <code>StoredSecret</code> to a <code>User</code>â€™s list of arbitrary secrets","","","","","Connect to the MongoDB instance specified by the given â€¦","Create a new <code>LogEntry</code> for the given actor, action, and â€¦","Create a new <code>User</code> with their authentication information â€¦","Delete a <code>User</code> by their <code>UserId</code>","Drop the inner database","Find a <code>User</code> by their human-readable <code>AccountName</code>.","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","Get a <code>User</code>â€™s <code>StoredSecret</code> based on its <code>KeyId</code>","Calls <code>U::from(self)</code>.","","Set the <code>storage_key</code> field for the <code>User</code> associated with a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All asset fiduciaries approved the request; there must be â€¦","Configuration for an asset fiduciary.","Approval from an asset fiduciary over a â€¦","A <code>PolicyEngine</code> is the entity responsible for coordination â€¦","System-wide configuration for a policy engine.","Errors that can arise during a transaction approval â€¦","At least one asset fiduciary rejected the request; the â€¦","Context for why an asset fiduciary rejected a â€¦","The set of valid outcomes from a <code>PolicyEngine</code> decision.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the policy engine interface according to the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Starts a full DAMS server stack based on the given config.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,5,0,2,5,6,2,5,6,2,5,6,2,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,2,2,5,6,2,5,6,2,5,6,2,5,6,64,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,65,66,67,68,69,70,71,72,73,0,0,0,0,0,0,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,48,0,0,0,0,0,48,0,0,45,47,45,48,49,50,51,47,45,48,49,50,51,47,45,47,45,47,45,47,45,48,49,50,51,51,47,45,48,49,50,51,74,47,45,48,49,50,51,47,45,48,49,50,51,45,45,74,47,45,47,45,51,47,45,48,49,50,51,47,45,48,49,50,51,47,45,48,49,50,51,45,47,45,48,49,50,51,75,76,0,0,55,55,60,55,60,55,55,60,55,60,55,60,55,55,60,55,60,55,55,55,55,60,60,0,55,60,55,60,55,60,55,60],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],0,[[2,3],4],[[5,3],4],[[6,3],4],[[]],[[]],[[]],[7,2],[7,5],[7,6],[[]],[[]],[[]],[[],8],[[],8],[[],8],[2,9],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,0,[[12,13,[15,[14]],16],9],[[]],[[]],[12,12],[[]],[17,9],[[12,[0,[[19,[18]],20]],[21,[16]],22,23],9],[[12,13,24,25],9],[[12,13],9],[12,9],[[12,24],9],[[12,13],9],[[12,3],4],[[]],[[12,13,16],9],[[]],[[],8],[[12,13,[15,[26]]],9],[[]],[[],10],[[],10],[[],11],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[27,3],4],[[27,3],4],[[]],[28,27],[29,27],[30,27],[31,27],[32,27],[33,27],[34,27],[35,27],[36,27],[[]],[[],8],[27,[[21,[37]]]],[[],38],[[],10],[[],10],[[],11],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,3],4],[[40,3],4],[[41,3],4],[[42,3],4],[[43,3],4],[[44,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[45,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[45,45],[[]],[[]],[[],[[10,[47]]]],[[],[[10,[45]]]],[[47,3],4],[[45,3],4],[[48,3],4],[[49,3],4],[[50,3],4],[[51,3],4],[[51,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[45,[[10,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[45,52],[45,52],[53,[[10,[48,51]]]],[47,10],[45,10],[[]],[[]],[[],38],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[45,54],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],[[]],[[]],[[]],[[]],[55,60],[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],0,[[55,3],4],[[60,3],4],[[]],[[]],[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],[[]],[[]],[[],8],[[],8],[[12,61,[63,[62]]],[[10,[55,27]]]],[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],[[55,[8,[[57,[56]]]]],[[59,[[58,[9]]]]]],0,0,[61,9],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[]],[[]]],"p":[[3,"App"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Server"],[3,"Run"],[3,"ArgMatches"],[3,"Request"],[8,"Future"],[4,"Result"],[3,"TypeId"],[3,"Database"],[3,"UserId"],[3,"Secret"],[3,"Encrypted"],[3,"KeyId"],[3,"DatabaseSpec"],[3,"LogIdentifier"],[8,"Into"],[8,"Send"],[4,"Option"],[4,"ClientAction"],[4,"Outcome"],[3,"AccountName"],[3,"ServerRegistration"],[3,"StorageKey"],[4,"DamsServerError"],[4,"Error"],[4,"ProtocolError"],[3,"Error"],[3,"Error"],[4,"VarError"],[3,"Error"],[3,"Status"],[3,"Error"],[4,"DamsError"],[8,"Error"],[3,"String"],[3,"Authenticate"],[3,"CreateStorageKey"],[3,"Generate"],[3,"Register"],[3,"Retrieve"],[3,"RetrieveStorageKey"],[3,"PolicyEngineConfig"],[3,"Vec"],[3,"AssetFiduciaryConfig"],[4,"TransactionApprovalDecision"],[3,"FiduciaryApproval"],[3,"RejectionContext"],[4,"PolicyEngineError"],[15,"u16"],[3,"TransactionApprovalRequest"],[15,"bool"],[3,"DamsKeyServer"],[3,"Message"],[3,"Streaming"],[3,"Box"],[3,"Pin"],[3,"Context"],[3,"Config"],[3,"Service"],[3,"Arc"],[13,"Run"],[13,"Dams"],[13,"Hyper"],[13,"Io"],[13,"Bson"],[13,"OpaqueProtocol"],[13,"TonicStatus"],[13,"TonicTransport"],[13,"EnvVar"],[13,"MongoDb"],[8,"PolicyEngine"],[13,"Approve"],[13,"Reject"]]},\
"dams_tests":{"doc":"","t":[5],"n":["main"],"q":["dams_tests"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"key_server_cli":{"doc":"","t":[4,13,11,11,11,11,11,11,11,11,5,11,11,11,11,12],"n":["Cli","Server","borrow","borrow_mut","clap","fmt","from","from_clap","into","into_request","main","try_from","try_into","type_id","vzip","0"],"q":["key_server_cli","","","","","","","","","","","","","","","key_server_cli::Cli"],"d":["","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,0,2,2,2,2,9],"f":[0,0,[[]],[[]],[[],1],[[2,3],4],[[]],[5,2],[[]],[[],6],[[]],[[],7],[[],7],[[],8],[[]],0],"p":[[3,"App"],[4,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Request"],[4,"Result"],[3,"TypeId"],[13,"Server"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
