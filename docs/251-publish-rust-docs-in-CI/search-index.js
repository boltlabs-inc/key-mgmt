var searchIndex = JSON.parse('{\
"key_server_cli":{"doc":"","t":[4,13,11,11,11,11,11,11,11,11,5,11,11,11,11,12],"n":["Cli","Server","borrow","borrow_mut","clap","fmt","from","from_clap","into","into_request","main","try_from","try_into","type_id","vzip","0"],"q":["key_server_cli","","","","","","","","","","","","","","","key_server_cli::Cli"],"d":["","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,0,2,2,2,2,9],"f":[0,0,[[]],[[]],[[],1],[[2,3],4],[[]],[5,2],[[]],[[],6],[[]],[[],7],[[],7],[[],8],[[]],0],"p":[[3,"App"],[4,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Request"],[4,"Result"],[3,"TypeId"],[13,"Server"]]},\
"lock_keeper":{"doc":"Cryptography, protocols, and other shared types and â€¦","t":[13,4,13,13,13,13,2,13,13,13,4,13,13,4,0,0,11,11,11,11,11,11,0,11,11,11,11,0,0,0,11,11,0,11,11,11,11,11,11,11,14,11,11,11,11,11,11,0,0,0,0,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,0,0,11,11,11,12,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,13,13,3,3,3,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,17,17,17,17,17,17,5,5,5,5,5,5,5,17,17,17,17,17,17,5,5,5,5,5,5,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,11,11,11,11,11,12,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,8,3,16,16,16,11,10,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,8,10,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,6,0,0,0,0,0,0,0,0,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["Authenticate","ClientAction","CreateStorageKey","Export","Generate","LocalOnly","LockKeeperError","Null","Register","Retrieve","RetrieveContext","RetrieveStorageKey","ServerSpawned","TestLogs","audit_event","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","config","crypto","defaults","deserialize","deserialize","error","fmt","fmt","fmt","fmt","from","from","from","impl_message_conversion","into","into","into","into_request","into_request","into_request","keys","opaque_storage","pem_utils","rpc","serialize","serialize","timeout","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","user","vzip","vzip","vzip","0","AuditEvent","EventStatus","Failed","Started","Successful","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","fmt","from","from","into","into","into_request","into_request","new","serialize","serialize","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blockchain","ECDSA","EVM","SignatureScheme","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","signature_scheme","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Channel","ClientChannel","ServerChannel","borrow","borrow_mut","create","create","create","create","fmt","from","into","into_request","receive","send","send","send","send","send_error","send_error","try_from","try_into","type_id","vzip","client","opaque","server","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","from_str","into","into_request","load","serialize","server_location","server_location","tls_config","to_owned","trust_certificate","try_from","try_into","type_id","vzip","OpaqueCipherSuite","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","Config","DatabaseSpec","Service","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone","clone_into","clone_into","clone_into","connection_timeout","database","db_name","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from_str","into","into","into","into_request","into_request","into_request","load","max_message_length","max_pending_connection_retries","message_timeout","mongodb_uri","opaque_path","opaque_server_key","port","private_key","serialize","serialize","serialize","services","tls_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","KeyDerivationFailed","KeyId","OpaqueExportKey","OpaqueSessionKey","RandomNumberGeneratorFailed","Secret","SigningKeyPair","StorageKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_and_encrypt","create_and_encrypt","create_and_encrypt_storage_key","decrypt_secret","decrypt_secret","decrypt_storage_key","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","generate","get_hash","hash","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ne","ne","ne","ne","ne","remote_generate","serialize","serialize","serialize","sign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","client","server","ACCOUNT_NAME","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","USER_ID","config_path","connection_timeout","max_message_length","max_note_length","max_pending_connection_retries","message_timeout","port","ACCOUNT_NAME","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","USER_ID","address","config_path","max_message_length","max_pending_connection_retries","message_timeout","port","Bincode","Crypto","InvalidMessage","InvalidOpaqueDirectory","InvalidPrivateKey","InvalidUri","Io","LockKeeperError","NoMessageReceived","OpaqueProtocol","ProjectDirs","Rustls","TokioSender","Toml","TonicStatus","WebPki","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","Delegated","DigitalAssetPublicKey","KeyInfo","KeyMaterial","Passive","SelfCustodial","SharedControl","Unilateral","UsePermission","UseRestriction","UserPolicySpecification","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","create_or_retrieve_server_key_opaque","read_certificates","read_private_key","Message","borrow","borrow_mut","clear","clone","clone_into","content","default","encoded_len","eq","fmt","from","into","into_request","lock_keeper_rpc_client","lock_keeper_rpc_server","ne","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","type_id","vzip","LockKeeperRpcClient","accept_compressed","authenticate","borrow","borrow_mut","clone","clone_into","connect","create_storage_key","fmt","from","generate","into","into_request","new","register","retrieve","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","AuthenticateStream","CreateStorageKeyStream","GenerateStream","LockKeeperRpc","LockKeeperRpcServer","RegisterStream","RetrieveStorageKeyStream","RetrieveStream","accept_compressed","authenticate","borrow","borrow_mut","call","call","clone","clone_into","create_storage_key","fmt","from","from_arc","generate","into","into_request","new","poll_ready","poll_ready","register","retrieve","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","WithTimeout","with_timeout","AssetId","TarId","Transaction","TransactionApprovalRequest","TransactionSignature","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Message","MessageStream","authenticate","create_storage_key","generate","register","retrieve","retrieve_storage_key","client","server","AuthenticateFinish","AuthenticateStart","account_name","account_name","borrow","borrow","borrow_mut","borrow_mut","credential_finalization","credential_request","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuthenticateFinish","AuthenticateStart","SendUserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","credential_response","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","serialize","serialize","serialize","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","client","server","RequestUserId","SendStorageKey","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","storage_key","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKeyResult","SendUserId","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","client","server","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","ciphertext","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RegisterFinish","RegisterStart","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_request","registration_upload","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RegisterFinish","RegisterStart","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_response","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","Request","borrow","borrow_mut","context","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","stored_secret","try_from","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","ciphertext","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","vzip","AccountName","StoredSecret","User","UserId","account_name","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","into","into","into","into","into_iter","into_parts","into_request","into_request","into_request","into_request","key_id","ne","ne","new","new","new","retrieved","secret","secrets","serialize","serialize","serialize","serialize","server_registration","storage_key","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","vzip","vzip","vzip","vzip"],"q":["lock_keeper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::TestLogs","lock_keeper::audit_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::channel","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::config","","","lock_keeper::config::client","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::config::opaque","","","","","","","","","","","lock_keeper::config::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::CryptoError","lock_keeper::defaults","","lock_keeper::defaults::client","","","","","","","","","","","","","lock_keeper::defaults::server","","","","","","","","","","","","lock_keeper::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error::LockKeeperError","","","","","","","","","","lock_keeper::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::opaque_storage","lock_keeper::pem_utils","","lock_keeper::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::timeout","","lock_keeper::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types","","","","","","","","lock_keeper::types::authenticate","","lock_keeper::types::authenticate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::authenticate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::create_storage_key","","lock_keeper::types::create_storage_key::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::create_storage_key::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::generate","","lock_keeper::types::generate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::generate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::register","","lock_keeper::types::register::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::register::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::retrieve","","lock_keeper::types::retrieve::client","","","","","","","","","","","","","","","","","lock_keeper::types::retrieve::server","","","","","","","","","","","","","","","lock_keeper::types::retrieve_storage_key","","lock_keeper::types::retrieve_storage_key::client","","","","","","","","","","","","","","","lock_keeper::types::retrieve_storage_key::server","","","","","","","","","","","","","","","lock_keeper::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Options for actions the Lock Keeper client can take.","","","","","","","","","Options for the asset ownerâ€™s intended use of a secret","","Server successfully serving at address described by â€¦","Logs used to verify that an operation completed in the â€¦","Audit events, and associated fields and types","Blockchain abstraction.","","","","","","","","","","","","","Application-specific cryptographic types and operations.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates <code>TryFrom</code> implementations to and from the <code>Message</code> â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Digital asset keys and descriptions.","","","","","","","","","","Library for blockchains, transactions, and requests for â€¦","","","","","","","","","","","Models for the first pass of MongoDB integration.","","","","","A single entry that specifies the actor, action, outcome, â€¦","Options for the outcome of a given action in a <code>AuditEvent</code>","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Options for type of blockchain.","The ECDSA signature scheme","","Indicator trait to identify objects that represent a â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Identify signature scheme that corresponds to each â€¦","","","","","","","","","","A two-way channel between a client and server used to â€¦","","","","","Create a server-side <code>Channel</code> that sends error codes in â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","Create a server-side <code>Channel</code> that sends error codes in â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Receive the next message on the channel and convert it to â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted â€¦","","","Universally unique identifier for a stored secret or â€¦","An export key is secure key material produced as client â€¦","A session key is produced as shared output for client and â€¦","","An arbitrary secret.","An ECDSA signing key pair, including a public component â€¦","A storage key is a default-length symmetric encryption key â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create and encrypt a new secret. This is part of the â€¦","Create and encrypt a new signing key. This is part of the â€¦","Create an encrypted storage key. This is part of the â€¦","Decrypt a secret. This should be run as part of the â€¦","Decrypt a signing key. This should be run as part of the â€¦","Decrypt a storage key. This should be run as part of the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Generate a new, random <code>KeyId</code> for the given <code>UserId</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Create a new <code>SigningKeyPair</code>. This must be run by the â€¦","","","","Compute an ECDSA signature on the given message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Use permission that delegates signing authority to a â€¦","Public key portion of a digital asset key pair.","Convenient grouping of the non-secret components of a â€¦","Key material that is generated externally to the system.","Use permission that refers to a digital asset key that was â€¦","Use permission that assigns key custody to the asset â€¦","Use restriction that assigns veto power to a given set of â€¦","Use restriction that does not assign veto power to a given â€¦","A use permission is a type that defines the degree to â€¦","A use restriction is a type that defines what entities â€¦","Specification of a user-set policy. This describes the set â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the <code>ServerSetup</code> used for OPAQUE authentication, â€¦","Returns all certificates in the pemfile at the given path","Returns the first private key found in the pemfile at the â€¦","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given â€¦","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Compress requests with the given encoding.","","","","","","","","Server streaming response type for the Authenticate method.","Server streaming response type for the CreateStorageKey â€¦","Server streaming response type for the Generate method.","Generated trait containing gRPC methods that should be â€¦","","Server streaming response type for the Register method.","Server streaming response type for the RetrieveStorageKey â€¦","Server streaming response type for the Retrieve method.","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","","Unique ID for a digital asset.","Unique ID for a <code>TransactionApprovalRequest</code>.","A transaction describes the transfer of a digital asset â€¦","A transaction approval request is used to log a request â€¦","Signature on a <code>Transaction</code> under a digital asset key.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass account name and registration-finish message from â€¦","Pass account name and registration-start message from â€¦","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful.","Check if user exists and return OPAQUE message if so","Return authenticated user id if authentication worked.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID to server","pass user ID and encrypted secret","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","return new requested key ID","Return true if successful","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and registration-finish message from OPAQUE","pass user ID and registration-start message from OPAQUE","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","Check if user exists and return successful if not","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and key ID to server","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","return new requested key and key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","pass user ID to server","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","return encrypted storage key","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Account name used as human-memorable identifier for a user â€¦","Wrapper around an <code>Encrypted&lt;Secret&gt;</code> and its <code>KeyId</code>","One user with a set of arbitrary secrets and a â€¦","Unique ID for a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,2,1,2,0,2,1,1,0,1,6,0,0,0,1,2,6,1,2,6,0,1,2,1,2,0,0,0,1,2,0,1,2,6,6,1,2,6,0,1,2,6,1,2,6,0,0,0,0,1,2,0,1,2,6,0,1,2,6,1,2,6,1,2,6,0,0,1,2,6,128,0,0,10,10,10,10,11,10,11,10,11,10,11,11,10,11,10,11,10,11,11,10,11,11,10,11,10,11,10,11,10,11,0,0,15,0,15,16,15,16,15,15,15,16,15,16,15,16,15,16,15,16,15,16,15,15,15,16,15,16,15,16,15,16,0,0,0,22,22,25,21,22,22,22,22,22,22,22,25,21,22,22,25,22,22,22,22,22,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,36,36,36,36,36,36,36,36,36,36,0,0,0,39,37,38,39,37,38,39,39,37,38,39,37,38,39,39,37,38,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,39,39,39,38,39,39,39,39,37,38,39,37,39,37,38,39,37,38,39,37,38,39,37,38,39,37,38,39,42,0,42,0,42,42,0,0,0,42,0,0,0,41,42,44,45,46,47,48,13,41,42,44,45,46,47,48,13,41,42,44,45,46,47,48,13,41,42,44,45,46,47,48,13,41,45,47,44,44,44,41,44,13,41,44,45,47,48,13,41,44,45,47,48,13,41,42,42,44,45,46,47,48,13,41,42,44,45,46,46,47,47,48,13,13,13,13,41,42,44,45,46,47,48,13,13,41,42,44,45,46,47,48,13,41,44,47,48,13,45,41,44,13,45,41,42,44,45,46,47,48,13,42,41,41,42,44,45,45,46,47,48,48,13,41,42,44,45,46,47,48,13,41,42,44,45,46,47,48,13,41,42,44,45,46,47,48,13,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,130,131,132,133,134,135,136,137,138,139,0,0,0,0,0,0,0,0,0,0,0,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,71,72,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,73,74,71,72,75,76,77,78,79,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,111,111,111,0,0,111,111,111,112,111,112,112,112,112,112,112,111,112,112,112,111,112,112,112,112,112,111,111,111,112,112,112,112,112,112,112,0,140,0,0,0,0,0,122,120,121,123,124,122,120,121,123,124,120,121,120,121,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,120,121,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,122,120,121,123,124,0,0,0,0,0,0,0,0,0,0,0,0,98,88,98,88,98,88,88,98,98,88,98,88,98,88,98,88,98,88,98,88,98,98,88,88,98,88,98,88,98,88,0,0,0,89,90,86,89,90,86,89,89,90,86,89,90,86,89,90,86,89,90,86,89,90,86,89,90,86,90,89,89,90,90,86,86,89,90,86,89,90,86,86,89,90,86,0,0,0,0,91,91,92,91,92,91,92,91,92,91,92,91,92,91,92,91,92,92,91,91,92,92,91,92,91,92,92,91,92,0,0,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,94,93,93,94,94,93,94,93,94,93,93,94,0,0,0,0,95,96,95,96,96,95,96,95,96,95,96,95,96,95,96,95,96,95,95,96,96,95,96,95,96,95,96,95,96,0,0,97,87,97,87,97,87,97,87,97,87,97,87,97,87,97,97,87,87,97,97,87,87,97,87,97,87,97,87,0,0,0,0,99,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,99,100,100,99,100,99,100,99,100,0,0,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,102,101,101,102,102,101,102,101,102,101,102,0,0,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,126,49,12,49,12,125,126,49,12,125,126,49,12,49,12,49,49,12,125,126,49,12,49,12,49,49,12,12,125,126,49,12,125,126,12,49,12,125,126,49,126,49,12,125,126,125,49,12,49,125,126,125,125,126,49,12,125,126,126,126,49,12,49,12,49,12,125,126,49,12,125,126,49,12,125,126,126,49,12,125,126],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[[]],[[]],0,0,0,[[],[[3,[1]]]],[[],[[3,[2]]]],0,[[1,4],5],[[2,4],5],[[6,4],5],[[6,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],0,0,0,0,[1,3],[2,3],0,[[]],[[]],[[],8],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[10]]]],[[],[[3,[11]]]],[[10,4],5],[[11,4],5],[[11,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[[12,[14,[13]],1,10],11],[10,3],[11,3],[[],8],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[[]],[[],[[3,[15]]]],[[],[[3,[16]]]],[[15,4],5],[[16,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[15,3],[16,3],[15,17],[[]],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],[[[19,[18]]]],[[[20,[18]],[19,[18]]],21],[[[19,[18]]]],[[[20,[18]],[19,[18]]],[[22,[18]]]],[[[22,[23]],4],5],[[]],[[]],[[],7],[22,24],[[25,[26,[18]]],24],[[21,[26,[18]]],24],[[[22,[[3,[18,27]]]],[26,[18]]],24],[[[22,[18]],[26,[18]]],24],[[25,[28,[27]]],24],[[[22,[[3,[18,27]]]],[28,[27]]],24],[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[29,29],[[]],[[],29],[[],[[3,[29]]]],[[29,4],5],[[]],[30,[[3,[29]]]],[[]],[[],7],[[[32,[31]]],24],[29,3],[29,[[3,[33,34]]]],0,[29,[[3,[35,34]]]],[[]],0,[[],3],[[],3],[[],9],[[]],0,[[]],[[]],[[36,4],5],[[]],[[]],[[],7],[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[37,37],[38,38],[39,39],[[]],[[]],[[]],0,0,0,[[],[[3,[37]]]],[[],[[3,[38]]]],[[],[[3,[39]]]],[[37,4],5],[[38,4],5],[[39,4],5],[[]],[[]],[[]],[30,[[3,[37]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[[32,[31]]],24],0,0,0,0,0,0,0,0,[37,3],[38,3],[39,3],0,[39,[[3,[40,34]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,41],[42,42],[[[44,[43]]],[[44,[43]]]],[45,45],[46,46],[47,47],[48,48],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[48,49,13],[[3,[34]]]],[[48,49,13],[[3,[34]]]],[[47,49],[[3,[[44,[48]],34]]]],[[[44,[41]],48],[[3,[41,34]]]],[[[44,[45]],48],[[3,[45,34]]]],[[[44,[48]],47,49],[[3,[48,34]]]],[[],[[3,[41]]]],[[],[[3,[44]]]],[[],[[3,[13]]]],[[41,41],50],[[[44,[51]],44],50],[[45,45],50],[[47,47],50],[[48,48],50],[[13,13],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[41,4],5],[[42,4],5],[[42,4],5],[[[44,[23]],4],5],[[45,4],5],[[46,4],5],[[47,4],5],[[48,4],5],[[13,4],5],[[]],[[]],[[]],[[]],[[[54,[52,53]]],46],[[]],[[]],[[[54,[52,53]]],47],[[]],[[]],[49,[[3,[13,34]]]],[[],55],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[41,41],50],[[[44,[51]],44],50],[[47,47],50],[[48,48],50],[[13,13],50],[[49,13],45],[41,3],[44,3],[13,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[[56,[52]]],[[3,[41]]]],[[],3],[[],3],[[],3],[[],3],[[[56,[52]]],[[3,[45]]]],[[],3],[[],3],[[[56,[52]]],[[3,[48]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],[[3,[57,34]]]],[[],[[14,[58]]]],[[],59],[[],55],[[],59],[[],58],[[],60],0,0,0,0,0,0,[[],61],[[],[[3,[57,34]]]],[[],59],[[],59],[[],58],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[34,4],5],[[34,4],5],[62,34],[63,34],[64,34],[42,34],[[]],[65,34],[66,34],[67,34],[27,34],[68,34],[69,34],[[]],[[],7],[34,[[14,[70]]]],[[],8],[[],3],[[],3],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[],72],[[],[[3,[73]]]],[[],[[3,[74]]]],[[],[[3,[71]]]],[[],[[3,[72]]]],[[],[[3,[75]]]],[[],[[3,[76]]]],[[],[[3,[77]]]],[[],[[3,[78]]]],[[],[[3,[79]]]],[[73,4],5],[[74,4],5],[[71,4],5],[[72,4],5],[[75,4],5],[[76,4],5],[[77,4],5],[[78,4],5],[[79,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[73,3],[74,3],[71,3],[72,3],[75,3],[76,3],[77,3],[78,3],[79,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[80,39],[[3,[[83,[36,[82,[81]]]],34]]]],[[[32,[31]]],[[3,[[56,[84]],34]]]],[[[32,[31]]],[[3,[85,34]]]],0,[[]],[[]],[18],[18,18],[[]],0,[[],18],[18,59],[[18,18],50],[[18,4],5],[[]],[[]],[[],7],0,0,[[18,18],50],[[]],[86,[[3,[18]]]],[87,[[3,[18]]]],[88,[[3,[18]]]],[89,[[3,[18]]]],[90,[[3,[18]]]],[91,[[3,[18]]]],[92,[[3,[18]]]],[93,[[3,[18]]]],[94,[[3,[18]]]],[95,[[3,[18]]]],[96,[[3,[18]]]],[[],3],[97,[[3,[18]]]],[98,[[3,[18]]]],[99,[[3,[18]]]],[100,[[3,[18]]]],[101,[[3,[18]]]],[102,[[3,[18]]]],[103,[[3,[18]]]],[104,[[3,[18]]]],[105,[[3,[18]]]],[106,[[3,[18]]]],[[],3],[[],9],[[]],0,[[107,108],107],[[107,109],24],[[]],[[]],[[[107,[43]]],[[107,[43]]]],[[]],[[],24],[[107,109],24],[[[107,[23]],4],5],[[]],[[107,109],24],[[]],[[],7],[[],107],[[107,109],24],[[107,109],24],[[107,109],24],[[107,108],107],[[]],[[],3],[[],3],[[],9],[[]],[[],[[107,[110]]]],[33,107],0,0,0,0,0,0,0,0,[[[112,[111]],108],[[112,[111]]]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[]],[[]],[115],[[112,115]],[[[112,[111]]],[[112,[111]]]],[[]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[[112,[[0,[23,111]]]],4],5],[[]],[[[116,[111]]],[[112,[111]]]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[]],[[],7],[111,[[112,[111]]]],[117,[[118,[3]]]],[[112,117],[[118,[3]]]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[[7,[[19,[18]]]]],[[114,[[113,[24]]]]]],[[[112,[111]],108],[[112,[111]]]],[[]],[[],3],[[],3],[[],9],[[]],[111,[[110,[[112,[111]]]]]],0,[58,119],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,120],[121,121],[[]],[[]],[[],[[3,[122]]]],[[],[[3,[120]]]],[[],[[3,[121]]]],[[],[[3,[123]]]],[[],[[3,[124]]]],[[122,4],5],[[120,4],5],[[121,4],5],[[123,4],5],[[124,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[122,3],[120,3],[121,3],[123,3],[124,3],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[3,[98]]]],[[],[[3,[88]]]],[[98,4],5],[[88,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[98,3],[88,3],[18,[[3,[98]]]],[[],3],[[],3],[18,[[3,[88]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[3,[89]]]],[[],[[3,[90]]]],[[],[[3,[86]]]],[[89,4],5],[[90,4],5],[[86,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[89,3],[90,3],[86,3],0,[[],3],[18,[[3,[89]]]],[[],3],[18,[[3,[90]]]],[18,[[3,[86]]]],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[91]]]],[[],[[3,[92]]]],[[91,4],5],[[92,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[91,3],[92,3],0,[[],3],[18,[[3,[91]]]],[[],3],[18,[[3,[92]]]],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[93]]]],[[],[[3,[94]]]],[[93,4],5],[[94,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[93,3],[94,3],0,[18,[[3,[93]]]],[[],3],[18,[[3,[94]]]],[[],3],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[3,[95]]]],[[],[[3,[96]]]],[[95,4],5],[[96,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[95,3],[96,3],[[],3],[18,[[3,[95]]]],[[],3],[18,[[3,[96]]]],[[],3],[[],3],[[],9],[[],9],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[97]]]],[[],[[3,[87]]]],[[97,4],5],[[87,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[97,3],[87,3],0,[[],3],[18,[[3,[97]]]],[[],3],[18,[[3,[87]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[99]]]],[[],[[3,[100]]]],[[99,4],5],[[100,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,0,[99,3],[100,3],[[],3],[18,[[3,[99]]]],[[],3],[18,[[3,[100]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[101]]]],[[],[[3,[102]]]],[[101,4],5],[[102,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[101,3],[102,3],0,[[],3],[18,[[3,[101]]]],[[],3],[18,[[3,[102]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],0,[[],[[3,[106]]]],[[106,4],5],[[]],[[]],[[],7],0,[106,3],[18,[[3,[106]]]],[[],3],[[],3],[[],9],0,[[]],0,[[]],[[]],[[],[[3,[105]]]],[[105,4],5],[[]],[[]],[[],7],[105,3],0,[18,[[3,[105]]]],[[],3],[[],3],[[],9],[[]],0,0,0,[[]],[[]],[[],[[3,[104]]]],[[104,4],5],[[]],[[]],[[],7],[104,3],[[],3],[18,[[3,[104]]]],[[],3],[[],9],0,[[]],0,[[]],[[]],0,[[],[[3,[103]]]],[[103,4],5],[[]],[[]],[[],7],[103,3],[[],3],[18,[[3,[103]]]],[[],3],[[],9],[[]],0,0,0,0,0,[49],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[12,12],[[]],[[]],[[],49],[[],[[3,[49]]]],[[],[[3,[12]]]],[[],[[3,[125]]]],[[],[[3,[126]]]],[[49,49],50],[[12,12],50],[[],50],[[],50],[[49,4],5],[[49,4],5],[[12,4],5],[[12,4],5],[[125,4],5],[[126,4],5],[[]],[[]],[[]],[[]],[30,[[3,[12]]]],[[]],[[]],[[]],[[]],[49],[126],[[],7],[[],7],[[],7],[[],7],0,[[49,49],50],[[12,12],50],[[],[[3,[49,34]]]],[[[44,[41]],13],125],[[49,12,[127,[36]]],126],0,0,0,[49,3],[12,3],[125,3],[126,3],0,0,[[]],[[]],[[],8],[[],8],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]]],"p":[[4,"ClientAction"],[4,"RetrieveContext"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"TestLogs"],[3,"Request"],[3,"String"],[3,"TypeId"],[4,"EventStatus"],[3,"AuditEvent"],[3,"AccountName"],[3,"KeyId"],[4,"Option"],[4,"Blockchain"],[3,"ECDSA"],[8,"SignatureScheme"],[3,"Message"],[3,"Streaming"],[3,"Sender"],[6,"ClientChannel"],[3,"Channel"],[8,"Debug"],[8,"Future"],[6,"ServerChannel"],[8,"TryInto"],[3,"Status"],[8,"Into"],[3,"Config"],[15,"str"],[3,"Path"],[8,"AsRef"],[3,"Uri"],[4,"LockKeeperError"],[3,"ClientConfig"],[3,"OpaqueCipherSuite"],[3,"Config"],[3,"DatabaseSpec"],[3,"Service"],[3,"ServerConfig"],[3,"Secret"],[4,"CryptoError"],[8,"Clone"],[3,"Encrypted"],[3,"SigningKeyPair"],[3,"OpaqueSessionKey"],[3,"OpaqueExportKey"],[3,"StorageKey"],[3,"UserId"],[15,"bool"],[8,"PartialEq"],[15,"u8"],[6,"U64"],[3,"GenericArray"],[15,"u64"],[3,"Vec"],[3,"PathBuf"],[3,"Duration"],[15,"usize"],[15,"u16"],[4,"IpAddr"],[3,"InvalidUri"],[3,"Error"],[6,"Error"],[3,"SendError"],[4,"ProtocolError"],[4,"Error"],[3,"Error"],[4,"Error"],[8,"Error"],[3,"KeyMaterial"],[3,"SelfCustodial"],[3,"DigitalAssetPublicKey"],[3,"KeyInfo"],[3,"Delegated"],[3,"Passive"],[3,"UserPolicySpecification"],[3,"SharedControl"],[3,"Unilateral"],[3,"StdRng"],[3,"Ristretto255"],[3,"PrivateKey"],[3,"ServerSetup"],[3,"Certificate"],[3,"PrivateKey"],[3,"SendUserId"],[3,"Store"],[3,"AuthenticateFinish"],[3,"AuthenticateStart"],[3,"AuthenticateFinish"],[3,"RequestUserId"],[3,"SendStorageKey"],[3,"SendUserId"],[3,"CreateStorageKeyResult"],[3,"Generate"],[3,"Store"],[3,"Generate"],[3,"AuthenticateStart"],[3,"RegisterStart"],[3,"RegisterFinish"],[3,"RegisterStart"],[3,"RegisterFinish"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"Request"],[3,"LockKeeperRpcClient"],[4,"CompressionEncoding"],[8,"IntoStreamingRequest"],[3,"InterceptedService"],[8,"LockKeeperRpc"],[3,"LockKeeperRpcServer"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"Timeout"],[3,"TarId"],[3,"AssetId"],[3,"TransactionApprovalRequest"],[3,"Transaction"],[3,"TransactionSignature"],[3,"StoredSecret"],[3,"User"],[3,"ServerRegistration"],[13,"ServerSpawned"],[13,"KeyDerivationFailed"],[13,"Crypto"],[13,"Bincode"],[13,"Io"],[13,"InvalidUri"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"TokioSender"],[13,"Toml"],[13,"TonicStatus"],[13,"WebPki"],[8,"WithTimeout"]]},\
"lock_keeper_client":{"doc":"This crate is an implementation of a client to a key â€¦","t":[2,2,0,0,0,0,5,5,5,5,5,5,13,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["LockKeeperClient","LockKeeperClientError","api","client","error","arbitrary_secrets","create_digital_asset_key","request_transaction_signature","retrieve_audit_event_log","retrieve_public_key_by_id","retrieve_public_keys","set_user_key_policy","ArbitraryKey","ExportedKey","LocalStorage","None","RetrieveResult","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","LockKeeperClient","Password","account_name","as_bytes","authenticated_client","borrow","borrow","borrow_mut","borrow_mut","close","default","fmt","fmt","from","from","from_str","generate_and_store","into","into","into_request","into_request","register","retrieve","to_string","tonic_client","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","AccountAlreadyRegistered","HttpNotAllowed","InvalidAccount","InvalidLogin","LockKeeper","LockKeeperClientError","LockKeeperCrypto","OpaqueProtocol","ServerReturnedFailure","TonicMetadata","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0"],"q":["lock_keeper_client","","","","","lock_keeper_client::api","","","","","","","lock_keeper_client::api::arbitrary_secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::api::arbitrary_secrets::RetrieveResult","","lock_keeper_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error::LockKeeperClientError","","","","",""],"d":["","","Full implementation of the public API for the Lock Keeper â€¦","Client object to interact with the key server.","","","Generate a new, distributed digital asset key with the â€¦","Request a signature on a transaction from the key server.","Retrieve the log of audit events from the key server for a â€¦","Retrieve the public key info for the specified key â€¦","Retrieve the public key info for all keys associated with â€¦","Set an asset-owner-specified key policy for a delegated â€¦","","","","","Ways of returning a key from the retrieval process based â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A <code>LockKeeperClient</code> is an abstraction over client â€¦","","Get <code>AccountName</code> for the authenticated client.","","Authenticate to the Lock Keeper key server as a previously â€¦","","","","","Close a session.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Generate and store an arbitrary secret at the key server","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Register a new user who has not yet interacted with the â€¦","Retrieve an arbitrary secret from the key server by <code>KeyId</code>","","","","","","","","","Get <code>UserId</code> for the authenticated client.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,15,0,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,41,42,0,0,21,23,21,23,21,23,21,21,23,23,21,23,21,23,21,23,21,23,21,21,21,23,21,23,21,23,21,23,21,21,23,21,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,43,44,45,46,47,48],"f":[0,0,0,0,0,0,[[1,2,3,4],[[7,[5,6]]]],[8,[[7,[9,6]]]],[[1,[11,[10]]],[[7,[12,6]]]],[[1,10],[[7,[5,6]]]],[1,[[7,[[13,[5]],6]]]],[[1,10,14],[[7,[6]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[7,[15]]]],[[],[[7,[16]]]],[[15,17],18],[[16,17],18],[[]],[[]],[[]],[[]],[[],19],[[],19],[15,7],[16,7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[]],[[]],0,0,0,0,[21,22],[23],[[22,23,24],25],[[]],[[]],[[]],[[]],[21,[[7,[6]]]],[[],23],[[23,17],18],[[21,17],18],[[]],[[]],[26,[[7,[23]]]],[21,25],[[]],[[]],[[],19],[[],19],[[22,23,24],25],[[21,10,27],25],[23,12],[21,[[34,[[33,[[29,[28]],[32,[30,31]]]]]]]],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[21,1],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[6,17],18],[[6,17],18],[35,6],[[]],[36,6],[37,6],[38,6],[31,6],[39,6],[[]],[[],19],[6,[[11,[40]]]],[[],12],[[],7],[[],7],[[],20],[[]],0,0,0,0,0,0],"p":[[3,"UserId"],[4,"Blockchain"],[8,"UsePermission"],[8,"UseRestriction"],[3,"KeyInfo"],[4,"LockKeeperClientError"],[4,"Result"],[3,"TransactionApprovalRequest"],[3,"TransactionSignature"],[3,"KeyId"],[4,"Option"],[3,"String"],[3,"Vec"],[3,"UserPolicySpecification"],[4,"RetrieveResult"],[3,"LocalStorage"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"LockKeeperClient"],[3,"AccountName"],[3,"Password"],[3,"Config"],[8,"Future"],[15,"str"],[4,"RetrieveContext"],[3,"HttpConnector"],[3,"HttpsConnector"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Client"],[3,"LockKeeperRpcClient"],[4,"CryptoError"],[3,"InvalidMetadataValue"],[3,"Error"],[4,"ProtocolError"],[4,"LockKeeperError"],[8,"Error"],[13,"ArbitraryKey"],[13,"ExportedKey"],[13,"LockKeeper"],[13,"LockKeeperCrypto"],[13,"OpaqueProtocol"],[13,"TonicMetadata"],[13,"TonicStatus"],[13,"TonicTransport"]]},\
"lock_keeper_key_server":{"doc":"This crate is an implementation of a key server to a key â€¦","t":[2,0,0,0,0,0,0,3,3,13,4,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,8,3,4,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11],"n":["LockKeeperServerError","cli","database","error","operations","policy_engine","server","Cli","Run","Run","Server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","config","fmt","fmt","fmt","from","from","from","from_clap","from_clap","from_clap","into","into","into","into_request","into_request","into_request","run","server","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","Database","add_user_secret","borrow","borrow_mut","clone","clone_into","connect","create_audit_event","create_user","delete_user","drop","find_user","find_user_by_id","fmt","from","get_user_secret","into","into_request","set_storage_key","to_owned","try_from","try_into","type_id","vzip","AccountAlreadyRegistered","Bson","EnvVar","Hyper","InvalidAccount","Io","KeyNotFound","LockKeeper","LockKeeperServerError","MissingService","MongoDb","OpaqueProtocol","StorageKeyAlreadySet","StorageKeyNotSet","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","Authenticate","CreateStorageKey","Generate","Register","Retrieve","RetrieveStorageKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Approve","AssetFiduciaryConfig","FiduciaryApproval","PolicyEngine","PolicyEngineConfig","PolicyEngineError","Reject","RejectionContext","TransactionApprovalDecision","asset_fiduciaries","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","initialize","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","max_delegated","max_self_custodial","request_transaction_approval","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unilateral_control_allowed","vzip","vzip","vzip","vzip","vzip","vzip","0","0","Context","LockKeeperKeyServer","account_name","action","authenticate","borrow","borrow","borrow_mut","borrow_mut","context","create_storage_key","db","fmt","fmt","from","from","generate","into","into","into_request","into_request","key_id","new","register","retrieve","retrieve_storage_key","rng","service","start_lock_keeper_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["lock_keeper_key_server","","","","","","","lock_keeper_key_server::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::cli::Server","lock_keeper_key_server::database","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error::LockKeeperServerError","","","","","","","","","lock_keeper_key_server::operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::policy_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::policy_engine::TransactionApprovalDecision","","lock_keeper_key_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Database for key-servers.","","","Black-box policy engine API and supporting types.","","The keyMgmt server command-line interface.","Run the server.","","","","","","","","","","","","Path to a configuration file.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Run server commands.","","","","","","","","","","","","","","","Add a <code>StoredSecret</code> to a <code>User</code>â€™s list of arbitrary secrets","","","","","Connect to the MongoDB instance specified by the given â€¦","Create a new <code>AuditEvent</code> for the given actor, action, and â€¦","Create a new <code>User</code> with their authentication information â€¦","Delete a <code>User</code> by their <code>UserId</code>","Drop the inner database","Find a <code>User</code> by their human-readable <code>AccountName</code>.","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","Get a <code>User</code>â€™s <code>StoredSecret</code> based on its <code>KeyId</code>","Calls <code>U::from(self)</code>.","","Set the <code>storage_key</code> field for the <code>User</code> associated with a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All asset fiduciaries approved the request; there must be â€¦","Configuration for an asset fiduciary.","Approval from an asset fiduciary over a â€¦","A <code>PolicyEngine</code> is the entity responsible for coordination â€¦","System-wide configuration for a policy engine.","Errors that can arise during a transaction approval â€¦","At least one asset fiduciary rejected the request; the â€¦","Context for why an asset fiduciary rejected a â€¦","The set of valid outcomes from a <code>PolicyEngine</code> decision.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the policy engine interface according to the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Starts a full Lock Keeper server stack based on the given â€¦","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,5,0,2,5,6,2,5,6,2,5,6,2,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,2,2,5,6,2,5,6,2,5,6,2,5,6,61,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,62,63,64,65,66,67,68,69,70,0,0,0,0,0,0,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,45,0,0,0,0,0,45,0,0,42,44,42,45,46,47,48,44,42,45,46,47,48,44,42,44,42,44,42,44,42,45,46,47,48,48,44,42,45,46,47,48,71,44,42,45,46,47,48,44,42,45,46,47,48,42,42,71,44,42,44,42,48,44,42,45,46,47,48,44,42,45,46,47,48,44,42,45,46,47,48,42,44,42,45,46,47,48,72,73,0,0,57,57,52,52,57,52,57,52,52,57,52,57,52,57,52,52,57,52,57,57,52,52,52,52,57,57,0,52,57,52,57,52,57,52,57],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],0,[[2,3],4],[[5,3],4],[[6,3],4],[[]],[[]],[[]],[7,2],[7,5],[7,6],[[]],[[]],[[]],[[],8],[[],8],[[],8],[2,9],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,0,[[12,13,[15,[14]],16],9],[[]],[[]],[12,12],[[]],[17,9],[[12,18,19,20,21],9],[[12,13,18,22],9],[[12,13],9],[12,9],[[12,18],9],[[12,13],9],[[12,3],4],[[]],[[12,13,16],9],[[]],[[],8],[[12,13,[15,[23]]],9],[[]],[[],10],[[],10],[[],11],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[24,3],4],[[24,3],4],[25,24],[26,24],[27,24],[28,24],[29,24],[30,24],[[]],[31,24],[32,24],[33,24],[[]],[[],8],[24,[[19,[34]]]],[[],35],[[],10],[[],10],[[],11],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,3],4],[[37,3],4],[[38,3],4],[[39,3],4],[[40,3],4],[[41,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[42,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[42,42],[[]],[[]],[[],[[10,[44]]]],[[],[[10,[42]]]],[[44,3],4],[[42,3],4],[[45,3],4],[[46,3],4],[[47,3],4],[[48,3],4],[[48,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[10,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[42,49],[42,49],[50,[[10,[45,48]]]],[44,10],[42,10],[[]],[[]],[[],35],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[42,51],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],[[]],[[]],[[]],[[]],[[52,8,20],[[10,[57,31]]]],[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],0,[[52,3],4],[[57,3],4],[[]],[[]],[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],[[]],[[]],[[],8],[[],8],0,[[12,58,[60,[59]]],[[10,[52,24]]]],[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],[[52,[8,[[54,[53]]]]],[[56,[[55,[9]]]]]],0,0,[58,9],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[]],[[]]],"p":[[3,"App"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Server"],[3,"Run"],[3,"ArgMatches"],[3,"Request"],[8,"Future"],[4,"Result"],[3,"TypeId"],[3,"Database"],[3,"UserId"],[3,"Secret"],[3,"Encrypted"],[3,"KeyId"],[3,"DatabaseSpec"],[3,"AccountName"],[4,"Option"],[4,"ClientAction"],[4,"EventStatus"],[3,"ServerRegistration"],[3,"StorageKey"],[4,"LockKeeperServerError"],[4,"ProtocolError"],[4,"Error"],[3,"Error"],[3,"Error"],[4,"LockKeeperError"],[3,"Error"],[3,"Status"],[3,"Error"],[4,"VarError"],[8,"Error"],[3,"String"],[3,"Authenticate"],[3,"CreateStorageKey"],[3,"Generate"],[3,"Register"],[3,"Retrieve"],[3,"RetrieveStorageKey"],[3,"PolicyEngineConfig"],[3,"Vec"],[3,"AssetFiduciaryConfig"],[4,"TransactionApprovalDecision"],[3,"FiduciaryApproval"],[3,"RejectionContext"],[4,"PolicyEngineError"],[15,"u16"],[3,"TransactionApprovalRequest"],[15,"bool"],[3,"LockKeeperKeyServer"],[3,"Message"],[3,"Streaming"],[3,"Box"],[3,"Pin"],[3,"Context"],[3,"Config"],[3,"Service"],[3,"Arc"],[13,"Run"],[13,"LockKeeper"],[13,"Hyper"],[13,"Io"],[13,"Bson"],[13,"OpaqueProtocol"],[13,"TonicStatus"],[13,"TonicTransport"],[13,"EnvVar"],[13,"MongoDb"],[8,"PolicyEngine"],[13,"Approve"],[13,"Reject"]]},\
"lock_keeper_tests":{"doc":"","t":[5],"n":["main"],"q":["lock_keeper_tests"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
