var searchIndex = JSON.parse('{\
"key_server_cli":{"doc":"","t":[3,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Cli","augment_args","augment_args_for_update","borrow","borrow_mut","config","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","into_request","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["key_server_cli","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],0,[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],[[],8],[[]],[[],7],[[],7],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]]],"p":[[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"Request"],[3,"TypeId"]]},\
"lock_keeper":{"doc":"Cryptography, protocols, and other shared types and â€¦","t":[13,4,13,13,13,13,2,13,13,13,4,13,13,4,0,0,11,11,11,11,11,11,0,11,11,11,11,0,0,0,11,11,0,11,11,11,11,11,11,11,14,11,11,11,11,11,11,0,0,0,0,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,0,0,11,11,11,12,3,4,13,13,13,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,4,3,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,4,13,3,13,13,3,3,3,3,13,3,3,3,0,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,13,4,13,3,13,3,13,13,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,0,0,17,17,17,17,17,17,5,5,5,5,5,5,5,17,17,17,17,17,17,5,5,5,5,5,5,17,17,17,17,17,5,5,5,5,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,3,3,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,16,16,8,3,16,16,16,3,11,12,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,8,10,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,2,6,0,0,0,0,0,0,0,0,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["Authenticate","ClientAction","CreateStorageKey","Export","Generate","LocalOnly","LockKeeperError","Null","Register","Retrieve","RetrieveContext","RetrieveStorageKey","ServerSpawned","TestLogs","audit_event","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","config","crypto","defaults","deserialize","deserialize","error","fmt","fmt","fmt","fmt","from","from","from","impl_message_conversion","into","into","into","into_request","into_request","into_request","keys","opaque_storage","pem_utils","rpc","serialize","serialize","timeout","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","user","vzip","vzip","vzip","0","AuditEvent","EventStatus","Failed","Started","Successful","action","actor","borrow","borrow","borrow_mut","borrow_mut","date","deserialize","deserialize","fmt","fmt","fmt","from","from","into","into","into_request","into_request","new","secret_id","serialize","serialize","status","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blockchain","ECDSA","EVM","SignatureScheme","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","signature_scheme","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BUFFER_SIZE","Channel","ClientChannel","ServerChannel","borrow","borrow_mut","create","create","create","create","fmt","from","handle_send","into","into_request","receive","receiver","send","send","send","send","send_error","send_error","sender","try_from","try_into","type_id","vzip","client","opaque","server","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","from_str","into","into_request","load","serialize","server_location","server_location","tls_config","to_owned","trust_certificate","try_from","try_into","type_id","vzip","OpaqueCipherSuite","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","Config","DatabaseSpec","Service","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone","clone_into","clone_into","clone_into","connection_timeout","database","db_name","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from_str","into","into","into","into_request","into_request","into_request","load","max_message_length","max_pending_connection_retries","message_timeout","mongodb_uri","opaque_path","opaque_server_key","port","private_key","serialize","serialize","serialize","services","tls_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","KeyDerivationFailed","KeyId","MasterKey","OpaqueExportKey","OpaqueSessionKey","RandomNumberGeneratorFailed","Secret","SigningKeyPair","StorageKey","arbitrary_secret","associated_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_and_encrypt_storage_key","derive_master_key","deserialize","domain_separator","encrypt_storage_key","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","generate","generic","get_hash","hash","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","ne","ne","ne","ne","nonce","original_type","serialize","signing_key","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","Secret","borrow","borrow_mut","clone","clone_into","create_and_encrypt","deserialize","eq","equivalent","fmt","from","into","into_request","ne","serialize","to_owned","try_from","try_from","try_into","type_id","vzip","0","AssociatedData","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","EncryptionKey","KeyDerivationFailed","RandomNumberGeneratorFailed","Secret","associated_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","decrypt","decrypt_secret","decrypt_secret","decrypt_storage_key","default","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","generate","get_hash","get_hash","hash","hash","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","key","material","ne","ne","ne","ne","new","new","nonce","original_type","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_bytes","with_str","0","Signature","SigningKeyPair","SigningPublicKey","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_and_encrypt","domain_separator","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","generate","into","into","into","into_request","into_request","into_request","ne","original_type","public_key","remote_generate","sign","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","client","project_dirs","server","shared","ACCOUNT_NAME","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","USER_ID","config_path","connection_timeout","max_message_length","max_note_length","max_pending_connection_retries","message_timeout","port","ACCOUNT_NAME","APPLICATION","CONFIG_FILE","LOCAL_SERVER_URI","ORGANIZATION","USER_ID","address","config_path","max_message_length","max_pending_connection_retries","message_timeout","port","ACCOUNT_NAME","APPLICATION","LOCAL_SERVER_URI","ORGANIZATION","USER_ID","max_message_length","max_pending_connection_retries","message_timeout","port","Bincode","Crypto","InvalidMessage","InvalidOpaqueDirectory","InvalidPrivateKey","InvalidUri","Io","LockKeeperError","NoMessageReceived","OpaqueProtocol","ProjectDirs","Rustls","TokioSender","Toml","TonicStatus","WebPki","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","Delegated","DigitalAssetKey","DigitalAssetPublicKey","KeyInfo","KeyMaterial","Passive","SelfCustodial","SharedControl","Unilateral","UsePermission","UseRestriction","UserPolicySpecification","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key_id","key_id","key_material","permission","public_key","restriction","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_policy","user_policy","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","create_or_retrieve_server_key_opaque","read_certificates","read_private_key","HealthCheck","Message","borrow","borrow","borrow_mut","borrow_mut","check","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","lock_keeper_rpc_client","lock_keeper_rpc_server","ne","ne","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LockKeeperRpcClient","accept_compressed","authenticate","borrow","borrow_mut","clone","clone_into","connect","create_storage_key","fmt","from","generate","health","inner","into","into_request","new","register","retrieve","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","0","AuthenticateStream","CreateStorageKeyStream","GenerateStream","LockKeeperRpc","LockKeeperRpcServer","RegisterStream","RetrieveStorageKeyStream","RetrieveStream","_Inner","accept_compressed","accept_compression_encodings","authenticate","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","create_storage_key","fmt","fmt","from","from","from_arc","generate","health","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","register","retrieve","retrieve_storage_key","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","WithTimeout","with_timeout","AssetId","TarId","Transaction","TransactionApprovalRequest","TransactionSignature","asset_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","key_id","serialize","serialize","serialize","serialize","serialize","tar_id","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_id","vzip","vzip","vzip","vzip","vzip","Message","MessageStream","authenticate","create_storage_key","generate","register","retrieve","retrieve_storage_key","client","server","AuthenticateFinish","AuthenticateStart","account_name","account_name","borrow","borrow","borrow_mut","borrow_mut","credential_finalization","credential_request","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuthenticateFinish","AuthenticateStart","SendUserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","credential_response","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","serialize","serialize","serialize","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","client","server","RequestUserId","SendStorageKey","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","storage_key","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKeyResult","SendUserId","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","client","server","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","ciphertext","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RegisterFinish","RegisterStart","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_request","registration_upload","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RegisterFinish","RegisterStart","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_response","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","Request","borrow","borrow_mut","context","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","stored_secret","try_from","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","ciphertext","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","vzip","0","0","AccountName","StoredSecret","User","UserId","account_name","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","into","into","into","into","into_iter","into_parts","into_request","into_request","into_request","into_request","key_id","len","ne","ne","new","new","new","retrieved","secret","secrets","serialize","serialize","serialize","serialize","server_registration","storage_key","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","vzip","vzip","vzip","vzip"],"q":["lock_keeper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::TestLogs","lock_keeper::audit_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::config","","","lock_keeper::config::client","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::config::opaque","","","","","","","","","","","lock_keeper::config::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::CryptoError","lock_keeper::crypto::arbitrary_secret","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic::CryptoError","lock_keeper::crypto::signing_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::defaults","","","","lock_keeper::defaults::client","","","","","","","","","","","","","lock_keeper::defaults::server","","","","","","","","","","","","lock_keeper::defaults::shared","","","","","","","","","lock_keeper::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error::LockKeeperError","","","","","","","","","","lock_keeper::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::opaque_storage","lock_keeper::pem_utils","","lock_keeper::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::timeout","","lock_keeper::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types","","","","","","","","lock_keeper::types::authenticate","","lock_keeper::types::authenticate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::authenticate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::create_storage_key","","lock_keeper::types::create_storage_key::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::create_storage_key::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::generate","","lock_keeper::types::generate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::generate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::register","","lock_keeper::types::register::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::register::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::retrieve","","lock_keeper::types::retrieve::client","","","","","","","","","","","","","","","","","lock_keeper::types::retrieve::server","","","","","","","","","","","","","","","lock_keeper::types::retrieve_storage_key","","lock_keeper::types::retrieve_storage_key::client","","","","","","","","","","","","","","","lock_keeper::types::retrieve_storage_key::server","","","","","","","","","","","","","","","lock_keeper::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Options for actions the Lock Keeper client can take.","","","","","","","","","Options for the asset ownerâ€™s intended use of a secret","","Server successfully serving at address described by â€¦","Logs used to verify that an operation completed in the â€¦","Audit events, and associated fields and types","Blockchain abstraction.","","","","","","","","","","","","","Application-specific cryptographic types and operations.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates <code>TryFrom</code> implementations to and from the <code>Message</code> â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Digital asset keys and descriptions.","","","","","","","","","","Library for blockchains, transactions, and requests for â€¦","","","","","","","","","","","Models for the first pass of MongoDB integration.","","","","","A single entry that specifies the actor, action, outcome, â€¦","Options for the outcome of a given action in a <code>AuditEvent</code>","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Options for type of blockchain.","The ECDSA signature scheme","","Indicator trait to identify objects that represent a â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Identify signature scheme that corresponds to each â€¦","","","","","","","","","","","A two-way channel between a client and server used to â€¦","","","","","Create a server-side <code>Channel</code> that sends error codes in â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","Create a server-side <code>Channel</code> that sends error codes in â€¦","Create a client-side <code>Channel</code> that sends raw <code>Message</code> â€¦","","Returns the argument unchanged.","Generic <code>send</code> function used by the client and server â€¦","Calls <code>U::from(self)</code>.","","Receive the next message on the channel and convert it to â€¦","","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","Send a message across the channel. This function accepts â€¦","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted â€¦","","","Universally unique identifier for a stored secret or â€¦","The master key is a default-length symmetric encryption â€¦","An export key is secure key material produced as client â€¦","A session key is produced as shared output for client and â€¦","","An arbitrary secret.","An ECDSA signing key pair, including a public component â€¦","A storage key is a default-length symmetric encryption key â€¦","","","","","","","","","","","","","","","","","","","","","","Create an encrypted storage key. This is part of the â€¦","Derive a uniformly distributed secret <code>MasterKey</code> using the â€¦","","","Encrypt the given <code>StorageKey</code> under the <code>MasterKey</code> using an â€¦","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a new 32-byte <code>StorageKey</code>.","Generate a new, random <code>KeyId</code> for the given <code>UserId</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An arbitrary secret.","","","","","Create and encrypt a new secret. This is part of the â€¦","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The associated data used in <code>Encrypted</code> AEAD ciphertexts and â€¦","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted â€¦","","A well-formed symmetric encryption key for an AEAD scheme.","","","A generic secret.","","","","","","","","","","","","","","","","","","","","","","","","Additional context about the secret.","Decrypt the ciphertext to a <code>T</code>.","Decrypt a signing key. This should be run as part of the â€¦","Decrypt a secret. This should be run as part of the â€¦","Decrypt a storage key. This should be run as part of the â€¦","","","","","Encrypt the <code>T</code> and authenticate the <code>AssociatedData</code> under the","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate a new secret of length <code>len</code> (in bytes).","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The actual bytes of secret material.","","","","","","Generate a new symmetric AEAD encryption key from scratch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A signature on an object of type <code>T</code>, encrypted under the â€¦","An ECDSA signing key pair, including a public component â€¦","The public component of an ECDSA signing key, and context â€¦","","","","","","","","","","","","","Create and encrypt a new signing key. This is part of the â€¦","Domain separator for use in serializing signing keypairs.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>SigningKeyPair</code> with the given associated data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the public portion of the key.","Create a new <code>SigningKeyPair</code>. This must be run by the â€¦","Compute an ECDSA signature on the given message.","","","","","","","","","","","","","","Verify that the signature is over the given message under â€¦","","","","","","","","","","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","Length of time (seconds) that a party waits for a normal â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Use permission that delegates signing authority to a â€¦","Digital asset key, parameterized by use permissions and â€¦","Public key portion of a digital asset key pair.","Convenient grouping of the non-secret components of a â€¦","Key material that is generated externally to the system.","Use permission that refers to a digital asset key that was â€¦","Use permission that assigns key custody to the asset â€¦","Use restriction that assigns veto power to a given set of â€¦","Use restriction that does not assign veto power to a given â€¦","A use permission is a type that defines the degree to â€¦","A use restriction is a type that defines what entities â€¦","Specification of a user-set policy. This describes the set â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the <code>ServerSetup</code> used for OPAQUE authentication, â€¦","Returns all certificates in the pemfile at the given path","Returns the first private key found in the pemfile at the â€¦","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given â€¦","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Compress requests with the given encoding.","","","","","","","","","Server streaming response type for the Authenticate method.","Server streaming response type for the CreateStorageKey â€¦","Server streaming response type for the Generate method.","Generated trait containing gRPC methods that should be â€¦","","Server streaming response type for the Register method.","Server streaming response type for the RetrieveStorageKey â€¦","Server streaming response type for the Retrieve method.","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","","","","","","","","Unique ID for a digital asset.","Unique ID for a <code>TransactionApprovalRequest</code>.","A transaction describes the transfer of a digital asset â€¦","A transaction approval request is used to log a request â€¦","Signature on a <code>Transaction</code> under a digital asset key.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass account name and registration-finish message from â€¦","Pass account name and registration-start message from â€¦","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful.","Check if user exists and return OPAQUE message if so","Return authenticated user id if authentication worked.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID to server","pass user ID and encrypted secret","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","return new requested key ID","Return true if successful","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and registration-finish message from OPAQUE","pass user ID and registration-start message from OPAQUE","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","Check if user exists and return successful if not","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID and key ID to server","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","return new requested key and key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","pass user ID to server","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","return encrypted storage key","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Account name used as human-memorable identifier for a user â€¦","Wrapper around an <code>Encrypted&lt;Secret&gt;</code> and its <code>KeyId</code>","One user with a set of arbitrary secrets and a â€¦","Unique ID for a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,2,1,2,0,2,1,1,0,1,6,0,0,0,1,2,6,1,2,6,0,1,2,1,2,0,0,0,1,2,0,1,2,6,6,1,2,6,0,1,2,6,1,2,6,0,0,0,0,1,2,0,1,2,6,0,1,2,6,1,2,6,1,2,6,0,0,1,2,6,140,0,0,10,10,10,11,11,10,11,10,11,11,10,11,10,11,11,10,11,10,11,10,11,11,11,10,11,11,11,10,11,10,11,10,11,10,11,0,0,15,0,15,16,15,16,15,15,15,16,15,16,15,16,15,16,15,16,15,16,15,15,15,16,15,16,15,16,15,16,0,0,0,0,22,22,25,21,22,22,22,22,22,22,22,22,22,25,21,22,22,25,22,22,22,22,22,22,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,36,36,36,36,36,36,36,36,36,36,0,0,0,39,37,38,39,37,38,39,39,37,38,39,37,38,39,39,37,38,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,39,39,39,38,39,39,39,39,37,38,39,37,39,37,38,39,37,38,39,37,38,39,37,38,39,37,38,39,54,41,42,46,43,13,47,0,47,0,47,47,0,0,0,0,47,0,0,0,0,45,41,42,46,43,13,41,42,46,43,13,45,41,42,43,13,41,42,43,13,42,42,13,43,46,42,46,43,13,42,46,43,13,41,42,46,43,13,41,41,42,42,46,43,13,43,13,0,13,13,41,42,46,43,13,13,41,42,46,43,13,42,46,43,13,45,45,13,0,41,42,43,13,41,42,46,43,43,13,41,42,46,43,13,41,42,46,43,13,41,42,46,43,13,141,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,0,47,0,47,0,47,0,47,47,0,45,47,55,45,57,58,47,55,45,57,58,45,47,55,45,57,58,47,55,45,57,58,57,58,45,45,45,45,55,55,45,58,45,55,45,57,58,55,45,57,58,47,47,55,45,57,58,47,55,45,57,58,57,58,55,57,55,57,47,55,45,57,58,47,55,45,57,58,57,58,55,45,57,58,55,57,45,45,55,45,58,47,55,45,57,58,47,47,55,55,45,57,57,58,58,47,55,45,57,58,47,55,45,57,58,47,55,45,57,58,55,55,141,0,0,0,59,63,64,59,63,64,59,63,64,59,63,64,59,59,59,63,64,59,63,64,59,63,64,59,63,64,59,59,63,64,59,63,64,64,64,59,59,59,59,63,64,59,59,63,64,59,63,64,59,63,64,64,59,63,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,142,143,144,145,146,147,148,149,150,151,0,0,0,0,0,0,0,0,0,0,0,0,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,79,80,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,82,83,79,83,82,83,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,81,82,79,83,80,84,85,86,87,88,82,83,80,84,81,82,79,83,80,84,85,86,87,88,0,0,0,0,0,18,95,18,95,95,18,95,18,95,18,95,18,18,95,18,95,18,95,18,95,18,95,18,95,18,95,0,0,18,95,18,95,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,95,18,95,18,95,18,95,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,127,122,122,122,0,0,122,122,122,0,123,123,122,127,123,127,123,123,123,127,123,127,123,122,127,123,127,123,123,122,122,123,127,123,127,123,123,123,123,122,122,122,123,123,127,123,127,123,127,123,127,123,127,123,123,0,152,0,0,0,0,0,134,134,132,133,135,136,134,132,133,135,136,132,133,132,133,134,132,133,135,136,134,132,133,135,136,134,132,133,135,136,134,132,133,135,136,134,132,133,135,136,134,134,132,133,135,136,134,132,133,134,134,132,133,135,136,134,132,133,135,136,134,132,133,135,136,134,134,132,133,135,136,0,0,0,0,0,0,0,0,0,0,0,0,116,106,116,106,116,106,106,116,116,106,116,106,116,106,116,106,116,106,116,106,116,116,106,106,116,106,116,106,116,106,0,0,0,98,96,115,98,96,115,98,98,96,115,98,96,115,98,96,115,98,96,115,98,96,115,98,96,115,96,98,98,96,96,115,115,98,96,115,98,96,115,115,98,96,115,0,0,0,0,114,114,113,114,113,114,113,114,113,114,113,114,113,114,113,114,113,113,114,114,113,113,114,113,114,113,113,114,113,0,0,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,111,112,112,111,111,112,111,112,111,112,112,111,0,0,0,0,110,109,110,109,109,110,109,110,109,110,109,110,109,110,109,110,109,110,110,109,109,110,109,110,109,110,109,110,109,0,0,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,108,107,107,108,108,107,107,108,107,108,107,108,107,0,0,0,0,97,97,105,97,105,97,105,97,105,97,105,97,105,97,105,97,105,97,105,97,97,105,105,97,105,97,105,97,105,0,0,104,103,104,103,104,103,104,103,104,103,104,103,104,103,104,104,103,103,104,104,103,103,104,103,104,103,104,103,0,0,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,44,12,0,0,0,0,138,44,12,44,12,137,138,44,12,137,138,44,12,44,12,44,44,12,137,138,44,12,44,12,44,44,12,12,137,138,44,12,137,138,12,44,12,137,138,44,138,44,12,137,138,137,44,44,12,44,137,138,137,137,138,44,12,137,138,138,138,44,12,44,12,44,12,137,138,44,12,137,138,44,12,137,138,138,44,12,137,138],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[[]],[[]],0,0,0,[[],[[3,[1]]]],[[],[[3,[2]]]],0,[[1,4],5],[[2,4],5],[[6,4],5],[[6,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],0,0,0,0,[1,3],[2,3],0,[[]],[[]],[[],8],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[3,[10]]]],[[],[[3,[11]]]],[[10,4],5],[[11,4],5],[[11,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[[12,[14,[13]],1,10],11],0,[10,3],[11,3],0,[[],8],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[[]],[[],[[3,[15]]]],[[],[[3,[16]]]],[[15,4],5],[[16,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[15,3],[16,3],[15,17],[[]],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,[[]],[[]],[[[19,[18]]]],[[[20,[18]],[19,[18]]],21],[[[19,[18]]]],[[[20,[18]],[19,[18]]],[[22,[18]]]],[[[22,[23]],4],5],[[]],[22,24],[[]],[[],7],[22,24],0,[[25,[26,[18]]],24],[[21,[26,[18]]],24],[[[22,[18]],[26,[18]]],24],[[[22,[[3,[18,27]]]],[26,[18]]],24],[[25,[28,[27]]],24],[[[22,[[3,[18,27]]]],[28,[27]]],24],0,[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[29,29],[[]],[[],29],[[],[[3,[29]]]],[[29,4],5],[[]],[30,[[3,[29]]]],[[]],[[],7],[[[32,[31]]],24],[29,3],[29,[[3,[33,34]]]],0,[29,[[3,[35,34]]]],[[]],0,[[],3],[[],3],[[],9],[[]],0,[[]],[[]],[[36,4],5],[[]],[[]],[[],7],[[],3],[[],3],[[],9],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[37,37],[38,38],[39,39],[[]],[[]],[[]],0,0,0,[[],[[3,[37]]]],[[],[[3,[38]]]],[[],[[3,[39]]]],[[37,4],5],[[38,4],5],[[39,4],5],[[]],[[]],[[]],[30,[[3,[37]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[[32,[31]]],24],0,0,0,0,0,0,0,0,[37,3],[38,3],[39,3],0,[39,[[3,[40,34]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[41,41],[42,42],[43,43],[13,13],[[]],[[]],[[]],[[]],[[42,44],[[3,[[45,[43]],34]]]],[42,[[3,[46,47]]]],[[],[[3,[13]]]],[[],30],[[46,43,44],[[3,[[45,[43]],47]]]],[[42,42],48],[[46,46],48],[[43,43],48],[[13,13],48],[[],48],[[],48],[[],48],[[],48],[[41,4],5],[[42,4],5],[[46,4],5],[[43,4],5],[[13,4],5],[[[51,[49,50]]],41],[[]],[[[51,[49,50]]],42],[[]],[[]],[[]],[[]],[[],43],[44,[[3,[13,34]]]],0,[[],52],[13],[[]],[[]],[[]],[[]],[[]],[13],[[],7],[[],7],[[],7],[[],7],[[],7],[[42,42],48],[[46,46],48],[[43,43],48],[[13,13],48],0,0,[13,3],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[[53,[49]]],[[3,[43]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[54,54],[[]],[[43,44,13],[[3,[34]]]],[[],[[3,[54]]]],[[54,54],48],[[],48],[[54,4],5],[[]],[[]],[[],7],[[54,54],48],[54,3],[[]],[[],3],[[[53,[49]]],[[3,[54]]]],[[],3],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[47,47],[55,55],[[[45,[56]]],[[45,[56]]]],[57,57],[58,58],[[]],[[]],[[]],[[]],[[]],0,0,[[45,57],[[3,[47]]]],[[[45,[59]],43],[[3,[59,34]]]],[[[45,[54]],43],[[3,[54,34]]]],[[[45,[43]],42,44],[[3,[43,34]]]],[[],55],[[],[[3,[55]]]],[[],[[3,[45]]]],[[],[[3,[58]]]],[[57,55],[[3,[45,47]]]],[[55,55],48],[[[45,[60]],45],48],[[57,57],48],[[58,58],48],[[],48],[[],48],[[],48],[[],48],[[47,4],5],[[47,4],5],[[55,4],5],[[[45,[23]],4],5],[[57,4],5],[[58,4],5],[[]],[[]],[[]],[[]],[[]],[55,57],[[61,55],58],[[],52],[[],52],[55],[57],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,[[55,55],48],[[[45,[60]],45],48],[[57,57],48],[[58,58],48],[[],55],[[],57],0,0,[55,3],[45,3],[58,3],[[]],[[]],[[]],[[]],[[]],[[],8],[[],3],[[],3],[[[53,[49]]],[[3,[55]]]],[[],3],[[[53,[49]]],[[3,[57]]]],[[],3],[[],3],[[[53,[49]]],[[3,[58]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[55,62],55],[[55,30],55],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[59,59],[63,63],[[[64,[56]]],[[64,[56]]]],[[]],[[]],[[]],[[43,44,13],[[3,[34]]]],[[],30],[[59,59],48],[[63,63],48],[[[64,[60]],64],48],[[],48],[[],48],[[],48],[[59,4],5],[[63,4],5],[[[64,[23]],4],5],[[]],[[]],[[]],[55,59],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[[64,[60]],64],48],0,[59,63],[[44,13],59],[59,64],[[]],[[]],[[]],[[[53,[49]]],[[3,[59]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[64,63],[[3,[34]]]],[[]],[[]],[[]],0,[[],[[3,[65,34]]]],0,0,0,0,0,0,0,0,[[],[[3,[66,34]]]],[[],[[14,[67]]]],[[],61],[[],52],[[],61],[[],67],[[],68],0,0,0,0,0,0,[[],69],[[],[[3,[66,34]]]],[[],61],[[],61],[[],67],[[],68],0,0,0,0,0,[[],61],[[],61],[[],67],[[],68],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[34,4],5],[[34,4],5],[47,34],[70,34],[71,34],[72,34],[27,34],[[]],[73,34],[74,34],[75,34],[76,34],[77,34],[[]],[[],7],[34,[[14,[78]]]],[[],8],[[],3],[[],3],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[],80],[[],[[3,[81]]]],[[],[[3,[82]]]],[[],[[3,[79]]]],[[],[[3,[83]]]],[[],[[3,[80]]]],[[],[[3,[84]]]],[[],[[3,[85]]]],[[],[[3,[86]]]],[[],[[3,[87]]]],[[],[[3,[88]]]],[[81,4],5],[[82,4],5],[[79,4],5],[[[83,[23,23]],4],5],[[80,4],5],[[84,4],5],[[85,4],5],[[86,4],5],[[87,4],5],[[88,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,[81,3],[82,3],[79,3],[83,3],[80,3],[84,3],[85,3],[86,3],[87,3],[88,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[89,39],[[3,[[92,[36,[91,[90]]]],34]]]],[[[32,[31]]],[[3,[[53,[93]],34]]]],[[[32,[31]]],[[3,[94,34]]]],0,0,[[]],[[]],[[]],[[]],0,[18],[95],[18,18],[95,95],[[]],[[]],0,[[],18],[[],95],[18,61],[95,61],[[18,18],48],[[95,95],48],[[18,4],5],[[95,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,0,[[18,18],48],[[95,95],48],[[]],[[]],[96,[[3,[18]]]],[97,[[3,[18]]]],[[],3],[98,[[3,[18]]]],[99,[[3,[18]]]],[100,[[3,[18]]]],[101,[[3,[18]]]],[102,[[3,[18]]]],[103,[[3,[18]]]],[104,[[3,[18]]]],[105,[[3,[18]]]],[106,[[3,[18]]]],[107,[[3,[18]]]],[108,[[3,[18]]]],[109,[[3,[18]]]],[110,[[3,[18]]]],[111,[[3,[18]]]],[112,[[3,[18]]]],[113,[[3,[18]]]],[114,[[3,[18]]]],[115,[[3,[18]]]],[116,[[3,[18]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,[[117,118],117],[[117,119],24],[[]],[[]],[[[117,[56]]],[[117,[56]]]],[[]],[[],24],[[117,119],24],[[[117,[23]],4],5],[[]],[[117,119],24],[[117,[120,[95]]],24],0,[[]],[[],7],[[],117],[[117,119],24],[[117,119],24],[[117,119],24],[[117,118],117],[[]],[[],3],[[],3],[[],9],[[]],[[],[[117,[121]]]],[33,117],0,0,0,0,0,0,0,0,0,0,[[[123,[122]],118],[[123,[122]]]],0,[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[]],[[]],[[]],[[]],[[123,126]],[126],[[[127,[122]]],[[127,[122]]]],[[[123,[122]]],[[123,[122]]]],[[]],[[]],[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[[127,[23]],4],5],[[[123,[[0,[23,122]]]],4],5],[[]],[[]],[[[128,[122]]],[[123,[122]]]],[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[[7,[95]]],[[125,[[124,[24]]]]]],0,[[]],[[]],[[],7],[[],7],[122,[[123,[122]]]],[[123,129],[[130,[3]]]],[129,[[130,[3]]]],[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[[7,[[19,[18]]]]],[[125,[[124,[24]]]]]],[[[123,[122]],118],[[123,[122]]]],0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],[122,[[121,[[123,[122]]]]]],0,[67,131],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[133,133],[[]],[[]],[[],[[3,[134]]]],[[],[[3,[132]]]],[[],[[3,[133]]]],[[],[[3,[135]]]],[[],[[3,[136]]]],[[134,4],5],[[132,4],5],[[133,4],5],[[135,4],5],[[136,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],0,[134,3],[132,3],[133,3],[135,3],[136,3],0,[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[3,[116]]]],[[],[[3,[106]]]],[[116,4],5],[[106,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[116,3],[106,3],[[],3],[18,[[3,[116]]]],[18,[[3,[106]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[3,[98]]]],[[],[[3,[96]]]],[[],[[3,[115]]]],[[98,4],5],[[96,4],5],[[115,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[98,3],[96,3],[115,3],0,[18,[[3,[98]]]],[[],3],[18,[[3,[96]]]],[[],3],[[],3],[18,[[3,[115]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[114]]]],[[],[[3,[113]]]],[[114,4],5],[[113,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[114,3],[113,3],0,[18,[[3,[114]]]],[[],3],[18,[[3,[113]]]],[[],3],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[112]]]],[[],[[3,[111]]]],[[112,4],5],[[111,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[112,3],[111,3],0,[18,[[3,[112]]]],[[],3],[18,[[3,[111]]]],[[],3],[[],3],[[],3],[[],9],[[],9],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[3,[110]]]],[[],[[3,[109]]]],[[110,4],5],[[109,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],[110,3],[109,3],[18,[[3,[110]]]],[[],3],[[],3],[18,[[3,[109]]]],[[],3],[[],3],[[],9],[[],9],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[108]]]],[[],[[3,[107]]]],[[108,4],5],[[107,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[108,3],[107,3],0,[18,[[3,[108]]]],[[],3],[18,[[3,[107]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[3,[97]]]],[[],[[3,[105]]]],[[97,4],5],[[105,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,0,[97,3],[105,3],[[],3],[18,[[3,[97]]]],[[],3],[18,[[3,[105]]]],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[3,[104]]]],[[],[[3,[103]]]],[[104,4],5],[[103,4],5],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[104,3],[103,3],0,[[],3],[18,[[3,[104]]]],[18,[[3,[103]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,0,0,[[]],[[]],0,[[],[[3,[102]]]],[[102,4],5],[[]],[[]],[[],7],0,[102,3],[[],3],[18,[[3,[102]]]],[[],3],[[],9],0,[[]],0,[[]],[[]],[[],[[3,[101]]]],[[101,4],5],[[]],[[]],[[],7],[101,3],0,[18,[[3,[101]]]],[[],3],[[],3],[[],9],[[]],0,0,0,[[]],[[]],[[],[[3,[100]]]],[[100,4],5],[[]],[[]],[[],7],[100,3],[[],3],[18,[[3,[100]]]],[[],3],[[],9],0,[[]],0,[[]],[[]],0,[[],[[3,[99]]]],[[99,4],5],[[]],[[]],[[],7],[99,3],[18,[[3,[99]]]],[[],3],[[],3],[[],9],[[]],0,0,0,0,0,0,0,[44],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[12,12],[[]],[[]],[[],44],[[],[[3,[44]]]],[[],[[3,[12]]]],[[],[[3,[137]]]],[[],[[3,[138]]]],[[44,44],48],[[12,12],48],[[],48],[[],48],[[44,4],5],[[44,4],5],[[12,4],5],[[12,4],5],[[137,4],5],[[138,4],5],[[]],[[]],[[]],[[]],[30,[[3,[12]]]],[[]],[[]],[[]],[[]],[44],[138],[[],7],[[],7],[[],7],[[],7],0,[44,61],[[44,44],48],[[12,12],48],[[],[[3,[44,34]]]],[[[45,[54]],13],137],[[44,12,[139,[36]]],138],0,0,0,[44,3],[12,3],[137,3],[138,3],0,0,[[]],[[]],[[],8],[[],8],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]]],"p":[[4,"ClientAction"],[4,"RetrieveContext"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"TestLogs"],[3,"Request"],[3,"String"],[3,"TypeId"],[4,"EventStatus"],[3,"AuditEvent"],[3,"AccountName"],[3,"KeyId"],[4,"Option"],[4,"Blockchain"],[3,"ECDSA"],[8,"SignatureScheme"],[3,"Message"],[3,"Streaming"],[3,"Sender"],[6,"ClientChannel"],[3,"Channel"],[8,"Debug"],[8,"Future"],[6,"ServerChannel"],[8,"TryInto"],[3,"Status"],[8,"Into"],[3,"Config"],[15,"str"],[3,"Path"],[8,"AsRef"],[3,"Uri"],[4,"LockKeeperError"],[3,"ClientConfig"],[3,"OpaqueCipherSuite"],[3,"Config"],[3,"DatabaseSpec"],[3,"Service"],[3,"ServerConfig"],[3,"OpaqueSessionKey"],[3,"OpaqueExportKey"],[3,"StorageKey"],[3,"UserId"],[3,"Encrypted"],[3,"MasterKey"],[4,"CryptoError"],[15,"bool"],[15,"u8"],[6,"U64"],[3,"GenericArray"],[15,"u64"],[3,"Vec"],[3,"Secret"],[3,"AssociatedData"],[8,"Clone"],[3,"EncryptionKey"],[3,"Secret"],[3,"SigningKeyPair"],[8,"PartialEq"],[15,"usize"],[8,"IntoIterator"],[3,"SigningPublicKey"],[3,"Signature"],[3,"ProjectDirs"],[3,"PathBuf"],[3,"Duration"],[15,"u16"],[4,"IpAddr"],[4,"Error"],[4,"Error"],[3,"SendError"],[6,"Error"],[4,"ProtocolError"],[3,"Error"],[3,"InvalidUri"],[3,"Error"],[8,"Error"],[3,"KeyMaterial"],[3,"SelfCustodial"],[3,"DigitalAssetPublicKey"],[3,"KeyInfo"],[3,"DigitalAssetKey"],[3,"Delegated"],[3,"Passive"],[3,"UserPolicySpecification"],[3,"SharedControl"],[3,"Unilateral"],[3,"StdRng"],[3,"Ristretto255"],[3,"PrivateKey"],[3,"ServerSetup"],[3,"Certificate"],[3,"PrivateKey"],[3,"HealthCheck"],[3,"AuthenticateFinish"],[3,"RegisterStart"],[3,"AuthenticateStart"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"Request"],[3,"RegisterFinish"],[3,"RegisterStart"],[3,"RegisterFinish"],[3,"AuthenticateFinish"],[3,"Store"],[3,"Generate"],[3,"Store"],[3,"Generate"],[3,"CreateStorageKeyResult"],[3,"SendUserId"],[3,"SendStorageKey"],[3,"RequestUserId"],[3,"SendUserId"],[3,"AuthenticateStart"],[3,"LockKeeperRpcClient"],[4,"CompressionEncoding"],[8,"IntoStreamingRequest"],[8,"IntoRequest"],[3,"InterceptedService"],[8,"LockKeeperRpc"],[3,"LockKeeperRpcServer"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"_Inner"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"Timeout"],[3,"TarId"],[3,"AssetId"],[3,"TransactionApprovalRequest"],[3,"Transaction"],[3,"TransactionSignature"],[3,"StoredSecret"],[3,"User"],[3,"ServerRegistration"],[13,"ServerSpawned"],[13,"KeyDerivationFailed"],[13,"Crypto"],[13,"Bincode"],[13,"Io"],[13,"InvalidUri"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"TokioSender"],[13,"Toml"],[13,"TonicStatus"],[13,"WebPki"],[8,"WithTimeout"]]},\
"lock_keeper_client":{"doc":"This crate is an implementation of a client to a key â€¦","t":[2,2,0,0,0,0,0,5,0,0,5,5,5,5,5,13,13,3,13,4,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,12,3,3,6,3,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["LockKeeperClient","LockKeeperClientError","api","client","error","arbitrary_secrets","authenticate","create_digital_asset_key","create_storage_key","register","request_transaction_signature","retrieve_audit_event_log","retrieve_public_key_by_id","retrieve_public_keys","set_user_key_policy","ArbitraryKey","ExportedKey","LocalStorage","None","RetrieveResult","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","generate","into","into","into_request","into_request","retrieve","secret","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","generate_and_store","get_key_id","authenticate_finish","authenticate_start","retrieve_user_id","create_and_send_storage_key","request_user_id","register_finish","register_start","0","AuthenticateResult","LockKeeperClient","LockKeeperRpcClientInner","Password","account_name","account_name","as_bytes","authenticate","authenticated_client","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","close","config","connect","create_channel","default","export_key","export_key","fmt","fmt","from","from","from","from_str","generate_and_store","handle_authentication","handle_create_storage_key","handle_generate","handle_registration","handle_retrieve","health","into","into","into","into_request","into_request","into_request","register","retrieve","retrieve_storage_key","rng","session_key","session_key","to_string","tonic_client","tonic_client","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","user_id","user_id","vzip","vzip","vzip","AccountAlreadyRegistered","HealthCheckFailed","HttpNotAllowed","InvalidAccount","InvalidLogin","LockKeeper","LockKeeperClientError","LockKeeperCrypto","OpaqueProtocol","ServerReturnedFailure","TonicMetadata","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0"],"q":["lock_keeper_client","","","","","lock_keeper_client::api","","","","","","","","","","lock_keeper_client::api::arbitrary_secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::api::arbitrary_secrets::RetrieveResult","","lock_keeper_client::api::arbitrary_secrets::generate","","lock_keeper_client::api::authenticate","","","lock_keeper_client::api::create_storage_key","","lock_keeper_client::api::register","","lock_keeper_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error::LockKeeperClientError","","","","",""],"d":["","","Full implementation of the public API for the Lock Keeper â€¦","Client object to interact with the key server.","","","","Generate a new, distributed digital asset key with the â€¦","","","Request a signature on a transaction from the key server.","Retrieve the log of audit events from the key server for a â€¦","Retrieve the public key info for the specified key â€¦","Retrieve the public key info for all keys associated with â€¦","Set an asset-owner-specified key policy for a delegated â€¦","","","","","Ways of returning a key from the retrieval process based â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Retrieve the authenticated user ID from the server.","","","","","","","A <code>LockKeeperClient</code> is an abstraction over client â€¦","Connection type used by <code>LockKeeperRpcClient</code>. This would â€¦","","Get <code>AccountName</code> for the authenticated client.","","","","Authenticate to the Lock Keeper key server as a previously â€¦","","","","","","","Close a session.","","Create a <code>tonic</code> client object and return it to the client â€¦","Helper to create the appropriate <code>ClientChannel</code> to send to â€¦","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate and store an arbitrary secret at the key server","","Creates a storage key and sends it to the key server","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Register a new user who has not yet interacted with the â€¦","Retrieve an arbitrary secret from the key server by <code>KeyId</code>","Retrieve the <code>lock_keeper::crypto::Encrypted&lt;StorageKey&gt;</code> â€¦","","","","","","","","","","","","","","","","Get <code>UserId</code> for the authenticated client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,15,0,15,16,15,16,15,16,15,16,15,16,0,15,16,15,16,0,16,15,16,15,16,15,16,15,16,15,16,51,52,0,0,0,0,0,0,0,0,0,26,0,0,0,0,33,33,26,33,33,53,26,33,53,26,33,33,33,33,33,26,53,33,26,33,53,26,33,26,33,33,33,33,33,33,33,53,26,33,53,26,33,33,33,33,33,53,33,26,33,33,53,26,33,53,26,33,53,26,33,33,53,33,53,26,33,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,54,55,56,57,58,59],"f":[0,0,0,0,0,0,0,[[1,2,3,4],[[7,[5,6]]]],0,0,[8,[[7,[9,6]]]],[[1,[11,[10]]],[[7,[12,6]]]],[[1,10],[[7,[5,6]]]],[1,[[7,[[13,[5]],6]]]],[[1,10,14],[[7,[6]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[7,[15]]]],[[],[[7,[16]]]],[[15,17],18],[[16,17],18],[[]],[[]],0,[[]],[[]],[[],19],[[],19],0,0,[15,7],[16,7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[]],[[]],0,0,[[21,1,22,23,10],24],[[21,1],24],[[21,25,26,[28,[27]],29],24],[[21,28,25],24],[[21,30],24],[[21,1,31],24],[[21,25],24],[[21,26,[32,[27]]],24],[[21,25,26],24],0,0,0,0,0,[33,25],0,[26],[[[40,[[39,[[35,[34]],[38,[36,37]]]]]],25,26,41],24],[[25,26,41],24],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[7,[6]]]],0,[41,24],[[40,42,25],24],[[],26],0,0,[[26,17],18],[[33,17],18],[[]],[[]],[[]],[43,[[7,[26]]]],[33,24],[[21,25,26],24],[[21,25,31],24],[[33,21],24],[[21,25,26],24],[[33,21,10,44],24],[41,24],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[25,26,41],24],[[33,10,44],24],[33,24],0,0,0,[26,12],[33,[[40,[[39,[[35,[34]],[38,[36,37]]]]]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[],20],[33,1],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[6,17],18],[[6,17],18],[45,6],[46,6],[47,6],[48,6],[37,6],[49,6],[[]],[[]],[[],19],[6,[[11,[50]]]],[[],12],[[],7],[[],7],[[],20],[[]],0,0,0,0,0,0],"p":[[3,"UserId"],[4,"Blockchain"],[8,"UsePermission"],[8,"UseRestriction"],[3,"KeyInfo"],[4,"LockKeeperClientError"],[4,"Result"],[3,"TransactionApprovalRequest"],[3,"TransactionSignature"],[3,"KeyId"],[4,"Option"],[3,"String"],[3,"Vec"],[3,"UserPolicySpecification"],[4,"RetrieveResult"],[3,"LocalStorage"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[6,"ClientChannel"],[3,"StorageKey"],[3,"StdRng"],[8,"Future"],[3,"AccountName"],[3,"Password"],[3,"OpaqueCipherSuite"],[3,"ClientLoginStartResult"],[3,"AuthenticateStart"],[3,"OpaqueSessionKey"],[3,"OpaqueExportKey"],[3,"ClientRegistrationStartResult"],[3,"LockKeeperClient"],[3,"HttpConnector"],[3,"HttpsConnector"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Client"],[3,"LockKeeperRpcClient"],[3,"Config"],[4,"ClientAction"],[15,"str"],[4,"RetrieveContext"],[3,"InvalidMetadataValue"],[4,"CryptoError"],[3,"Error"],[4,"ProtocolError"],[4,"LockKeeperError"],[8,"Error"],[13,"ArbitraryKey"],[13,"ExportedKey"],[3,"AuthenticateResult"],[13,"LockKeeper"],[13,"LockKeeperCrypto"],[13,"OpaqueProtocol"],[13,"TonicMetadata"],[13,"TonicStatus"],[13,"TonicTransport"]]},\
"lock_keeper_key_server":{"doc":"This crate is an implementation of a key server to a key â€¦","t":[2,0,0,0,0,0,0,17,17,3,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,0,11,17,17,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,0,0,0,0,0,0,3,3,5,5,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,5,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,13,3,3,8,3,4,13,3,4,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,3,3,12,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,11,12,12,0,12,12,5,11,11,11,11,11,11,11,11,8,5,5,11,10,5,5,5],"n":["LockKeeperServerError","constants","database","error","operations","policy_engine","server","AUDIT_EVENTS","USERS","Database","add_user_secret","audit_event","borrow","borrow_mut","clone","clone_into","connect","create_audit_event","create_user","delete_user","find_user","find_user_by_id","fmt","from","get_user_secret","inner","into","into_request","set_storage_key","to_owned","try_from","try_into","type_id","user","vzip","SECRETS","STORAGE_KEY","AccountAlreadyRegistered","Bson","EnvVar","Hyper","InvalidAccount","Io","KeyNotFound","LockKeeper","LockKeeperServerError","MissingService","MongoDb","OpaqueProtocol","StorageKeyAlreadySet","StorageKeyNotSet","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","Authenticate","CreateStorageKey","Generate","Register","Retrieve","RetrieveStorageKey","authenticate","create_storage_key","generate","register","retrieve","retrieve_storage_key","Authenticate","AuthenticateStartResult","authenticate_finish","authenticate_start","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","into_request","into_request","login_start_result","operation","send_user_id","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","send_user_id","store_storage_key","try_from","try_into","type_id","vzip","Generate","borrow","borrow_mut","fmt","from","generate_key","into","into_request","operation","store_key","try_from","try_into","type_id","vzip","Register","borrow","borrow_mut","fmt","from","into","into_request","operation","register_finish","register_start","try_from","try_into","type_id","vzip","Retrieve","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Approve","AssetFiduciaryConfig","FiduciaryApproval","PolicyEngine","PolicyEngineConfig","PolicyEngineError","Reject","RejectionContext","TransactionApprovalDecision","asset_fiduciaries","asset_fiduciaries","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","initialize","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","max_delegated","max_delegated","max_self_custodial","max_self_custodial","request_transaction_approval","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unilateral_control_allowed","unilateral_control_allowed","vzip","vzip","vzip","vzip","vzip","vzip","0","0","Context","LockKeeperKeyServer","account_name","action","authenticate","borrow","borrow","borrow_mut","borrow_mut","config","context","create_storage_key","db","db","fmt","fmt","from","from","generate","health","into","into","into_request","into_request","key_id","new","operation","register","retrieve","retrieve_storage_key","rng","rng","service","service","service","start_lock_keeper_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Operation","audit_event","handle_error","handle_request","operation","handle_connection","start_lock_keeper_server","start_service"],"q":["lock_keeper_key_server","","","","","","","lock_keeper_key_server::constants","","lock_keeper_key_server::database","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::database::user","","lock_keeper_key_server::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error::LockKeeperServerError","","","","","","","","","lock_keeper_key_server::operations","","","","","","","","","","","","lock_keeper_key_server::operations::authenticate","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::operations::create_storage_key","","","","","","","","","","","","","","lock_keeper_key_server::operations::generate","","","","","","","","","","","","","","lock_keeper_key_server::operations::register","","","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_storage_key","","","","","","","","","","","","lock_keeper_key_server::policy_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::policy_engine::TransactionApprovalDecision","","lock_keeper_key_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::server::operation","","","","","lock_keeper_key_server::server::service","",""],"d":["","Constants used throughout the lock-keeper-key-server.","Database for key-servers.","","","Black-box policy engine API and supporting types.","","Name of MongoDB users table.","","","Add a <code>StoredSecret</code> to a <code>User</code>â€™s list of arbitrary secrets","Module for operations on audit events in the database.","","","","","Connect to the MongoDB instance specified by the given â€¦","Create a new <code>AuditEvent</code> for the given actor, action, and â€¦","Create a new <code>User</code> with their authentication information â€¦","Delete a <code>User</code> by their <code>UserId</code>","Find a <code>User</code> by their human-readable <code>AccountName</code>.","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","Get a <code>User</code>â€™s <code>StoredSecret</code> based on its <code>KeyId</code>","","Calls <code>U::from(self)</code>.","","Set the <code>storage_key</code> field for the <code>User</code> associated with a â€¦","","","","","Module for operations on users in the database.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the server-side start message along with a login â€¦","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the server-side start message along with a login â€¦","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","All asset fiduciaries approved the request; there must be â€¦","Configuration for an asset fiduciary.","Approval from an asset fiduciary over a â€¦","A <code>PolicyEngine</code> is the entity responsible for coordination â€¦","System-wide configuration for a policy engine.","Errors that can arise during a transaction approval â€¦","At least one asset fiduciary rejected the request; the â€¦","Context for why an asset fiduciary rejected a â€¦","The set of valid outcomes from a <code>PolicyEngine</code> decision.","","The system-wide set of asset fiduciaries.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the policy engine interface according to the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The number of <code>Delegated</code> keys each user can create.","","The number of <code>SelfCustodial</code> keys each user can create.","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates whether unilateral control keys are allowed in â€¦","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Starts a full Lock Keeper server stack based on the given â€¦","","","","","","","","","A type implementing <code>Operation</code> can process <code>tonic</code> requests â€¦","","","Takes a request from <code>tonic</code> and spawns a new thread to â€¦","Core logic for a given operation.","Processes an individual connection through our service â€¦","Starts a full Lock Keeper server stack based on the given â€¦","Starts a new thread that accepts connections and sends â€¦"],"i":[0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,64,65,66,67,68,69,70,71,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,35,73,35,35,73,35,73,35,73,35,73,35,0,73,35,73,35,73,35,73,73,35,0,38,38,38,38,38,38,38,0,0,38,38,38,38,0,39,39,39,39,0,39,39,39,0,39,39,39,39,0,40,40,40,40,40,40,40,0,0,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,42,42,46,0,0,0,0,0,46,0,0,43,43,45,43,46,47,48,49,45,43,46,47,48,49,45,43,45,43,45,43,45,43,46,47,48,49,49,45,43,46,47,48,49,74,45,43,46,47,48,49,45,43,46,47,48,49,43,43,43,43,74,45,43,45,43,49,45,43,46,47,48,49,45,43,46,47,48,49,45,43,46,47,48,49,43,43,45,43,46,47,48,49,75,76,0,0,34,34,53,53,34,53,34,53,53,53,53,34,53,34,53,34,53,53,53,34,53,34,34,53,0,53,53,53,53,34,0,53,34,0,53,34,53,34,53,34,53,34,0,0,0,77,77,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]],5],6],0,[[]],[[]],[1,1],[[]],[7,6],[[1,8,9,10,11],6],[[1,2,8,12],6],[[1,2],6],[[1,8],6],[[1,2],6],[[1,13],14],[[]],[[1,2,5],6],0,[[]],[[],15],[[1,2,[4,[16]]],6],[[]],[[],17],[[],17],[[],18],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[19,13],14],[[19,13],14],[[]],[20,19],[21,19],[22,19],[23,19],[24,19],[25,19],[26,19],[27,19],[28,19],[[]],[[],15],[19,[[9,[29]]]],[[],30],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,[33,[32]]],6],[[31,34],6],[[]],[[]],[[]],[[]],[[35,13],14],[[]],[[]],[[]],[[]],[[],15],[[],15],0,[[35,31,34],[[37,[[36,[6]]]]]],[[31,2],6],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[[]],[[]],0,[[]],[[]],[[38,13],14],[[]],[[]],[[],15],[[38,31,34],[[37,[[36,[6]]]]]],[[31,34],6],[[2,31,34],6],[[],17],[[],17],[[],18],[[]],0,[[]],[[]],[[39,13],14],[[]],[[31,34],6],[[]],[[],15],[[39,31,34],[[37,[[36,[6]]]]]],[[31,34,5],6],[[],17],[[],17],[[],18],[[]],0,[[]],[[]],[[40,13],14],[[]],[[]],[[],15],[[40,31,34],[[37,[[36,[6]]]]]],[[8,31,34],6],[[31,34],6],[[],17],[[],17],[[],18],[[]],0,[[]],[[]],[[41,13],14],[[]],[[]],[[],15],[[41,31,34],[[37,[[36,[6]]]]]],[[],17],[[],17],[[],18],[[]],0,[[]],[[]],[[42,13],14],[[]],[[]],[[],15],[[42,31,34],[[37,[[36,[6]]]]]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,[43,44],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[43,43],[[]],[[]],[[],[[17,[45]]]],[[],[[17,[43]]]],[[45,13],14],[[43,13],14],[[46,13],14],[[47,13],14],[[48,13],14],[[49,13],14],[[49,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[17,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[43,50],0,[43,50],0,[51,[[17,[46,49]]]],[45,17],[43,17],[[]],[[]],[[],30],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[43,52],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],[[]],[[]],[[]],[[]],0,[[53,15,10],[[17,[34,24]]]],[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],0,0,[[53,13],14],[[34,13],14],[[]],[[]],[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],[[53,[15,[56]]],[[37,[[36,[6]]]]]],[[]],[[]],[[],15],[[],15],0,[[1,57,[59,[58]]],[[17,[53,19]]]],0,[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],[[53,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],0,0,0,0,0,[57,6],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,[[31,34,11],6],[[31,19],6],[[34,[15,[[55,[54]]]]],[[37,[[36,[6]]]]]],[[31,34],[[37,[[36,[6]]]]]],[[60,61,62,63],6],[57,6],[[58,57,1],6]],"p":[[3,"Database"],[3,"UserId"],[3,"Secret"],[3,"Encrypted"],[3,"KeyId"],[8,"Future"],[3,"DatabaseSpec"],[3,"AccountName"],[4,"Option"],[4,"ClientAction"],[4,"EventStatus"],[3,"ServerRegistration"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"StorageKey"],[4,"Result"],[3,"TypeId"],[4,"LockKeeperServerError"],[4,"LockKeeperError"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"Status"],[3,"Error"],[4,"VarError"],[3,"Error"],[4,"ProtocolError"],[8,"Error"],[3,"String"],[6,"ServerChannel"],[3,"OpaqueCipherSuite"],[3,"ServerLoginStartResult"],[3,"Context"],[3,"Authenticate"],[3,"Box"],[3,"Pin"],[3,"CreateStorageKey"],[3,"Generate"],[3,"Register"],[3,"Retrieve"],[3,"RetrieveStorageKey"],[3,"PolicyEngineConfig"],[3,"Vec"],[3,"AssetFiduciaryConfig"],[4,"TransactionApprovalDecision"],[3,"FiduciaryApproval"],[3,"RejectionContext"],[4,"PolicyEngineError"],[15,"u16"],[3,"TransactionApprovalRequest"],[15,"bool"],[3,"LockKeeperKeyServer"],[3,"Message"],[3,"Streaming"],[3,"HealthCheck"],[3,"Config"],[3,"Service"],[3,"Arc"],[3,"Http"],[3,"TcpStream"],[3,"TlsAcceptor"],[3,"Routes"],[13,"LockKeeper"],[13,"Hyper"],[13,"Io"],[13,"Bson"],[13,"OpaqueProtocol"],[13,"TonicStatus"],[13,"TonicTransport"],[13,"EnvVar"],[13,"MongoDb"],[3,"AuthenticateStartResult"],[8,"PolicyEngine"],[13,"Approve"],[13,"Reject"],[8,"Operation"]]},\
"lock_keeper_tests":{"doc":"","t":[3,17,17,11,11,11,11,12,0,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,13,17,17,13,13,13,4,3,17,13,13,3,4,3,3,13,17,13,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Cli","NUM_RETRIES","RETRY_DELAY","augment_args","augment_args_for_update","borrow","borrow_mut","client_config","end_to_end","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","into_request","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","wait_for_server","Authenticate","GENERATED_ID","GENERATED_KEY","Generate","IncorrectError","InvalidValueRetrieved","Operation","Outcome","PASSWORD","Register","Retrieve","Test","TestError","TestResult","TestState","TestStateError","USER","UnexpectedError","account_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","end_to_end_tests","error","execute","expected_error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","generate_tag","get","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","name","name","new","new","operations","password","set","state","state","tests","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","1","1"],"q":["lock_keeper_tests","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::end_to_end","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::end_to_end::Operation","lock_keeper_tests::end_to_end::TestError","","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Set of operations that can be executed by the test harness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Get a list of tests to execute. Assumption: none of these â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,2,2,2,2,2,0,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0,15,0,0,15,14,14,0,0,0,15,15,0,0,0,0,14,0,14,12,13,12,14,15,16,17,13,12,14,15,16,17,0,17,12,16,13,12,14,14,15,16,17,13,12,14,15,16,17,12,13,13,12,14,15,16,17,13,12,14,15,16,17,12,17,13,12,12,12,13,13,12,0,14,13,12,14,15,16,17,13,12,14,15,16,17,13,12,14,15,16,17,13,12,14,15,16,17,24,25,26,27,25,27],"f":[0,0,0,[1,1],[1,1],[[]],[[]],0,0,[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],[[],8],[[]],[[],7],[[],7],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]],[10,11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,11],0,[[12,10],11],0,[[13,3],4],[[12,3],4],[[14,3],4],[[14,3],4],[[15,3],4],[[16,3],4],[[17,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[13,19],[[7,[20,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[],13],[[[22,[18]],23],12],0,0,[13,[[7,[21]]]],0,0,[[],11],[[],18],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0],"p":[[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"Request"],[3,"TypeId"],[3,"Config"],[8,"Future"],[3,"Test"],[3,"TestState"],[4,"TestError"],[4,"Operation"],[3,"Outcome"],[3,"TestResult"],[3,"String"],[15,"str"],[4,"Value"],[3,"Error"],[8,"Into"],[3,"Vec"],[13,"Authenticate"],[13,"IncorrectError"],[13,"TestStateError"],[13,"InvalidValueRetrieved"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
