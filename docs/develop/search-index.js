var searchIndex = JSON.parse('{\
"key_server_cli":{"doc":"","t":[3,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Cli","augment_args","augment_args_for_update","borrow","borrow_mut","config","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","into_request","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["key_server_cli","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],0,[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],[[],8],[[]],[[],7],[[],7],[[],9],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]]],"p":[[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"Request"],[3,"TypeId"]]},\
"lkic":{"doc":"","t":[0,0,0,5,0,0,5,5,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,17,13,4,13,13,13,17,13,13,13,17,13,17,17,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,5,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["app","cli","command","main","state","storage","input","run","Cli","augment_args","augment_args_for_update","borrow","borrow_mut","config","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","into_request","storage_path","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AUTHENTICATE_FORMAT","Authenticate","Command","Exit","Generate","GetAuditEvents","HELP_TEXT","Help","List","Logout","PRINT_FORMAT","Print","REGISTER_FORMAT","RETRIEVE_FORMAT","Register","RemoteGenerate","Retrieve","borrow","borrow_mut","eq","equivalent","execute","fmt","from","from_str","into","into_request","ne","try_from","try_into","type_id","vzip","account_name","account_name","name","name","name","name","password","password","Credentials","State","account_name","borrow","borrow","borrow_mut","borrow_mut","config","credentials","fmt","fmt","from","from","into","into","into_request","into_request","new","password","storage","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Entry","Storage","UserStore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","data","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","get","into","into","into","into_request","into_request","into_request","key_id","keys","list","list","load","local_storage_bytes","new","new","next_index","path","save","serialize","serialize","serialize","signing_key_bytes","store","store","store_named","store_named","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["lkic","","","","","","lkic::app","","lkic::cli","","","","","","","","","","","","","","","","","","","","","lkic::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lkic::command::Command","","","","","","","","lkic::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","lkic::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Command-line arguments","Types for parsing and handling commands received as user …","","Types for the state of the running application and any …","Local storage types for in-memory and on-disk storage of …","Prints the appropriate prompt and inputs the next command","Runs the interactive client","","","","","","Location of client config file.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Directory where persistent storage files will be saved.","","","","","","","","","Fully parsed command that’s ready for processing.","","","","","","","","","","","","","","","","","","","Execute this command","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","User credentials","In-memory state for a running application","","","","","","<code>LockKeeperClient</code> config","Contains the credentials of the currently logged-in user","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Local storage for key information","","","","","","","","","Key data returned from a key server.","Container for all locally stored key data. This type …","Key data for an individual account.","","","","","","","Mapping from account_name to key data","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Get a key from local storage","Get a key with the given name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Mapping from key name to key data","List all keys in storage for the given account.","List all keys stored for this account.","Load all key data from the filesystem in the given path.","","Create a new <code>Storage</code> with local data in the given path.","Create a new <code>UserStore</code>.","Next key name for keys that are stored without a custom …","Directory for persistent storage files","Save all key data for the given account.","","","","","Store a key in local storage. Key names are automatically …","Store a key. Key names are automatically generated as …","Store a key in local storage with the specified key name.","Store a key with the specified key name.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,2,0,2,2,2,0,2,2,2,0,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,33,34,35,36,37,38,33,34,0,0,18,1,18,1,18,1,1,1,18,1,18,1,18,1,18,1,18,1,1,18,1,18,1,18,1,18,0,0,0,19,20,21,19,20,21,19,21,19,20,21,19,20,21,21,19,20,21,21,21,21,19,20,19,20,21,19,20,21,21,20,19,20,19,0,19,20,20,19,19,19,20,21,0,19,20,19,20,21,19,20,21,19,20,21,19,20,21,19,20,21],"f":[0,0,0,[[]],0,0,[1,[[3,[2]]]],[[4,5],6],0,[7,7],[7,7],[[]],[[]],0,[[8,9],10],[[]],[11,[[13,[8,12]]]],[11,[[13,[8,12]]]],[[]],[[],7],[[],7],[[],14],0,[[],13],[[],13],[[],15],[[8,11],[[13,[12]]]],[[8,11],[[13,[12]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[2,2],16],[[],16],[[2,1],6],[[2,9],10],[[]],[17,[[13,[2]]]],[[]],[[],14],[[2,2],16],[[],13],[[],13],[[],15],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[1,9],10],[[18,9],10],[[]],[[]],[[]],[[]],[[],14],[[],14],[[4,5],[[3,[1]]]],0,0,[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[13,[19]]]],[[],[[13,[20]]]],[[],[[13,[21]]]],[[19,9],10],[[20,9],10],[[21,9],10],[[21,9],10],[[]],[[]],[22,21],[[]],[[],21],[[],21],[[19,[23,[17]],[23,[17]]],[[3,[[24,[21]]]]]],[[20,[23,[17]]],[[24,[21]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],0,0,[[19,[23,[17]]],3],[20],[[[23,[25]]],[[3,[[27,[26,20]]]]]],[28,[[3,[[30,[29]]]]]],[[[31,[5]]],[[3,[19]]]],[[],20],0,0,[[19,[23,[17]]],3],[19,13],[20,13],[21,13],[32,[[3,[[30,[29]]]]]],[[19,[31,[26]],[31,[21]]],[[3,[26]]]],[[20,[31,[21]]],26],[[19,[31,[26]],[31,[26]],[31,[21]]],3],[[20,[31,[26]],[31,[21]]]],[[],26],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[]],[[]],[[]]],"p":[[3,"State"],[4,"Command"],[6,"Result"],[3,"Config"],[3,"PathBuf"],[8,"Future"],[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"Request"],[3,"TypeId"],[15,"bool"],[15,"str"],[3,"Credentials"],[3,"Storage"],[3,"UserStore"],[3,"Entry"],[3,"KeyId"],[8,"AsRef"],[4,"Option"],[3,"Path"],[3,"String"],[3,"HashMap"],[3,"LocalStorage"],[15,"u8"],[3,"Vec"],[8,"Into"],[3,"Export"],[13,"Register"],[13,"Authenticate"],[13,"Generate"],[13,"Retrieve"],[13,"RemoteGenerate"],[13,"Print"]]},\
"lock_keeper":{"doc":"Cryptography, protocols, and other shared types and …","t":[2,0,0,0,0,14,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,12,12,12,12,12,12,13,4,13,3,13,3,3,13,3,3,3,3,3,13,3,3,3,0,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,13,4,13,3,13,3,13,13,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,0,0,17,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,5,5,3,3,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,16,16,16,8,3,16,16,16,16,16,16,3,11,12,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,10,12,11,11,11,11,11,11,11,10,10,10,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,2,6,0,0,0,13,3,3,4,4,13,13,13,13,13,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,13,4,3,13,13,13,13,13,13,13,13,13,13,13,0,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,12,0,11,11,11,11,11,11,11,12,11,11,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,13,13,4,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["LockKeeperError","config","constants","crypto","error","impl_message_conversion","infrastructure","rpc","types","client","opaque","server","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","from_str","into","into_request","load","serialize","server_location","server_location","tls_config","to_owned","trust_certificate","try_from","try_into","type_id","vzip","OpaqueCipherSuite","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","Config","DatabaseSpec","Service","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone","clone_into","clone_into","clone_into","database","db_name","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from_str","into","into","into","into_request","into_request","into_request","load","mongodb_uri","opaque_path","opaque_server_key","port","private_key","serialize","serialize","serialize","services","tls_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ACCOUNT_NAME","ACTION","LOCAL_SERVER_URI","USER_ID","0","0","0","0","0","0","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","Export","Import","KeyDerivationFailed","KeyId","MasterKey","OpaqueExportKey","OpaqueSessionKey","PlaceholderEncryptedSigningKeyPair","RandomNumberGeneratorFailed","Secret","SigningKeyPair","StorageKey","arbitrary_secret","as_bytes","associated_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","context","context","create_and_encrypt_storage_key","derive_master_key","deserialize","domain_separator","encrypt_storage_key","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","generate","generic","get_hash","hash","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","key_material","key_material","ne","ne","ne","ne","nonce","original_type","serialize","signing_key","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","Secret","borrow","borrow_mut","clone","clone_into","create_and_encrypt","deserialize","eq","equivalent","fmt","from","import_and_encrypt","into","into_request","ne","serialize","to_owned","try_from","try_from","try_into","type_id","vzip","0","AssociatedData","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","EncryptionKey","KeyDerivationFailed","RandomNumberGeneratorFailed","Secret","associated_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","decrypt","decrypt_secret","decrypt_secret","decrypt_storage_key","default","deserialize","deserialize","deserialize","encrypt","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_parts","generate","get_hash","get_hash","hash","hash","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","key","material","ne","ne","ne","ne","new","new","nonce","original_type","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_bytes","with_str","0","Export","Import","PlaceholderEncryptedSigningKeyPair","Signature","SigningKeyPair","SigningPublicKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","context","create_and_encrypt","deserialize","deserialize","deserialize","domain_separator","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","generate","import_and_encrypt","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_signing_key","into_signing_key","key_material","key_material","ne","ne","original_type","public_key","remote_generate","serialize","serialize","serialize","sign","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","Crypto","InvalidClientAction","InvalidMessage","InvalidPrivateKey","InvalidUri","Io","LockKeeperError","NoMessageReceived","OpaqueProtocol","Rustls","SerdeJson","TokioSender","Toml","TonicStatus","WebPki","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","channel","pem_utils","BUFFER_SIZE","Channel","ClientChannel","ServerChannel","borrow","borrow_mut","create","create","create","create","fmt","from","handle_send","into","into_request","receive","receiver","send","send","send","send","send_error","send_error","sender","try_from","try_into","type_id","vzip","read_certificates","read_private_key","HealthCheck","Message","borrow","borrow","borrow_mut","borrow_mut","check","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","lock_keeper_rpc_client","lock_keeper_rpc_server","ne","ne","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LockKeeperRpcClient","accept_compressed","authenticate","borrow","borrow_mut","clone","clone_into","connect","create_storage_key","fmt","from","generate","health","import_signing_key","inner","into","into_request","new","register","remote_generate","retrieve","retrieve_audit_events","retrieve_signing_key","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","0","AuthenticateStream","CreateStorageKeyStream","GenerateStream","ImportSigningKeyStream","LockKeeperRpc","LockKeeperRpcServer","RegisterStream","RemoteGenerateStream","RetrieveAuditEventsStream","RetrieveSigningKeyStream","RetrieveStorageKeyStream","RetrieveStream","_Inner","accept_compressed","accept_compression_encodings","authenticate","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","create_storage_key","fmt","fmt","from","from","from_arc","generate","health","import_signing_key","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","register","remote_generate","retrieve","retrieve_audit_events","retrieve_signing_key","retrieve_storage_key","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","Message","MessageStream","audit_event","database","operations","All","AuditEvent","AuditEventOptions","EventStatus","EventType","Failed","KeyOnly","Started","Successful","SystemOnly","action","action","actor","after_date","before_date","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","date","date","default","deserialize","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_client_actions","into_request","into_request","into_request","into_request","key_id","key_ids","new","secret_id","serialize","serialize","serialize","serialize","status","status","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","secrets","user","StoredEncryptedSecret","StoredEncryptedSigningKeyPair","StoredSecrets","StoredSigningKeyPair","arbitrary_secrets","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","key_id","key_id","key_id","new","new","new","retrieved","retrieved","retrieved","secret","serialize","serialize","serialize","serialize","server_created_signing_keys","signing_key","signing_key","signing_keys","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","AccountName","User","UserId","account_name","as_bytes","as_bytes","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","into","into","into","into_iter","into_parts","into_request","into_request","into_request","len","ne","ne","new","new","secrets","serialize","serialize","serialize","server_registration","storage_key","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","Authenticate","ClientAction","ClientActionIter","CreateStorageKey","Export","ExportSigningKey","Generate","ImportSigningKey","Register","RemoteGenerate","Retrieve","RetrieveAuditEvents","RetrieveSigningKey","RetrieveStorageKey","authenticate","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_storage_key","deserialize","eq","equivalent","fmt","fmt","from","from","from_str","generate","get","idx","import_signing_key","into","into","into_iter","into_request","into_request","iter","len","marker","next","next_back","nth","register","remote_generate","retrieve","retrieve_audit_events","retrieve_storage_key","serialize","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","AuthenticateFinish","AuthenticateStart","account_name","account_name","borrow","borrow","borrow_mut","borrow_mut","credential_finalization","credential_request","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuthenticateFinish","AuthenticateStart","SendUserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","credential_response","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","serialize","serialize","serialize","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","client","server","RequestUserId","SendStorageKey","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","storage_key","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKeyResult","SendUserId","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","client","server","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","ciphertext","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_material","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_from","try_into","type_id","vzip","client","server","RegisterFinish","RegisterStart","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_request","registration_upload","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RegisterFinish","RegisterStart","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_response","serialize","serialize","success","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RequestRemoteGenerate","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","user_id","vzip","ReturnKeyId","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_from","try_into","type_id","vzip","LocalOnly","Null","RetrieveContext","borrow","borrow_mut","client","clone","clone_into","deserialize","fmt","from","into","into_request","serialize","server","to_owned","try_from","try_into","type_id","vzip","Request","RequestSigningKey","borrow","borrow","borrow_mut","borrow_mut","context","context","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","key_id","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Response","ResponseSigningKey","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","exported_signing_key","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","stored_secret","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","Request","borrow","borrow_mut","deserialize","event_type","fmt","from","into","into_request","options","serialize","try_from","try_from","try_into","type_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","summary_record","try_from","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","ciphertext","deserialize","fmt","from","into","into_request","serialize","try_from","try_from","try_into","type_id","vzip"],"q":["lock_keeper","","","","","","","","","lock_keeper::config","","","lock_keeper::config::client","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::config::opaque","","","","","","","","","","","lock_keeper::config::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::constants","","","","lock_keeper::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::CryptoError","lock_keeper::crypto::arbitrary_secret","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic::CryptoError","lock_keeper::crypto::signing_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error::LockKeeperError","","","","","","","","","","lock_keeper::infrastructure","","lock_keeper::infrastructure::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::infrastructure::pem_utils","","lock_keeper::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types","","","","","lock_keeper::types::audit_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::database","","lock_keeper::types::database::secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::database::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::authenticate","","lock_keeper::types::operations::authenticate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::authenticate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::create_storage_key","","lock_keeper::types::operations::create_storage_key::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::create_storage_key::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::generate","","lock_keeper::types::operations::generate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::generate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::import_signing_key","","lock_keeper::types::operations::import_signing_key::client","","","","","","","","","","","","","","","","lock_keeper::types::operations::import_signing_key::server","","","","","","","","","","","","","","","lock_keeper::types::operations::register","","lock_keeper::types::operations::register::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::register::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::remote_generate","","lock_keeper::types::operations::remote_generate::client","","","","","","","","","","","","","","","lock_keeper::types::operations::remote_generate::server","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_audit_events","","lock_keeper::types::operations::retrieve_audit_events::client","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_audit_events::server","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_storage_key","","lock_keeper::types::operations::retrieve_storage_key::client","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_storage_key::server","","","","","","","","","","","","","",""],"d":["","Configuration types including config file definitions and …","Constants that are shared between other crates in this …","Application-specific cryptographic types and operations.","Error type for all errors returned to code outside of this …","Generates <code>TryFrom</code> implementations to and from the <code>Message</code> …","Modules that facilitate basic client-server operations","","Type definitions that are shared between crates but have …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted …","","Raw material for an exported signing key.","Raw material for an imported signing key.","","Universally unique identifier for a stored secret or …","The master key is a default-length symmetric encryption …","An export key is secure key material produced as client …","A session key is produced as shared output for client and …","Temporary type to represent a remotely generated encrypted …","","An arbitrary secret.","An ECDSA signing key pair, including a public component …","A storage key is a default-length symmetric encryption key …","","","","","","","","","","","","","","","","","","","","","","","","","Create an encrypted storage key. This is part of the …","Derive a uniformly distributed secret <code>MasterKey</code> using the …","","","Encrypt the given <code>StorageKey</code> under the <code>MasterKey</code> using an …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a new 32-byte <code>StorageKey</code>.","Generate a new, random <code>KeyId</code> for the given <code>UserId</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An arbitrary secret.","","","","","Create and encrypt a new secret. This is part of the …","","","","","Returns the argument unchanged.","Create a <code>Secret</code> from an imported key and encrypt it for …","Calls <code>U::from(self)</code>.","","","","","","","","","","","The associated data used in <code>Encrypted</code> AEAD ciphertexts and …","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted …","","A well-formed symmetric encryption key for an AEAD scheme.","","","A generic secret.","","","","","","","","","","","","","","","","","","","","","","","","Additional context about the secret.","Decrypt the ciphertext to a <code>T</code>.","Decrypt a signing key. This should be run as part of the …","Decrypt a secret. This should be run as part of the …","Decrypt a storage key. This should be run as part of the …","","","","","Encrypt the <code>T</code> and authenticate the <code>AssociatedData</code> under the","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new secret from its constituent parts. This is …","Generate a new secret of length <code>len</code> (in bytes).","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The actual bytes of secret material.","","","","","","Generate a new symmetric AEAD encryption key from scratch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raw material for an exported signing key.","Raw material for an imported signing key.","Temporary type to represent a remotely generated encrypted …","A signature on an object of type <code>T</code>, encrypted under the …","An ECDSA signing key pair, including a public component …","The public component of an ECDSA signing key, and context …","","","","","","","","","","","","","","","","","","","","","","","","","","Create and encrypt a new signing key for storage at a …","","","","Domain separator for use in serializing signing keypairs.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>SigningKeyPair</code> with the given associated data.","Create a <code>SigningKeyPair</code> from an imported key and encrypt …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Convert an <code>Import</code> into a <code>SigningKeyPair</code> with appropriate …","","","","","","","Retrieve the public portion of the key.","Create a new <code>SigningKeyPair</code>. This must be run by the …","","","","Compute an ECDSA signature on the given message.","","","","","","","","","","","","","","","","","","","","","","","","","Verify that the signature is over the given message under …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Convenience functions for dealing with PEM files.","","A two-way channel between a client and server used to …","","","","","Create a server-side <code>Channel</code> that sends error codes in …","Create a client-side <code>Channel</code> that sends raw <code>Message</code> …","Create a client-side <code>Channel</code> that sends raw <code>Message</code> …","Create a server-side <code>Channel</code> that sends error codes in …","","Returns the argument unchanged.","Generic <code>send</code> function used by the client and server …","Calls <code>U::from(self)</code>.","","Receive the next message on the channel and convert it to …","","Send a message across the channel. This function accepts …","Send a message across the channel. This function accepts …","Send a message across the channel. This function accepts …","Send a message across the channel. This function accepts …","","","","","","","","Returns all certificates in the pemfile at the given path","Returns the first private key found in the pemfile at the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Compress requests with the given encoding.","","","","","","","","","Server streaming response type for the Authenticate method.","Server streaming response type for the CreateStorageKey …","Server streaming response type for the Generate method.","Server streaming response type for the ImportSigningKey …","Generated trait containing gRPC methods that should be …","","Server streaming response type for the Register method.","Server streaming response type for the RemoteGenerate …","Server streaming response type for the RetrieveAuditEvents …","Server streaming response type for the RetrieveSigningKey …","Server streaming response type for the RetrieveStorageKey …","Server streaming response type for the Retrieve method.","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Audit events, and associated fields and types","Models for data stored in the database","Types related to server operations and the protocols they …","","A single entry that specifies the actor, action, outcome, …","Optional parameters to filter <code>AuditEvent</code>s by","Options for the outcome of a given action in a <code>AuditEvent</code>","Options for which types of events to retrieve from the key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Database models for secrets","Database models for users and user-related fields","Wrapper around an <code>Encrypted&lt;Secret&gt;</code> and its <code>KeyId</code>","Wrapper around an <code>Encrypted&lt;SigningKeyPair&gt;</code> and its <code>KeyId</code>.","Holds user’s stored secrets of all types","Wrapper around an <code>SigningKeyPair</code> and its <code>KeyId</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account name used as human-memorable identifier for a user …","One user with a set of arbitrary secrets and a …","Unique ID for a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for actions the Lock Keeper client can take.","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass account name and registration-finish message from …","Pass account name and registration-start message from …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful.","Check if user exists and return OPAQUE message if so","Return authenticated user id if authentication worked.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","pass user ID to server","pass user ID and encrypted secret","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","return new requested key ID","Return true if successful","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","send user ID and material to import","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","return new requested key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","pass user ID and registration-finish message from OPAQUE","pass user ID and registration-start message from OPAQUE","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return true if successful","Check if user exists and return successful if not","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Options for the asset owner’s intended use of a secret","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","pass user ID and key ID to server","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","return requested key and key ID","return exported signing key material","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Query specific set of audit event logs","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Return vector of audit events","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","pass user ID to server","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","return encrypted storage key","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,13,13,13,13,13,13,13,13,13,13,0,0,0,16,14,15,16,14,15,16,16,14,15,16,14,15,16,14,15,14,15,16,14,15,16,14,15,16,14,14,15,16,14,15,16,14,15,16,16,16,16,14,15,16,14,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,0,0,0,0,33,20,21,25,22,19,26,0,26,0,26,0,0,26,0,0,0,0,0,26,0,0,0,0,19,24,20,21,25,22,19,20,21,25,22,19,24,20,21,22,19,20,21,22,19,38,48,21,21,19,22,25,21,25,22,19,21,25,22,19,20,21,25,22,19,20,20,21,21,25,22,19,22,19,0,19,19,20,21,25,22,19,19,20,21,25,22,19,45,46,21,25,22,19,24,24,19,0,20,21,22,19,20,21,25,22,22,19,20,21,25,22,19,20,21,25,22,19,20,21,25,22,19,130,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,0,26,0,26,0,26,0,26,26,0,24,26,34,24,36,37,26,34,24,36,37,24,26,34,24,36,37,26,34,24,36,37,36,37,24,24,24,24,34,34,24,37,24,34,24,36,37,34,24,36,37,26,26,34,24,36,37,26,34,24,36,37,36,37,37,34,36,34,36,26,34,24,36,37,26,34,24,36,37,36,37,34,24,36,37,34,36,24,24,34,24,37,26,34,24,36,37,26,26,34,34,24,36,36,37,37,26,34,24,36,37,26,34,24,36,37,26,34,24,36,37,34,34,130,0,0,0,0,0,0,38,44,48,45,46,47,38,44,48,45,46,47,38,44,45,46,47,38,44,45,46,47,38,38,48,38,48,45,46,38,38,44,47,38,44,47,38,44,48,45,46,47,38,38,44,48,48,45,45,46,46,47,38,38,38,44,48,45,46,47,38,44,48,45,46,47,45,46,45,46,38,47,47,38,38,48,45,46,38,38,44,45,46,47,38,38,44,48,45,46,47,38,44,48,45,46,47,38,44,48,45,46,47,47,38,44,48,45,46,47,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,131,132,133,134,135,136,137,138,139,140,0,0,0,0,0,0,64,64,65,63,64,64,64,64,64,64,64,64,64,65,63,64,64,65,64,64,64,64,64,64,0,0,0,0,60,70,60,70,70,60,70,60,70,60,70,60,60,70,60,70,60,70,60,70,60,70,60,70,60,70,0,0,60,70,60,70,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,70,60,70,60,70,60,70,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,110,105,105,105,105,0,0,105,105,105,105,105,105,0,106,106,105,110,106,110,106,106,106,110,106,110,106,105,110,106,110,106,106,105,105,105,106,110,106,110,106,106,106,106,105,105,105,105,105,105,106,106,110,106,110,106,110,106,110,106,110,106,106,0,0,0,0,0,119,0,0,0,0,116,119,116,116,119,114,114,114,118,118,116,114,119,118,116,114,119,118,116,116,114,114,118,116,114,119,118,116,116,116,114,114,119,118,116,114,119,118,116,114,119,118,119,116,114,119,118,114,118,114,114,116,114,119,118,114,114,116,114,116,114,119,118,116,114,119,118,116,114,119,118,116,114,119,118,0,0,0,0,0,0,121,121,122,123,124,121,122,123,124,121,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,122,123,124,122,123,124,122,123,124,122,121,122,123,124,121,123,124,121,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,23,120,0,0,0,125,23,120,120,23,120,125,23,120,125,23,120,23,120,23,23,120,125,23,120,23,120,23,23,120,120,125,23,120,125,120,23,120,125,23,125,23,120,125,23,23,120,23,125,125,23,120,125,125,125,23,120,23,120,23,120,125,23,120,125,23,120,125,125,23,120,125,115,0,0,115,115,115,115,115,115,115,115,115,115,115,0,127,115,127,115,127,115,127,115,127,0,115,115,115,115,115,115,127,115,0,127,127,0,115,127,127,115,127,115,127,127,127,127,127,0,0,0,0,0,115,127,115,127,115,115,115,127,115,127,115,127,115,127,0,0,0,0,77,81,77,81,77,81,81,77,77,81,77,81,77,81,77,81,77,81,77,81,77,77,81,81,77,81,77,81,77,81,0,0,0,82,84,85,82,84,85,82,82,84,85,82,84,85,82,84,85,82,84,85,82,84,85,82,84,85,84,82,82,84,84,85,85,82,84,85,82,84,85,85,82,84,85,0,0,0,0,88,88,73,88,73,88,73,88,73,88,73,88,73,88,73,88,73,73,88,88,73,73,88,73,88,73,73,88,73,0,0,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,75,74,74,75,75,74,75,74,75,74,74,75,0,0,0,0,76,78,76,78,78,76,78,76,78,76,78,76,78,76,78,76,78,76,76,78,78,76,78,76,78,76,78,76,78,0,0,79,80,79,80,79,80,79,80,79,80,79,80,79,80,79,79,80,80,79,79,80,80,79,80,79,80,79,80,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,87,87,72,87,72,87,72,87,72,87,72,87,72,87,72,87,72,87,72,87,87,72,72,87,72,87,72,87,72,0,0,91,99,91,99,91,99,91,99,91,99,91,99,91,99,91,91,99,99,91,91,99,99,91,99,91,99,91,99,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,129,129,0,129,129,0,129,129,129,129,129,129,129,129,0,129,129,129,129,129,0,0,96,95,96,95,96,95,96,95,96,95,96,95,96,95,96,95,96,95,96,95,96,96,95,95,96,95,96,95,96,95,96,95,0,0,94,93,94,93,94,93,93,94,93,94,93,94,93,94,93,94,93,94,94,94,93,93,94,93,94,93,94,93,0,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],1],[[],[[2,[1]]]],[[1,3],4],[[]],[5,[[2,[1]]]],[[]],[[],6],[[[8,[7]]],[[2,[1,9]]]],[1,2],[1,[[2,[10,9]]]],0,[1,[[2,[11,9]]]],[[]],0,[[],2],[[],2],[[],12],[[]],0,[[]],[[]],[[13,3],4],[[]],[[]],[[],6],[[],2],[[],2],[[],12],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[14,14],[15,15],[16,16],[[]],[[]],[[]],0,0,[[],[[2,[14]]]],[[],[[2,[15]]]],[[],[[2,[16]]]],[[14,3],4],[[15,3],4],[[16,3],4],[[]],[[]],[[]],[5,[[2,[14]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[[8,[7]]],17],0,0,0,0,0,[14,2],[15,2],[16,2],0,[16,[[2,[18,9]]]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,20],[21,21],[22,22],[19,19],[[]],[[]],[[]],[[]],0,0,[[21,23],[[2,[[24,[22]],9]]]],[21,[[2,[25,26]]]],[[],[[2,[19]]]],[[],5],[[25,22,23],[[2,[[24,[22]],26]]]],[[21,21],27],[[25,25],27],[[22,22],27],[[19,19],27],[[],27],[[],27],[[],27],[[],27],[[20,3],4],[[21,3],4],[[25,3],4],[[22,3],4],[[19,3],4],[[[30,[28,29]]],20],[[]],[[[30,[28,29]]],21],[[]],[[]],[[]],[[]],[[],22],[23,[[2,[19,9]]]],0,[[],31],[19],[[]],[[]],[[]],[[]],[[]],[19],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[21,21],27],[[25,25],27],[[22,22],27],[[19,19],27],0,0,[19,2],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[[32,[28]]],[[2,[22]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[33,33],[[]],[[22,23,19],[[2,[9]]]],[[],[[2,[33]]]],[[33,33],27],[[],27],[[33,3],4],[[]],[[22,23,19],[[2,[9]]]],[[]],[[],6],[[33,33],27],[33,2],[[]],[[[32,[28]]],[[2,[33]]]],[[],2],[[],2],[[],12],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[26,26],[34,34],[[[24,[35]]],[[24,[35]]]],[36,36],[37,37],[[]],[[]],[[]],[[]],[[]],0,0,[[24,36],[[2,[26]]]],[[[24,[38]],22],[[2,[38,9]]]],[[[24,[33]],22],[[2,[33,9]]]],[[[24,[22]],21,23],[[2,[22,9]]]],[[],34],[[],[[2,[34]]]],[[],[[2,[24]]]],[[],[[2,[37]]]],[[36,34],[[2,[24,26]]]],[[34,34],27],[[[24,[39]],24],27],[[36,36],27],[[37,37],27],[[],27],[[],27],[[],27],[[],27],[[26,3],4],[[26,3],4],[[34,3],4],[[[24,[40]],3],4],[[36,3],4],[[37,3],4],[[]],[[]],[[]],[[]],[[]],[34,36],[34,37],[[41,34],37],[[],31],[[],31],[34],[36],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[34,34],27],[[[24,[39]],24],27],[[36,36],27],[[37,37],27],[[],34],[[],36],0,0,[34,2],[24,2],[37,2],[[]],[[]],[[]],[[]],[[]],[[],42],[[],2],[[],2],[[[32,[28]]],[[2,[34]]]],[[],2],[[],2],[[[32,[28]]],[[2,[36]]]],[[],2],[[[32,[28]]],[[2,[37]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[34,43],34],[[34,5],34],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,38],[44,44],[45,45],[46,46],[[[47,[35]]],[[47,[35]]]],[[]],[[]],[[]],[[]],[[]],[38,34],0,0,[[22,23,19],[[2,[9]]]],[[],[[2,[48]]]],[[],[[2,[45]]]],[[],[[2,[46]]]],[[],5],[[38,38],27],[[44,44],27],[[[47,[39]],47],27],[[],27],[[],27],[[],27],[[38,3],4],[[44,3],4],[[48,3],4],[[45,3],4],[[46,3],4],[[[47,[40]],3],4],[[]],[48,38],[[]],[38,48],[[]],[[]],[[],45],[38,46],[[]],[[]],[34,38],[[22,23,19],[[2,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[45,23,19],[[2,[38,9]]]],[46,[[2,[38,9]]]],0,0,[[38,38],27],[[[47,[39]],47],27],0,[38,44],[[23,19],38],[48,2],[45,2],[46,2],[38,47],[[]],[[]],[[]],[[]],[[]],[[],2],[[[32,[28]]],[[2,[38]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[47,44],[[2,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[9,3],4],[[9,3],4],[49,9],[50,9],[51,9],[[]],[52,9],[53,9],[54,9],[26,9],[55,9],[56,9],[57,9],[[]],[[],6],[9,[[59,[58]]]],[[],42],[[],2],[[],2],[[],12],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[61,[60]]]],[[[62,[60]],[61,[60]]],63],[[[62,[60]],[61,[60]]],[[64,[60]]]],[[[61,[60]]]],[[[64,[40]],3],4],[[]],[64,17],[[]],[[],6],[64,17],0,[[65,[66,[60]]],17],[[63,[66,[60]]],17],[[[64,[[2,[60,51]]]],[66,[60]]],17],[[[64,[60]],[66,[60]]],17],[[65,[67,[51]]],17],[[[64,[[2,[60,51]]]],[67,[51]]],17],0,[[],2],[[],2],[[],12],[[]],[[[8,[7]]],[[2,[[32,[68]],9]]]],[[[8,[7]]],[[2,[69,9]]]],0,0,[[]],[[]],[[]],[[]],0,[60],[70],[60,60],[70,70],[[]],[[]],0,[[],60],[[],70],[60,41],[70,41],[[60,60],27],[[70,70],27],[[60,3],4],[[70,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],0,0,[[60,60],27],[[70,70],27],[[]],[[]],[71,[[2,[60]]]],[72,[[2,[60]]]],[73,[[2,[60]]]],[74,[[2,[60]]]],[[],2],[75,[[2,[60]]]],[76,[[2,[60]]]],[77,[[2,[60]]]],[78,[[2,[60]]]],[79,[[2,[60]]]],[80,[[2,[60]]]],[81,[[2,[60]]]],[82,[[2,[60]]]],[83,[[2,[60]]]],[84,[[2,[60]]]],[85,[[2,[60]]]],[86,[[2,[60]]]],[87,[[2,[60]]]],[88,[[2,[60]]]],[89,[[2,[60]]]],[90,[[2,[60]]]],[91,[[2,[60]]]],[92,[[2,[60]]]],[93,[[2,[60]]]],[94,[[2,[60]]]],[95,[[2,[60]]]],[96,[[2,[60]]]],[97,[[2,[60]]]],[98,[[2,[60]]]],[99,[[2,[60]]]],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,[[100,101],100],[[100,102],17],[[]],[[]],[[[100,[35]]],[[100,[35]]]],[[]],[[],17],[[100,102],17],[[[100,[40]],3],4],[[]],[[100,102],17],[[100,[103,[70]]],17],[[100,102],17],0,[[]],[[],6],[[],100],[[100,102],17],[[100,102],17],[[100,102],17],[[100,102],17],[[100,102],17],[[100,102],17],[[100,101],100],[[]],[[],2],[[],2],[[],12],[[]],[[],[[100,[104]]]],[10,100],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[106,[105]],101],[[106,[105]]]],0,[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[]],[[]],[[]],[[]],[109],[[106,109]],[[[110,[105]]],[[110,[105]]]],[[[106,[105]]],[[106,[105]]]],[[]],[[]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[110,[40]],3],4],[[[106,[[0,[40,105]]]],3],4],[[]],[[]],[[[111,[105]]],[[106,[105]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[70]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],0,[[]],[[]],[[],6],[[],6],[105,[[106,[105]]]],[112,[[113,[2]]]],[[106,112],[[113,[2]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[6,[[61,[60]]]]],[[108,[[107,[17]]]]]],[[[106,[105]],101],[[106,[105]]]],0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],[105,[[104,[[106,[105]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[114,115],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[[]],[114,117],0,[[],118],[[],[[2,[116]]]],[[],[[2,[114]]]],[[],[[2,[119]]]],[[],[[2,[118]]]],[[116,116],27],[[],27],[[116,3],4],[[114,3],4],[[114,3],4],[[119,3],4],[[118,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,[[32,[115]]]],[[],6],[[],6],[[],6],[[],6],[114,[[59,[19]]]],0,[[120,[59,[19]],115,116],114],0,[116,2],[114,2],[119,2],[118,2],[114,116],0,[[]],[[],42],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],121],[[],[[2,[121]]]],[[],[[2,[122]]]],[[],[[2,[123]]]],[[],[[2,[124]]]],[[121,3],4],[[122,3],4],[[123,3],4],[[124,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],0,0,0,[[[24,[33]],19],122],[[[24,[38]],19],123],[[38,19],124],0,0,0,0,[121,2],[122,2],[123,2],[124,2],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[23],[120],[120,5],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[120,120],[[]],[[]],[[],23],[[],[[2,[23]]]],[[],[[2,[120]]]],[[],[[2,[125]]]],[[23,23],27],[[120,120],27],[[],27],[[],27],[[23,3],4],[[23,3],4],[[120,3],4],[[120,3],4],[[125,3],4],[[]],[[]],[[]],[5,[[2,[120]]]],[[]],[[]],[[]],[23],[125],[[],6],[[],6],[[],6],[23,41],[[23,23],27],[[120,120],27],[[],[[2,[23,9]]]],[[23,120,[126,[13]]],125],0,[23,2],[120,2],[125,2],0,0,[[]],[[]],[[],42],[[],42],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[115,115],[127,127],[[]],[[]],0,[[],[[2,[115]]]],[[115,115],27],[[],27],[[115,3],4],[[115,3],[[2,[128]]]],[[]],[[]],[5,[[2,[115]]]],0,[[127,41],[[59,[115]]]],0,0,[[]],[[]],[[]],[[],6],[[],6],[[],127],[127,41],0,[127,59],[127,59],[[127,41],59],0,0,0,0,0,[115,2],[127],[[]],[[]],[[],42],[5,[[2,[115]]]],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[2,[77]]]],[[],[[2,[81]]]],[[77,3],4],[[81,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],[77,2],[81,2],[60,[[2,[77]]]],[[],2],[60,[[2,[81]]]],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[2,[82]]]],[[],[[2,[84]]]],[[],[[2,[85]]]],[[82,3],4],[[84,3],4],[[85,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[82,2],[84,2],[85,2],0,[[],2],[60,[[2,[82]]]],[60,[[2,[84]]]],[[],2],[60,[[2,[85]]]],[[],2],[[],2],[[],2],[[],2],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[2,[88]]]],[[],[[2,[73]]]],[[88,3],4],[[73,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],[88,2],[73,2],0,[60,[[2,[88]]]],[[],2],[[],2],[60,[[2,[73]]]],[[],2],[[],2],[[],12],[[],12],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[2,[74]]]],[[],[[2,[75]]]],[[74,3],4],[[75,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],[74,2],[75,2],0,[60,[[2,[74]]]],[[],2],[[],2],[60,[[2,[75]]]],[[],2],[[],2],[[],12],[[],12],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[2,[76]]]],[[],[[2,[78]]]],[[76,3],4],[[78,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],[76,2],[78,2],[[],2],[60,[[2,[76]]]],[60,[[2,[78]]]],[[],2],[[],2],[[],2],[[],12],[[],12],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[2,[79]]]],[[],[[2,[80]]]],[[79,3],4],[[80,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],0,[79,2],[80,2],0,[60,[[2,[79]]]],[[],2],[[],2],[60,[[2,[80]]]],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,0,[[]],[[]],[[],[[2,[83]]]],[[83,3],4],[[]],[[]],[[],6],0,[83,2],[60,[[2,[83]]]],[[],2],[[],2],[[],12],0,[[]],0,[[]],[[]],[[],[[2,[86]]]],[[86,3],4],[[]],[[]],[[],6],0,[86,2],[60,[[2,[86]]]],[[],2],[[],2],[[],12],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[2,[87]]]],[[],[[2,[72]]]],[[87,3],4],[[72,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],0,0,[87,2],[72,2],[60,[[2,[87]]]],[[],2],[60,[[2,[72]]]],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[2,[91]]]],[[],[[2,[99]]]],[[91,3],4],[[99,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],0,[91,2],[99,2],0,[[],2],[60,[[2,[91]]]],[[],2],[60,[[2,[99]]]],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,0,[[]],[[]],[[],[[2,[98]]]],[[98,3],4],[[]],[[]],[[],6],[98,2],[60,[[2,[98]]]],[[],2],[[],2],[[],12],0,[[]],0,[[]],[[]],[[],[[2,[97]]]],[[97,3],4],[[]],[[]],[[],6],0,[97,2],[60,[[2,[97]]]],[[],2],[[],2],[[],12],[[]],0,0,0,[[]],[[]],0,[129,129],[[]],[[],[[2,[129]]]],[[129,3],4],[[]],[[]],[[],6],[129,2],0,[[]],[[],2],[[],2],[[],12],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[],[[2,[96]]]],[[],[[2,[95]]]],[[96,3],4],[[95,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],0,0,[96,2],[95,2],[60,[[2,[96]]]],[[],2],[60,[[2,[95]]]],[[],2],[[],2],[[],2],[[],12],[[],12],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[2,[94]]]],[[],[[2,[93]]]],0,[[94,3],4],[[93,3],4],[[]],[[]],[[]],[[]],[[],6],[[],6],[94,2],[93,2],0,[[],2],[60,[[2,[94]]]],[60,[[2,[93]]]],[[],2],[[],2],[[],2],[[],12],[[],12],[[]],[[]],0,0,0,[[]],[[]],[[],[[2,[92]]]],0,[[92,3],4],[[]],[[]],[[],6],0,[92,2],[[],2],[60,[[2,[92]]]],[[],2],[[],12],[[]],0,[[]],[[]],[[],[[2,[71]]]],[[71,3],4],[[]],[[]],[[],6],[71,2],0,[60,[[2,[71]]]],[[],2],[[],2],[[],12],[[]],0,0,0,[[]],[[]],[[],[[2,[90]]]],[[90,3],4],[[]],[[]],[[],6],[90,2],[[],2],[60,[[2,[90]]]],[[],2],[[],12],0,[[]],0,[[]],[[]],0,[[],[[2,[89]]]],[[89,3],4],[[]],[[]],[[],6],[89,2],[[],2],[60,[[2,[89]]]],[[],2],[[],12],[[]]],"p":[[3,"Config"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"Request"],[3,"Path"],[8,"AsRef"],[4,"LockKeeperError"],[3,"Uri"],[3,"ClientConfig"],[3,"TypeId"],[3,"OpaqueCipherSuite"],[3,"Config"],[3,"DatabaseSpec"],[3,"Service"],[8,"Future"],[3,"ServerConfig"],[3,"KeyId"],[3,"OpaqueSessionKey"],[3,"OpaqueExportKey"],[3,"StorageKey"],[3,"UserId"],[3,"Encrypted"],[3,"MasterKey"],[4,"CryptoError"],[15,"bool"],[15,"u8"],[6,"U64"],[3,"GenericArray"],[15,"u64"],[3,"Vec"],[3,"Secret"],[3,"AssociatedData"],[8,"Clone"],[3,"EncryptionKey"],[3,"Secret"],[3,"SigningKeyPair"],[8,"PartialEq"],[8,"Debug"],[15,"usize"],[3,"String"],[8,"IntoIterator"],[3,"SigningPublicKey"],[3,"Import"],[3,"Export"],[3,"Signature"],[3,"PlaceholderEncryptedSigningKeyPair"],[4,"Error"],[3,"SendError"],[3,"Status"],[3,"Error"],[3,"InvalidUri"],[3,"Error"],[4,"ProtocolError"],[4,"Error"],[3,"Error"],[8,"Error"],[4,"Option"],[3,"Message"],[3,"Streaming"],[3,"Sender"],[6,"ClientChannel"],[3,"Channel"],[6,"ServerChannel"],[8,"TryInto"],[8,"Into"],[3,"Certificate"],[3,"PrivateKey"],[3,"HealthCheck"],[3,"Response"],[3,"RegisterFinish"],[3,"SendStorageKey"],[3,"SendUserId"],[3,"CreateStorageKeyResult"],[3,"Generate"],[3,"AuthenticateStart"],[3,"Store"],[3,"Generate"],[3,"Store"],[3,"AuthenticateFinish"],[3,"AuthenticateStart"],[3,"Request"],[3,"AuthenticateFinish"],[3,"SendUserId"],[3,"Response"],[3,"RegisterStart"],[3,"RequestUserId"],[3,"Response"],[3,"Request"],[3,"RegisterStart"],[3,"Request"],[3,"ResponseSigningKey"],[3,"Response"],[3,"RequestSigningKey"],[3,"Request"],[3,"ReturnKeyId"],[3,"RequestRemoteGenerate"],[3,"RegisterFinish"],[3,"LockKeeperRpcClient"],[4,"CompressionEncoding"],[8,"IntoStreamingRequest"],[8,"IntoRequest"],[3,"InterceptedService"],[8,"LockKeeperRpc"],[3,"LockKeeperRpcServer"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"_Inner"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"AuditEvent"],[4,"ClientAction"],[4,"EventStatus"],[3,"DateTime"],[3,"AuditEventOptions"],[4,"EventType"],[3,"AccountName"],[3,"StoredSecrets"],[3,"StoredEncryptedSecret"],[3,"StoredEncryptedSigningKeyPair"],[3,"StoredSigningKeyPair"],[3,"User"],[3,"ServerRegistration"],[3,"ClientActionIter"],[3,"Error"],[4,"RetrieveContext"],[13,"KeyDerivationFailed"],[13,"Crypto"],[13,"Io"],[13,"InvalidUri"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"SerdeJson"],[13,"TokioSender"],[13,"Toml"],[13,"TonicStatus"],[13,"WebPki"]]},\
"lock_keeper_client":{"doc":"This crate is an implementation of a client to a key …","t":[2,2,0,0,0,13,3,13,4,13,0,11,11,11,11,0,11,11,11,11,11,11,0,0,11,11,11,11,0,0,0,0,12,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,12,3,3,6,3,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["LockKeeperClient","LockKeeperClientError","api","client","error","ArbitraryKey","LocalStorage","None","RetrieveResult","SigningKey","authenticate","borrow","borrow","borrow_mut","borrow_mut","create_storage_key","deserialize","deserialize","fmt","fmt","from","from","generate","import_signing_key","into","into","into_request","into_request","register","remote_generate","retrieve","retrieve_audit_events","secret","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","authenticate_finish","authenticate_start","retrieve_user_id","create_and_send_storage_key","request_user_id","generate_and_store","get_key_id","register_finish","register_start","0","AuthenticateResult","LockKeeperClient","LockKeeperRpcClientInner","Password","account_name","account_name","as_bytes","authenticate","authenticated_client","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","close","config","connect","create_channel","default","export_key","export_key","export_key","export_signing_key","fmt","fmt","from","from","from","from_str","generate_and_store","handle_authentication","handle_create_storage_key","handle_generate","handle_import_signing_key","handle_registration","handle_remote_generate","handle_retrieve","handle_retrieve_audit_events","handle_retrieve_signing_key","health","import_signing_key","into","into","into","into_request","into_request","into_request","register","remote_generate","retrieve","retrieve_audit_event_log","retrieve_signing_key","retrieve_storage_key","rng","session_key","session_key","to_string","tonic_client","tonic_client","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","user_id","user_id","vzip","vzip","vzip","AccountAlreadyRegistered","ExportFailed","HealthCheckFailed","HttpNotAllowed","InvalidAccount","InvalidKeyRetrieved","InvalidLogin","LockKeeper","LockKeeperClientError","LockKeeperCrypto","OpaqueProtocol","ServerReturnedFailure","TonicMetadata","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0"],"q":["lock_keeper_client","","","","","lock_keeper_client::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::api::RetrieveResult","","lock_keeper_client::api::authenticate","","","lock_keeper_client::api::create_storage_key","","lock_keeper_client::api::generate","","lock_keeper_client::api::register","","lock_keeper_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error::LockKeeperClientError","","","","",""],"d":["","","Full implementation of the public API for the Lock Keeper …","Client object to interact with the key server.","","","","","Ways of returning a key from the retrieval process based …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Retrieve the authenticated user ID from the server.","","","","","","","","","A <code>LockKeeperClient</code> is an abstraction over client …","Connection type used by <code>LockKeeperRpcClient</code>. This would …","","Get <code>AccountName</code> for the authenticated client.","","","","Authenticate to the Lock Keeper key server as a previously …","","","","","","","Close a session.","","Create a <code>tonic</code> client object and return it to the client …","Helper to create the appropriate <code>ClientChannel</code> to send to …","","Export key material from the key servers.","","","Export signing key pair material from the key servers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate and store an arbitrary secret at the key server","","Creates a storage key and sends it to the key server","","","","","Handles the retrieval of arbitrary secrets (…","","Handles the retrieval of signing keys (…","Ping the server to make sure it is running and reachable","Import signing key material to the key server","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Register a new user who has not yet interacted with the …","Request that the server generate a new signing key","Retrieve an arbitrary secret from the key server by <code>KeyId</code>","Retrieve the log of audit events from the key server for …","Retrieve a signing key pair from the key server by <code>KeyId</code>","Retrieve the <code>lock_keeper::crypto::Encrypted&lt;StorageKey&gt;</code> …","","","","","","","","","","","","","","","","Get <code>UserId</code> for the authenticated client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,1,0,1,0,1,3,1,3,0,1,3,1,3,1,3,0,0,1,3,1,3,0,0,0,0,3,1,3,1,3,1,3,1,3,1,3,47,48,0,0,0,0,0,0,0,0,0,10,0,0,0,0,22,22,10,22,22,49,10,22,49,10,22,22,22,22,22,10,22,49,22,22,10,22,49,10,22,10,22,22,22,22,22,22,22,22,22,22,22,22,49,10,22,49,10,22,22,22,22,22,22,22,22,49,22,10,22,22,49,10,22,49,10,22,49,10,22,22,49,22,49,10,22,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,50,51,52,53,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[2,[1]]]],[[],[[2,[3]]]],[[1,4],5],[[3,4],5],[[]],[[]],0,0,[[]],[[]],[[],6],[[],6],0,0,0,0,0,[1,2],[3,2],[[],2],[[],2],[[],2],[[],2],[[],7],[[],7],[[]],[[]],0,0,[[8,9,10,[12,[11]],13],14],[[8,12,9],14],[[8,15],14],[[8,16,17],14],[[8,9],14],[[8,16,18,19,20],14],[[8,16],14],[[8,10,[21,[11]]],14],[[8,9,10],14],0,0,0,0,0,[22,9],0,[10],[[[29,[[28,[[24,[23]],[27,[25,26]]]]]],9,10,30],14],[[9,10,30],14],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[2,[31]]]],0,[30,14],[[29,32,9],14],[[],10],[[22,20],14],0,0,[[22,20],14],[[10,4],5],[[22,4],5],[[]],[[]],[[]],[33,[[2,[10]]]],[22,14],[[8,9,10],14],[[8,9,17],14],[[22,8],14],[[22,8,[35,[34]]],14],[[8,9,10],14],[[22,8],14],[[22,8,20,36],14],[[22,8,37,38],14],[[22,8,20,36],14],[30,14],[[22,[35,[34]]],14],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[9,10,30],14],[22,14],[[22,20,36],14],[[22,37,38],14],[[22,20,36],14],[22,14],0,0,0,[10,39],[22,[[29,[[28,[[24,[23]],[27,[25,26]]]]]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],7],[[],7],[[],7],[22,16],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[31,4],5],[[31,4],5],[40,31],[26,31],[41,31],[42,31],[43,31],[44,31],[[]],[[]],[[],6],[31,[[46,[45]]]],[[],39],[[],2],[[],2],[[],7],[[]],0,0,0,0,0,0],"p":[[4,"RetrieveResult"],[4,"Result"],[3,"LocalStorage"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[6,"ClientChannel"],[3,"AccountName"],[3,"Password"],[3,"OpaqueCipherSuite"],[3,"ClientLoginStartResult"],[3,"AuthenticateStart"],[8,"Future"],[3,"OpaqueSessionKey"],[3,"UserId"],[3,"OpaqueExportKey"],[3,"StorageKey"],[3,"StdRng"],[3,"KeyId"],[3,"ClientRegistrationStartResult"],[3,"LockKeeperClient"],[3,"HttpConnector"],[3,"HttpsConnector"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Client"],[3,"LockKeeperRpcClient"],[3,"Config"],[4,"LockKeeperClientError"],[4,"ClientAction"],[15,"str"],[15,"u8"],[3,"Vec"],[4,"RetrieveContext"],[4,"EventType"],[3,"AuditEventOptions"],[3,"String"],[4,"ProtocolError"],[4,"LockKeeperError"],[3,"Error"],[3,"InvalidMetadataValue"],[4,"CryptoError"],[8,"Error"],[4,"Option"],[13,"ArbitraryKey"],[13,"SigningKey"],[3,"AuthenticateResult"],[13,"LockKeeper"],[13,"LockKeeperCrypto"],[13,"OpaqueProtocol"],[13,"TonicMetadata"],[13,"TonicStatus"],[13,"TonicTransport"]]},\
"lock_keeper_key_server":{"doc":"This crate is an implementation of a key server to a key …","t":[2,0,0,0,0,0,17,17,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,11,0,11,17,17,17,17,5,17,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,3,3,5,5,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,5,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,12,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,11,11,11,11,11,11,12,12,0,12,12,5,11,11,11,11,11,11,11,11,11,5,8,5,5,11,10,5,5,5],"n":["LockKeeperServerError","constants","database","error","operations","server","AUDIT_EVENTS","USERS","Database","add_remote_secret","add_user_secret","audit_event","borrow","borrow_mut","clone","clone_into","connect","create_audit_event","create_user","delete_user","find_audit_events","find_user","find_user_by_id","fmt","from","get_user_secret","get_user_signing_key","inner","into","into_request","secrets","set_storage_key","to_owned","try_from","try_into","type_id","user","vzip","ACTION","ACTOR","DATE","SECRET_ID","construct_query_with_options","STORAGE_KEY","AccountAlreadyRegistered","Bincode","Bson","EnvVar","Hyper","InvalidAccount","InvalidOpaqueDirectory","Io","KeyNotFound","LockKeeper","LockKeeperServerError","MissingService","MongoDb","OpaqueProtocol","StorageKeyAlreadySet","StorageKeyNotSet","StrumParseError","TonicStatus","TonicTransport","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","Authenticate","CreateStorageKey","Generate","ImportSigningKey","Register","RemoteGenerate","Retrieve","RetrieveAuditEvents","RetrieveSigningKey","RetrieveStorageKey","authenticate","create_storage_key","generate","import_signing_key","register","remote_generate","retrieve","retrieve_audit_events","retrieve_signing_key","retrieve_storage_key","Authenticate","AuthenticateStartResult","authenticate_finish","authenticate_start","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","into_request","into_request","login_start_result","operation","send_user_id","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","send_user_id","store_storage_key","try_from","try_into","type_id","vzip","Generate","borrow","borrow_mut","fmt","from","generate_key","into","into_request","operation","store_key","try_from","try_into","type_id","vzip","ImportSigningKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Register","borrow","borrow_mut","fmt","from","into","into_request","operation","register_finish","register_start","try_from","try_into","type_id","vzip","RemoteGenerate","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Retrieve","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveAuditEvents","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveSigningKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Context","LockKeeperKeyServer","account_name","action","authenticate","borrow","borrow","borrow_mut","borrow_mut","config","context","create_storage_key","db","db","fmt","fmt","from","from","generate","health","import_signing_key","into","into","into_request","into_request","key_id","new","opaque_storage","operation","register","remote_generate","retrieve","retrieve_audit_events","retrieve_signing_key","retrieve_storage_key","rng","rng","service","service","service","start_lock_keeper_server","str_from_metadata","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_or_retrieve_server_key_opaque","Operation","audit_event","handle_error","handle_request","operation","handle_connection","start_lock_keeper_server","start_service"],"q":["lock_keeper_key_server","","","","","","lock_keeper_key_server::constants","","lock_keeper_key_server::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::database::audit_event","","","","","lock_keeper_key_server::database::user","lock_keeper_key_server::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error::LockKeeperServerError","","","","","","","","","","","lock_keeper_key_server::operations","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::operations::authenticate","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::operations::create_storage_key","","","","","","","","","","","","","","lock_keeper_key_server::operations::generate","","","","","","","","","","","","","","lock_keeper_key_server::operations::import_signing_key","","","","","","","","","","","","lock_keeper_key_server::operations::register","","","","","","","","","","","","","","lock_keeper_key_server::operations::remote_generate","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_audit_events","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_signing_key","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_storage_key","","","","","","","","","","","","lock_keeper_key_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::server::opaque_storage","lock_keeper_key_server::server::operation","","","","","lock_keeper_key_server::server::service","",""],"d":["","Constants used throughout the lock-keeper-key-server.","Database for key-servers.","","","","Name of MongoDB users table.","","","Add a <code>StoredSigningKeyPair</code> to a <code>User</code>’s list of arbitrary …","Add a <code>StoredEncryptedSecret</code> to a <code>User</code>’s list of arbitrary","Module for operations on audit events in the database.","","","","","Connect to the MongoDB instance specified by the given …","Create a new <code>AuditEvent</code> for the given actor, action, and …","Create a new <code>User</code> with their authentication information …","Delete a <code>User</code> by their <code>UserId</code>","Find <code>AuditEvent</code>s that correspond to the event type and …","Find a <code>User</code> by their human-readable <code>AccountName</code>.","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","Get a <code>User</code>’s <code>StoredEncryptedSecret</code> based on its <code>KeyId</code>","Get a <code>User</code>’s <code>StoredSigningKeyPair</code> based on its <code>KeyId</code>","","Calls <code>U::from(self)</code>.","","Module for operations on secrets in the database.","Set the <code>storage_key</code> field for the <code>User</code> associated with a …","","","","","Module for operations on users in the database.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the server-side start message along with a login …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the server-side start message along with a login …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Starts a full Lock Keeper server stack based on the given …","","","","","","","","","","Retrieves the <code>ServerSetup</code> used for OPAQUE authentication, …","A type implementing <code>Operation</code> can process <code>tonic</code> requests …","","","Takes a request from <code>tonic</code> and spawns a new thread to …","Core logic for a given operation.","Processes an individual connection through our service …","Starts a full Lock Keeper server stack based on the given …","Starts a new thread that accepts connections and sends …"],"i":[0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,69,70,71,72,73,74,75,76,77,78,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,41,80,41,41,80,41,80,41,80,41,80,41,0,80,41,80,41,80,41,80,80,41,0,44,44,44,44,44,44,44,0,0,44,44,44,44,0,45,45,45,45,0,45,45,45,0,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,0,0,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,0,0,40,40,53,53,40,53,40,53,53,53,53,40,53,40,53,40,53,53,53,53,40,53,40,40,53,0,0,53,53,53,53,53,53,53,40,0,53,40,0,53,53,40,53,40,53,40,53,40,0,0,0,0,81,81,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[1,2,3,4],5],[[1,2,[7,[6]],4],5],0,[[]],[[]],[1,1],[[]],[8,5],[[1,9,10,11,12],5],[[1,2,9,13],5],[[1,2],5],[[1,9,14,15],5],[[1,9],5],[[1,2],5],[[1,16],17],[[]],[[1,2,4],5],[[1,2,4],5],0,[[]],[[],18],0,[[1,2,[7,[19]]],5],[[]],[[],20],[[],20],[[],21],0,[[]],0,0,0,0,[[15,22],[[20,[22,23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[23,16],17],[[23,16],17],[24,23],[25,23],[26,23],[27,23],[[]],[28,23],[29,23],[30,23],[31,23],[32,23],[33,23],[34,23],[[]],[[],18],[23,[[10,[35]]]],[[],36],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,[39,[38]]],5],[[37,40],5],[[]],[[]],[[]],[[]],[[41,16],17],[[]],[[]],[[]],[[]],[[],18],[[],18],0,[[41,37,40],[[43,[[42,[5]]]]]],[[37,2],5],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[[]],[[]],0,[[]],[[]],[[44,16],17],[[]],[[]],[[],18],[[44,37,40],[[43,[[42,[5]]]]]],[[37,40],5],[[2,37,40],5],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[45,16],17],[[]],[[37,40],5],[[]],[[],18],[[45,37,40],[[43,[[42,[5]]]]]],[[37,40,4],5],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[46,16],17],[[]],[[]],[[],18],[[46,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[47,16],17],[[]],[[]],[[],18],[[47,37,40],[[43,[[42,[5]]]]]],[[9,37,40],5],[[37,40],5],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[48,16],17],[[]],[[]],[[],18],[[48,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[49,16],17],[[]],[[]],[[],18],[[49,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[50,16],17],[[]],[[]],[[],18],[[50,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[51,16],17],[[]],[[]],[[],18],[[51,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[52,16],17],[[]],[[]],[[],18],[[52,37,40],[[43,[[42,[5]]]]]],[[],20],[[],20],[[],21],[[]],0,0,0,0,[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[]],[[]],[[]],[[]],0,[[53,18],[[20,[40,23]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],0,0,[[53,16],17],[[40,16],17],[[]],[[]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[56]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[]],[[]],[[],18],[[],18],0,[[1,57,[59,[58]]],[[20,[53,23]]]],0,0,[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[53,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],0,0,0,0,0,[57,5],[[18,60,25,25],[[20,[60,25]]]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[61,58],[[20,[[64,[38,[63,[62]]]],23]]]],0,[[37,40,12],5],[[37,23],5],[[40,[18,[[55,[54]]]]],[[43,[[42,[5]]]]]],[[37,40],[[43,[[42,[5]]]]]],[[65,66,67,68],5],[57,5],[[58,57,1],5]],"p":[[3,"Database"],[3,"UserId"],[3,"SigningKeyPair"],[3,"KeyId"],[8,"Future"],[3,"Secret"],[3,"Encrypted"],[3,"DatabaseSpec"],[3,"AccountName"],[4,"Option"],[4,"ClientAction"],[4,"EventStatus"],[3,"ServerRegistration"],[4,"EventType"],[3,"AuditEventOptions"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"StorageKey"],[4,"Result"],[3,"TypeId"],[3,"Document"],[4,"LockKeeperServerError"],[3,"Error"],[3,"Status"],[4,"ProtocolError"],[3,"Error"],[6,"Error"],[4,"Error"],[4,"VarError"],[3,"Error"],[4,"LockKeeperError"],[3,"Error"],[4,"ParseError"],[8,"Error"],[3,"String"],[6,"ServerChannel"],[3,"OpaqueCipherSuite"],[3,"ServerLoginStartResult"],[3,"Context"],[3,"Authenticate"],[3,"Box"],[3,"Pin"],[3,"CreateStorageKey"],[3,"Generate"],[3,"ImportSigningKey"],[3,"Register"],[3,"RemoteGenerate"],[3,"Retrieve"],[3,"RetrieveAuditEvents"],[3,"RetrieveSigningKey"],[3,"RetrieveStorageKey"],[3,"LockKeeperKeyServer"],[3,"Message"],[3,"Streaming"],[3,"HealthCheck"],[3,"Config"],[3,"Service"],[3,"Arc"],[15,"str"],[3,"StdRng"],[3,"Ristretto255"],[3,"PrivateKey"],[3,"ServerSetup"],[3,"Http"],[3,"TcpStream"],[3,"TlsAcceptor"],[3,"Routes"],[13,"Bincode"],[13,"Bson"],[13,"EnvVar"],[13,"Hyper"],[13,"Io"],[13,"LockKeeper"],[13,"MongoDb"],[13,"OpaqueProtocol"],[13,"StrumParseError"],[13,"TonicStatus"],[13,"TonicTransport"],[3,"AuthenticateStartResult"],[8,"Operation"]]},\
"lock_keeper_tests":{"doc":"","t":[13,3,13,13,17,17,4,11,11,11,11,11,11,12,11,11,0,0,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,14,12,11,11,11,11,11,11,11,11,11,0,11,11,5,3,3,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,0,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,5,12,11,11,11,11,0,11,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,13,13,13,13,13,17,17,4,3,17,13,13,13,13,3,4,3,3,13,17,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,5,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,4,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11],"n":["All","Cli","E2E","Integration","NUM_RETRIES","RETRY_DELAY","TestType","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","client_config","clone","clone_into","config","database","end_to_end","eq","equivalent","filters","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_str","into","into","into_app","into_app_for_update","into_request","into_request","main","run_parallel","test_type","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","vzip","vzip","wait_for_server","Config","TestFilters","borrow","borrow","borrow_mut","borrow_mut","client_config","default","filters","filters","fmt","fmt","from","from","from","into","into","into_request","into_request","matches","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TestDatabase","USERS_TABLE","audit_event","borrow","borrow_mut","clone","clone_into","create_test_user","db","deref","drop","fmt","from","from_db_name","into","into_request","is_user_valid","mongo","new","run_tests","spec","to_owned","try_from","try_into","type_id","user","vzip","NUM_LOGS","NUM_SAMPLE","after_date_filter_works","before_date_filter_works","check_after_date","check_before_date","compare_actions","compare_key_ids","create_random_audit_events","event_type_filter_works","key_id_filter_works","run_tests","create_test_export_key","multiple_connections_do_not_overwrite_db","run_tests","storage_key_is_set","unique_indices_enforced","user_findable_by_account_name","user_findable_by_id","user_is_deleted","Authenticate","Export","ExportSigningKey","Generate","ImportSigningKey","IncorrectError","InvalidAuditEventLog","InvalidValueRetrieved","KEY_ID","KEY_MATERIAL","Operation","Outcome","PASSWORD","Register","RemoteGenerate","Retrieve","SetFakeKeyId","Test","TestError","TestResult","TestState","TestStateError","USER","UnexpectedError","UnexpectedSuccess","account_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_audit_events","error","execute","expected_error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","name","name","new","new","operations","password","run_tests","set","state","state","tests","to_final_client_action","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","1","1","Failed","Passed","TestResult","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_request","report","run_test_case","server_registration","tagged","to_owned","try_from","try_into","type_id","vzip"],"q":["lock_keeper_tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::database","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::database::audit_event","","","","","","","","","","","","lock_keeper_tests::database::user","","","","","","","","lock_keeper_tests::end_to_end","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::end_to_end::Operation","lock_keeper_tests::end_to_end::TestError","","","","","","","lock_keeper_tests::utils","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","Test config types","Database integration tests","End-to-end testing framework and test definitions","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Pass a list of async test functions with parameters …","","","","","","","","","","","Various testing utilities","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Integration tests for audit event objects in the database","","","","","Creates a test user with a randomized name and returns the …","","","Drops the underlying database. Call this when you’re …","","Returns the argument unchanged.","Create a new test database with a specific name. Use this …","Calls <code>U::from(self)</code>.","","Retrieves a user from the database and ensures that it can …","Direct connection to MongoDB for actions that we don’t …","Create a new test database with random characters appended …","","","","","","","Integration tests for user objects in the database","","","","","","","","","","","","","","","","","Test that <code>set_storage_key</code> works correctly","","","","","","","","","","","","","","","Set of operations that can be executed by the test harness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get a list of tests to execute. Assumption: none of these …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Runs a test case and manually handles any panics triggered …","Locally simulates OPAQUE registration to get a valid …","Add random text to the end of a string","","","","",""],"i":[2,0,2,2,0,0,0,4,4,4,2,4,2,4,2,2,0,0,0,2,2,4,4,2,4,2,4,4,2,4,2,4,4,4,2,0,0,4,2,4,2,4,2,4,2,4,4,0,4,2,0,0,0,13,15,13,15,13,15,13,15,13,15,13,15,15,13,15,13,15,15,13,13,15,13,15,13,15,13,15,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,35,35,35,0,0,0,0,0,33,33,33,33,0,0,0,0,35,0,35,35,30,34,30,35,33,36,37,34,30,35,33,36,37,30,37,30,36,34,30,35,35,33,36,37,34,30,35,33,36,37,34,34,30,35,33,36,37,34,30,35,33,36,37,30,37,34,30,30,30,0,34,34,30,0,33,35,34,30,35,33,36,37,34,30,35,33,36,37,34,30,35,33,36,37,34,30,35,33,36,37,49,50,51,52,53,54,51,54,42,42,0,42,42,42,42,42,42,42,42,42,0,0,0,42,42,42,42,42],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],0,[2,2],[[]],0,0,0,[[2,2],3],[[],3],0,[[4,5],6],[[2,5],6],[[]],[[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,[[9,[2]]]],[[]],[[]],[[],1],[[],1],[[],11],[[],11],[[]],0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],12],[[],12],[[4,7],[[9,[8]]]],[[4,7],[[9,[8]]]],0,[[]],[[]],[13,14],0,0,[[]],[[]],[[]],[[]],0,[[],15],0,0,[[13,5],6],[[15,5],6],[[]],[[[17,[16]]],15],[[]],[[]],[[]],[[],11],[[],11],[[15,10],3],[4,[[9,[13]]]],[[],9],[[],9],[[],9],[[],9],[[],12],[[],12],[[]],[[]],0,0,0,[[]],[[]],[18,18],[[]],[18,14],0,[18],[18,14],[[18,5],6],[[]],[[[19,[16]]],14],[[]],[[],11],[[18,20],14],0,[[[21,[10]]],14],[[],14],0,[[]],[[],9],[[],9],[[],12],0,[[]],0,0,[18,14],[18,14],[[[17,[22]],23]],[[[17,[22]],23]],[[[17,[22]],24]],[[[17,[22]],[17,[25]]]],[[20,26,27],14],[18,14],[18,14],[[],14],[28,29],[[],14],[[],14],[18,14],[18,14],[18,14],[18,14],[18,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,31,32,33],14],0,[[30,31],14],0,[[34,5],6],[[30,5],6],[[35,5],6],[[35,5],6],[[33,5],6],[[36,5],6],[[37,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[34,10],[[9,[38,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],34],[[[19,[16]],17],30],0,0,[13,14],[34,[[9,[39]]]],0,0,[[],14],[[33,32],[[41,[40]]]],[[],16],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[42,42],[[]],[[42,5],6],[[]],[[]],[[],11],[[42,[21,[10]]]],[[10,[44,[43]],[46,[[45,[42]]]]],14],[[],[[48,[47]]]],[[[21,[10]]],16],[[]],[[],9],[[],9],[[],12],[[]]],"p":[[6,"Command"],[4,"TestType"],[15,"bool"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[15,"str"],[3,"Request"],[3,"TypeId"],[3,"Config"],[8,"Future"],[3,"TestFilters"],[3,"String"],[3,"Vec"],[3,"TestDatabase"],[8,"Into"],[3,"AccountName"],[8,"AsRef"],[3,"AuditEvent"],[3,"DateTime"],[4,"EventType"],[3,"KeyId"],[3,"UserId"],[3,"Database"],[3,"StdRng"],[3,"OpaqueExportKey"],[3,"Test"],[3,"Config"],[4,"EventStatus"],[4,"Operation"],[3,"TestState"],[4,"TestError"],[3,"Outcome"],[3,"TestResult"],[4,"Value"],[3,"Error"],[4,"ClientAction"],[4,"Option"],[4,"TestResult"],[6,"Result"],[3,"JoinHandle"],[3,"Mutex"],[3,"Arc"],[3,"OpaqueCipherSuite"],[3,"ServerRegistration"],[13,"Authenticate"],[13,"UnexpectedSuccess"],[13,"IncorrectError"],[13,"TestStateError"],[13,"InvalidAuditEventLog"],[13,"InvalidValueRetrieved"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
