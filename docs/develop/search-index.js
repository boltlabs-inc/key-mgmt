var searchIndex = JSON.parse('{\
"key_server_cli":{"doc":"Implementation of our LockKeeper server.","t":[3,3,12,12,11,11,11,11,11,11,0,12,11,11,11,11,11,5,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11],"n":["Cli","Logging","_all_layer_guard","_server_layer_guard","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","config","config","fmt","from","from","from_arg_matches","from_arg_matches_mut","init_logging","into","into","into_app","into_app_for_update","into_request","into_request","main","private_key","remote_storage_key","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Config","borrow","borrow_mut","clone","clone_into","database","deserialize","fmt","from","from_file","from_ref","from_str","into","into_request","serialize","server","session_cache","to_owned","try_from","try_into","type_id","vzip"],"q":["key_server_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key_server_cli::config","","","","","","","","","","","","","","","","","","","","",""],"d":["","Object representing our logging. Should be kept around as …","","","","","","","","","Config for key server binary.","Path to the server config file","","Returns the argument unchanged.","Returns the argument unchanged.","","","Initialize our logging with three different logging layers:","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Base64 encoded private key data","Base64 encoded remote storage key data","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,9,9,2,2,9,2,9,2,0,2,2,9,2,2,2,0,9,2,2,2,9,2,0,2,2,9,2,9,2,9,2,2,2,9,2,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],0,0,[[2,3],4],[[]],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[8,8],[[7,[9,10]]]],[[]],[[]],[[],1],[[],1],[[],11],[[],11],[[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],12],[[],12],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[]],[[]],0,[[]],[[]],[13,13],[[]],0,[[],[[7,[13]]]],[[13,3],4],[[]],[[[14,[8]]],13],[[]],[15,[[7,[13]]]],[[]],[[],11],[13,7],0,0,[[]],[[],7],[[],7],[[],12],[[]]],"p":[[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"Path"],[3,"Logging"],[4,"LockKeeperServerError"],[3,"Request"],[3,"TypeId"],[3,"Config"],[8,"AsRef"],[15,"str"]]},\
"lk_session_hashmap":{"doc":"This crate is an implementation of a session key cache for …","t":[2,2,0,0,0,3,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Error","HashmapKeyCache","api","config","error","HashmapKeyCache","borrow","borrow_mut","cache","create_session","delete_session","drop","find_session","from","into","into_request","new","session_expiration","try_from","try_into","type_id","vzip","Config","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","from_file","from_ref","from_str","into","into_request","serialize","session_expiration","to_owned","try_from","try_into","type_id","vzip","Error","Io","Toml","borrow","borrow_mut","fmt","fmt","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0"],"q":["lk_session_hashmap","","","","","lk_session_hashmap::api","","","","","","","","","","","","","","","","","lk_session_hashmap::config","","","","","","","","","","","","","","","","","","","","lk_session_hashmap::error","","","","","","","","","","","","","","","","","","","lk_session_hashmap::error::Error",""],"d":["","","","Config for session cache.","","Cache holding session keys, per user, after …","","","Map from user ids to (timestamp, keys).","Add a new session key for the specified user. The previous …","Remove the session key for this user from the hashmap.","","Get the session key for the specified user, if one exists. …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new <code>HashmapKeyCache</code> with the given <code>expiration</code> …","Time a key is considered valid for.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,21,22],"f":[0,0,0,0,0,0,[[]],[[]],0,[[1,2,3]],[[1,2],[[5,[4]]]],[1],[[1,2],[[5,[3,4]]]],[[]],[[]],[[],6],[7,1],0,[[],5],[[],5],[[],8],[[]],0,[[]],[[]],[7,7],[[]],[[],[[5,[7]]]],[[7,9],10],[[]],[[[12,[11]]],[[5,[7,13]]]],[[]],[14,[[5,[7]]]],[[]],[[],6],[7,5],0,[[]],[[],5],[[],5],[[],8],[[]],0,0,0,[[]],[[]],[[13,9],10],[[13,9],10],[[]],[15,13],[16,13],[[]],[[],6],[17],[13,[[19,[18]]]],[[],20],[[],5],[[],5],[[],8],[[]],0,0],"p":[[3,"HashmapKeyCache"],[3,"UserId"],[3,"OpaqueSessionKey"],[4,"SessionCacheError"],[4,"Result"],[3,"Request"],[3,"Config"],[3,"TypeId"],[3,"Formatter"],[6,"Result"],[3,"Path"],[8,"AsRef"],[4,"Error"],[15,"str"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[13,"Io"],[13,"Toml"]]},\
"lock_keeper":{"doc":"Cryptography, protocols, and other shared types and …","t":[2,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,12,12,12,12,12,12,12,12,12,13,4,13,3,13,3,3,13,13,3,3,3,13,3,3,8,3,3,3,3,3,13,17,17,17,0,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,10,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,12,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,13,4,13,3,13,3,13,13,13,3,13,17,17,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,8,3,3,3,3,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,17,17,17,12,12,3,3,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,0,0,3,17,2,2,3,11,11,11,11,0,11,11,11,11,11,11,12,0,12,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,11,11,11,11,11,5,5,5,5,3,3,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,16,16,16,16,8,3,16,16,16,16,16,16,16,3,11,12,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,10,10,10,12,11,11,11,11,11,10,11,11,11,10,10,10,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,2,6,0,0,0,13,3,3,4,4,13,13,13,13,13,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,0,11,11,11,11,12,11,17,17,17,12,12,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,13,4,3,8,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,11,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,12,0,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,0,0,0,12,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,3,3,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,0,0,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,3,11,11,11,11,11,11,11,12,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,0,0,3,11,11,12,11,11,11,11,11,12,11,11,11,11,12,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,3,11,11,11,12,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,13,13,4,3,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,11,12,12,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["LockKeeperError","config","constants","crypto","error","infrastructure","rpc","types","opaque","OpaqueCipherSuite","borrow","borrow_mut","fmt","from","into","into_request","try_from","try_into","type_id","vzip","ACCOUNT_NAME","ACTION","KEY_ID","LOCAL_SERVER_URI","METADATA","USER_ID","0","0","0","0","0","0","0","0","0","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","Export","Import","Infallible","KeyDerivationFailed","KeyId","MasterKey","OpaqueSessionKey","RandomNumberGeneratorFailed","RemoteStorageKey","Secret","Signable","SignableBytes","Signature","SigningKeyPair","SigningPublicKey","StorageKey","VerificationFailed","_DERIVE_Drop_FOR_Export","_DERIVE_Drop_FOR_MasterKey","_DERIVE_Drop_FOR_OpaqueSessionKey","arbitrary_secret","as_bytes","associated_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","context","context","create_and_encrypt_storage_key","derive_key","derive_master_key","deserialize","deserialize","drop","drop","drop","encrypt","encrypt_storage_key","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","generate","generic","get_hash","hash","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_signing_key","key_material","key_material","nonce","original_type","serialize","serialize","sign","signing_key","signing_key","storage_key","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","zeroize","zeroize","0","0","0","Secret","_DERIVE_Drop_FOR_Secret","borrow","borrow_mut","clone","clone_into","context","create_and_encrypt","deserialize","drop","eq","equivalent","fmt","fmt","from","from_ref","import_and_encrypt","into","into_request","serialize","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","vzip","0","AssociatedData","ConversionError","CryptoError","DecryptionFailed","Encrypted","EncryptionFailed","EncryptionKey","Infallible","KeyDerivationFailed","RandomNumberGeneratorFailed","Secret","VerificationFailed","_DERIVE_Drop_FOR_EncryptionKey","_DERIVE_Drop_FOR_Secret","associated_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","context","decrypt","decrypt_inner","decrypt_message","decrypt_secret","decrypt_signing_key","decrypt_signing_key_by_server","decrypt_storage_key","default","deserialize","deserialize","deserialize","domain_separator","drop","drop","encrypt","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","generate","get_hash","get_hash","get_material","hash","hash","into","into","into","into","into","into_bytes","into_request","into_request","into_request","into_request","into_request","key","material","new","new","nonce","original_type","provide","serialize","serialize","serialize","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_message","try_into","try_into","try_into","try_into","try_into","try_into_message","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_bytes","with_str","zeroize","0","0","0","0","0","Import","Signable","SignableBytes","Signature","SigningKeyPair","SigningPublicKey","_DERIVE_Drop_FOR_Import","_DERIVE_Drop_FOR_SigningKeyPair","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","create_and_encrypt","deserialize","deserialize","deserialize","deserialize","domain_separator","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","generate","generation_types","import_and_encrypt","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_signing_key","key_material","new","public_key","remote_generate","serialize","serialize","serialize","serialize","sign","sign","signing_key","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","CLIENT_GENERATED","IMPORTED","SERVER_GENERATED","0","0","RemoteStorageKey","StorageKey","_DERIVE_Drop_FOR_RemoteStorageKey","_DERIVE_Drop_FOR_StorageKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","domain_separator","drop","drop","encrypt_signing_key_pair","eq","equivalent","fmt","fmt","from","from","from_bytes","from_ref","from_ref","generate","generate","into","into","into_request","into_request","read_from_file","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zeroize","AlreadyAuthenticated","Crypto","Hex","InvalidClientAction","InvalidKeyIdLength","InvalidMessage","InvalidPrivateKey","InvalidRemoteStorageKey","InvalidSecretType","Io","LockKeeperError","MetadataNotFound","NoMessageReceived","OpaqueProtocol","SerdeJson","ShouldBeAuthenticated","TokioSender","TonicMetadata","TonicStatus","UnknownSecretType","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","channel","logging","pem_utils","Authenticated","BUFFER_SIZE","ClientChannel","ServerChannel","Unauthenticated","borrow","borrow","borrow_mut","borrow_mut","client","from","from","into","into","into_request","into_request","rng","server","session_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ClientChannel","auth","borrow","borrow_mut","fmt","from","into","into_authenticated","into_metadata","into_request","metadata","metadata","new","receive","receive","receiver","send","send","sender","try_from","try_into","type_id","vzip","ServerChannel","auth","borrow","borrow_mut","fmt","from","into","into_authenticated","into_metadata","into_request","metadata","metadata","new","receive","receive","receiver","send","send","send_error","sender","set_user_id","try_from","try_into","type_id","vzip","record_field","read_certificates","read_private_key_from_bytes","read_private_key_from_file","HealthCheck","Message","borrow","borrow","borrow_mut","borrow_mut","check","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from","from_ref","from_ref","into","into","into_request","into_request","lock_keeper_rpc_client","lock_keeper_rpc_server","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LockKeeperRpcClient","accept_compressed","authenticate","borrow","borrow_mut","clone","clone_into","connect","create_storage_key","fmt","from","from_ref","generate_secret","get_user_id","health","import_signing_key","inner","into","into_request","logout","new","register","remote_generate","remote_sign_bytes","retrieve_audit_events","retrieve_secret","retrieve_storage_key","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","0","AuthenticateStream","CreateStorageKeyStream","GenerateSecretStream","GetUserIdStream","ImportSigningKeyStream","LockKeeperRpc","LockKeeperRpcServer","LogoutStream","RegisterStream","RemoteGenerateStream","RemoteSignBytesStream","RetrieveAuditEventsStream","RetrieveSecretStream","RetrieveStorageKeyStream","_Inner","accept_compressed","accept_compression_encodings","authenticate","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","create_storage_key","fmt","fmt","from","from","from_arc","from_ref","from_ref","generate_secret","get_user_id","health","import_signing_key","inner","into","into","into_make_service","into_request","into_request","logout","new","poll_ready","poll_ready","register","remote_generate","remote_sign_bytes","retrieve_audit_events","retrieve_secret","retrieve_storage_key","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","Message","MessageStream","audit_event","database","operations","All","AuditEvent","AuditEventOptions","EventStatus","EventType","Failed","KeyOnly","Started","Successful","SystemOnly","action","action","actor","after_date","before_date","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","date","date","default","deserialize","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","into","into","into","into","into_client_actions","into_request","into_request","into_request","into_request","key_id","key_ids","new","secret_id","serialize","serialize","serialize","serialize","status","status","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","HexBytes","borrow","borrow_mut","clone","clone_into","deserialize","fmt","fmt","from","from","from","from","from_ref","into","into_request","secrets","serialize","to_owned","to_string","try_from","try_into","type_id","user","vzip","StoredSecret","borrow","borrow_mut","bytes","deserialize","eq","equivalent","fmt","from","from_arbitrary_secret","from_remote_signing_key_pair","from_signing_key_pair","into","into_request","key_id","new","retrieved","secret_type","secret_types","serialize","try_from","try_into","type_id","user_id","vzip","ARBITRARY_SECRET","REMOTE_SIGNING_KEY","SIGNING_KEY_PAIR","0","0","AccountName","User","UserId","account_name","as_bytes","as_bytes","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_str","get_hash","hash","into","into","into","into_iter","into_parts","into_request","into_request","into_request","len","new","new","serialize","serialize","serialize","server_registration","storage_key","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","Authenticate","ClientAction","ClientActionIter","ConvertMessage","CreateStorageKey","ExportSecret","ExportSigningKey","GenerateSecret","GetUserId","ImportSigningKey","Logout","Register","RemoteGenerateSigningKey","RemoteSignBytes","RequestMetadata","ResponseMetadata","RetrieveAuditEvents","RetrieveSecret","RetrieveSigningKey","RetrieveStorageKey","account_name","account_name","action","action","authenticate","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_storage_key","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_message","from_ref","from_ref","from_ref","from_ref","from_str","generate","get","get_user_id","idx","import","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","logout","marker","new","next","next_back","nth","register","remote_generate","remote_sign_bytes","request_id","retrieve_audit_events","retrieve_secret","retrieve_storage_key","serialize","serialize","serialize","set_user_id","size_hint","to_message","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","user_id","vzip","vzip","vzip","vzip","client","server","AuthenticateFinish","AuthenticateStart","account_name","account_name","borrow","borrow","borrow_mut","borrow_mut","credential_finalization","credential_request","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AuthenticateFinish","AuthenticateStart","borrow","borrow","borrow_mut","borrow_mut","credential_response","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RequestUserId","SendStorageKey","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","storage_key","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKeyResult","SendUserId","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","success","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","client","server","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","ciphertext","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","Generate","Store","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","key_id","serialize","serialize","success","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","server","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_into","type_id","user_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_material","serialize","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","success","try_from","try_into","type_id","vzip","client","server","RegisterFinish","RegisterStart","account_name","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_request","registration_upload","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RegisterFinish","RegisterStart","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","into","into","into_request","into_request","registration_response","serialize","serialize","success","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","server","RequestRemoteGenerate","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_into","type_id","user_id","vzip","ReturnKeyId","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_id","public_key","serialize","try_from","try_into","type_id","vzip","client","server","RequestRemoteSign","borrow","borrow_mut","data","deserialize","fmt","from","into","into_request","key_id","serialize","try_from","try_into","type_id","user_id","vzip","ReturnSignature","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","signature","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","event_type","fmt","from","into","into_request","options","serialize","try_from","try_into","type_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","summary_record","try_from","try_into","type_id","vzip","LocalOnly","Null","RetrieveContext","RetrievedSecret","borrow","borrow","borrow_mut","borrow_mut","bytes","client","clone","clone_into","deserialize","deserialize","eq","equivalent","fmt","fmt","from","from","from_ref","into","into","into_request","into_request","key_id","secret_type","serialize","serialize","server","to_owned","try_from","try_from","try_from_stored_secret","try_into","try_into","type_id","type_id","vzip","vzip","Request","borrow","borrow_mut","context","deserialize","fmt","from","into","into_request","key_id","secret_type","serialize","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","deserialize","fmt","from","into","into_request","secret","serialize","try_from","try_into","type_id","vzip","client","server","Request","borrow","borrow_mut","deserialize","fmt","from","into","into_request","serialize","try_from","try_into","type_id","user_id","vzip","Response","borrow","borrow_mut","ciphertext","deserialize","fmt","from","into","into_request","serialize","try_from","try_into","type_id","vzip"],"q":["lock_keeper","","","","","","","","lock_keeper::config","lock_keeper::config::opaque","","","","","","","","","","","lock_keeper::constants","","","","","","lock_keeper::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::CryptoError","","lock_keeper::crypto::arbitrary_secret","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::generic::CryptoError","","lock_keeper::crypto::signing_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::crypto::signing_key::generation_types","","","lock_keeper::crypto::storage_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::error::LockKeeperError","","","","","","","","","lock_keeper::infrastructure","","","lock_keeper::infrastructure::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::infrastructure::channel::client","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::infrastructure::channel::server","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::infrastructure::logging","lock_keeper::infrastructure::pem_utils","","","lock_keeper::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::rpc::lock_keeper_rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types","","","","","lock_keeper::types::audit_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::database","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::database::secrets","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::database::secrets::secret_types","","","lock_keeper::types::database::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::authenticate","","lock_keeper::types::operations::authenticate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::authenticate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::create_storage_key","","lock_keeper::types::operations::create_storage_key::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::create_storage_key::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::generate","","lock_keeper::types::operations::generate::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::generate::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::get_user_id","lock_keeper::types::operations::get_user_id::server","","","","","","","","","","","","","","lock_keeper::types::operations::import","","lock_keeper::types::operations::import::client","","","","","","","","","","","","","","","lock_keeper::types::operations::import::server","","","","","","","","","","","","","","lock_keeper::types::operations::logout","","lock_keeper::types::operations::logout::client","","","","","","","","","","","","","","lock_keeper::types::operations::logout::server","","","","","","","","","","","","","","lock_keeper::types::operations::register","","lock_keeper::types::operations::register::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::register::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::remote_generate","","lock_keeper::types::operations::remote_generate::client","","","","","","","","","","","","","","lock_keeper::types::operations::remote_generate::server","","","","","","","","","","","","","","","lock_keeper::types::operations::remote_sign_bytes","","lock_keeper::types::operations::remote_sign_bytes::client","","","","","","","","","","","","","","","","lock_keeper::types::operations::remote_sign_bytes::server","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_audit_events","","lock_keeper::types::operations::retrieve_audit_events::client","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_audit_events::server","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_secret","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_secret::client","","","","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_secret::server","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_storage_key","","lock_keeper::types::operations::retrieve_storage_key::client","","","","","","","","","","","","","","lock_keeper::types::operations::retrieve_storage_key::server","","","","","","","","","","","","",""],"d":["","Configuration types","Constants that are shared between other crates in this …","Application-specific cryptographic types and operations.","Error type for all errors returned to code outside of this …","Modules that facilitate basic client-server operations","","Type definitions that are shared between crates but have …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted …","","Raw material for an exported signing key.","Raw material for an imported signing key.","","","Universally unique identifier for a stored secret or …","The master key is a default-length symmetric encryption …","A session key is produced as shared output for client and …","","The remote storage key is a default-length symmetric …","An arbitrary secret.","Provides the methods necessary to sign and verify a piece …","Wrapper used to declare arbitrary bytes as <code>Signable</code>.","A signature on an object encrypted under the ECDSA …","An ECDSA signing key pair, including a public component …","The public component of an ECDSA signing key, and context …","A storage key is a default-length symmetric encryption key …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an encrypted storage key. This is part of the …","Derive a new key from <code>MasterKey</code> using <code>AssociatedData</code> as the","Derive a uniformly distributed secret <code>MasterKey</code> using the …","","","","","","Encrypt the given <code>Message</code> under the <code>OpaqueSessionKey</code> using …","Encrypt the given <code>StorageKey</code> under a derivation from the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Generate a new, random <code>KeyId</code> for the given <code>UserId</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Convert <code>Export</code> into a <code>SigningKeyPair</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An arbitrary secret.","","","","","","Retrieve the context for the secret.","Create and encrypt a new secret. This is part of the …","","","","","","","Returns the argument unchanged.","","Create a <code>Secret</code> from an imported key and encrypt it for …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The associated data used in <code>Encrypted</code> AEAD ciphertexts and …","","Errors that arise in the cryptography module.","","A ciphertext representing an object of type <code>T</code>, encrypted …","","A well-formed symmetric encryption key for an AEAD scheme.","","","","A generic secret.","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the context for this secret.","","Additional context about the secret.","","Decrypt the ciphertext to a <code>T</code>.","","Decrypt a secret. This should be run as part of the …","Decrypt a signing key. This should be run as part of the …","Decrypt a signing key. This should be run by the server as …","Decrypt a storage key. This should be run as part of the …","","","","","","","","Encrypt the <code>T</code> and authenticate the <code>AssociatedData</code> under the","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new secret from its constituent parts. This is …","","","","","","Generate a new secret of length <code>len</code> (in bytes).","","","Retrieve key material.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The actual bytes of secret material.","","Generate a new symmetric AEAD encryption key from scratch.","","","","","","","","","","","","","","","","","","","","","","","","Translates a <code>Message</code> received through an authenticated …","","","","","","Translates an <code>Encrypted&lt;Message&gt;</code> to a <code>Message</code> in order to …","","","","","","","","","","","","","","","","","","","Raw material for an imported signing key.","Provides the methods necessary to sign and verify a piece …","Wrapper used to declare arbitrary bytes as <code>Signable</code>.","A signature on an object encrypted under the ECDSA …","An ECDSA signing key pair, including a public component …","The public component of an ECDSA signing key, and context …","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the context associated with the signing key.","","Create and encrypt a new signing key for storage at a …","","","","","Domain separator for use in serializing signing keypairs.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create a new <code>SigningKeyPair</code> with the given associated data.","","Create a <code>SigningKeyPair</code> from an imported key and encrypt …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Convert an <code>Import</code> into a <code>SigningKeyPair</code> with appropriate …","","Create a new <code>Import</code> around the bytes representing signing …","Retrieve the public portion of the key.","Create a new <code>SigningKeyPair</code>. This must be run by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The remote storage key is a default-length symmetric …","A storage key is a default-length symmetric encryption key …","","","","","","","","","","","","","","Encrypt the given <code>SigningKeyPair</code> under the <code>RemoteStorageKey</code>…","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the remote storage key found in the given bytes","","","Generate a new 32-byte <code>RemoteStorageKey</code>.","Generate a new 32-byte <code>StorageKey</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the remote storage key found in the file at the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Utilities for our logging (tracing) infrastructure.","Convenience functions for dealing with PEM files.","Passed to channel types as the <code>AUTH</code> generic parameter. It …","","","","Passed to channel types as the <code>AUTH</code> generic parameter. It …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A two-way channel between a client and server used to …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Consumes the channel and returns the metadata. Use this …","","Returns the metadata associated with this channel.","","","Receive the next message on the channel and convert it to …","Receive the next message on the channel and convert it to …","","Send a message across the channel. This function accepts …","Send a message across the channel. This function accepts …","","","","","","A two-way channel between a client and server used to …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Consumes the channel and returns the metadata. Use this …","","Returns the metadata associated with this channel.","","","Receive the next message on the channel and convert it to …","Receive the next message on the channel and convert it to …","","Send a message across the channel. This function accepts …","Send a message across the channel. This function accepts …","Send an error message across the channel.","","","","","","","For the current active span, record <code>field_value</code> for the …","Returns all certificates in the pemfile at the given path","Returns the first private key found in the given bytes","Returns the first private key found in the pemfile at the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Compress requests with the given encoding.","","","","","","","","","Server streaming response type for the Authenticate method.","Server streaming response type for the CreateStorageKey …","Server streaming response type for the GenerateSecret …","Server streaming response type for the GetUserId method.","Server streaming response type for the ImportSigningKey …","Generated trait containing gRPC methods that should be …","","Server streaming response type for the Logout method.","Server streaming response type for the Register method.","Server streaming response type for the RemoteGenerate …","Server streaming response type for the RemoteSignBytes …","Server streaming response type for the RetrieveAuditEvents …","Server streaming response type for the RetrieveSecret …","Server streaming response type for the RetrieveStorageKey …","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Audit events, and associated fields and types","Models for data stored in the database","Types related to server operations and the protocols they …","","A single entry that specifies the actor, action, outcome, …","Optional parameters to filter <code>AuditEvent</code>s by","Options for the outcome of a given action in a <code>AuditEvent</code>","Options for which types of events to retrieve from the key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenience type for serializing byte arrays as hex …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Database models for secrets","","","","","","","Database models for users and user-related fields","","Generic representation of a secret that is stored in a …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Account name used as human-memorable identifier for a user …","One user with a set of arbitrary secrets and a …","Unique ID for a user. Wrapped in a <code>Box</code> to avoid stack …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for actions the Lock Keeper client can take.","An iterator over the variants of Self","Converts a serializable Rust type to and from the RPC …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass account name and registration-finish message from …","Pass account name and registration-start message from …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Return true if successful.","Check if user exists and return OPAQUE message if so","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","pass user ID to server","pass user ID and encrypted secret","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","return new requested key ID","Return true if successful","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","send user ID and material to import","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","return new requested key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","send user ID and material to import","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","return new requested key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","pass user ID and registration-finish message from OPAQUE","pass user ID and registration-start message from OPAQUE","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return true if successful","Check if user exists and return successful if not","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Query specific set of audit event logs","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Return vector of audit events","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Options for the asset owner’s intended use of a secret","Generic representation of a secret that is retrieved by a …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","pass user ID and key ID to server","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","return requested key and key ID","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","pass user ID to server","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","return encrypted storage key","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,22,47,30,25,36,12,8,9,7,17,0,17,0,17,0,0,17,17,0,0,0,17,0,0,0,0,0,0,0,0,17,0,0,0,0,7,13,8,9,7,10,8,9,7,10,13,8,9,7,10,8,9,7,10,23,10,9,9,9,7,10,8,9,10,8,9,9,7,9,7,8,9,7,10,8,9,7,10,10,10,8,9,7,10,7,0,7,7,8,9,7,10,7,8,9,7,10,10,48,10,13,13,7,10,138,0,23,0,8,9,7,10,8,8,9,7,7,10,8,9,7,10,8,9,7,10,138,8,9,7,10,8,9,139,140,22,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,15,0,17,0,17,0,17,0,17,17,17,0,17,0,0,13,17,15,13,16,34,17,15,13,16,34,13,17,15,13,16,34,17,15,13,16,34,34,16,34,13,13,13,13,13,13,13,15,15,13,34,16,16,34,13,15,13,16,34,15,13,16,34,17,17,15,13,16,34,17,17,15,13,16,34,16,34,17,15,13,16,34,34,15,16,34,15,16,17,15,13,16,34,16,17,15,13,16,34,16,34,15,16,13,13,17,15,13,34,17,17,15,13,16,34,17,17,15,15,13,13,13,16,16,34,34,13,17,15,13,16,34,13,17,15,13,16,34,17,15,13,16,34,15,15,16,139,140,47,30,25,0,0,0,0,0,0,0,0,47,25,47,23,30,48,25,47,23,30,48,25,47,23,30,48,25,47,23,30,48,25,23,23,23,47,30,48,25,23,23,48,47,25,47,25,23,30,25,23,30,25,47,23,30,48,25,47,23,30,48,25,47,23,30,48,25,23,0,23,47,23,30,48,25,47,23,30,48,25,48,48,48,23,23,47,30,48,25,138,47,23,47,23,30,48,25,47,23,23,23,30,48,48,25,47,23,30,48,25,47,23,30,48,25,138,47,47,23,30,48,25,0,0,0,36,12,0,0,0,0,36,12,36,12,36,12,36,12,12,36,12,36,12,12,36,12,36,12,36,36,12,36,12,36,12,36,12,36,36,12,36,12,12,36,12,36,12,36,12,36,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,141,142,143,144,145,146,147,148,149,0,0,0,0,0,0,0,0,64,59,64,59,0,64,59,64,59,64,59,64,0,64,64,59,64,59,64,59,64,59,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,20,75,20,75,75,20,75,20,75,20,75,20,20,75,20,75,20,75,20,75,20,20,75,20,75,20,75,20,75,0,0,20,75,20,75,20,75,20,75,20,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,90,84,84,84,84,84,0,0,84,84,84,84,84,84,84,0,85,85,84,90,85,90,85,85,85,90,85,90,85,84,90,85,90,85,85,90,85,84,84,84,84,85,90,85,85,90,85,84,85,85,85,84,84,84,84,84,84,85,85,90,85,90,85,90,85,90,85,90,85,85,0,0,0,0,0,99,0,0,0,0,96,99,96,96,99,94,94,94,98,98,96,94,99,98,96,94,99,98,96,96,94,94,98,96,94,99,98,96,96,96,94,94,99,98,96,94,99,98,96,96,94,99,98,99,96,94,99,98,94,98,94,94,96,94,99,98,94,94,96,94,96,94,99,98,96,94,99,98,96,94,99,98,96,94,99,98,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,29,29,29,29,0,29,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,0,11,100,0,0,0,101,11,100,100,101,11,100,101,11,100,11,100,11,100,11,101,11,100,11,100,11,100,101,11,11,100,100,101,11,100,11,100,100,11,11,101,11,100,11,101,101,11,100,11,101,11,101,11,100,101,101,11,100,11,100,101,11,11,100,101,11,100,101,11,100,101,101,11,100,95,0,0,0,95,95,95,95,95,95,95,95,95,95,0,0,95,95,95,95,71,71,71,71,0,103,95,103,71,65,95,103,71,65,95,103,71,65,95,103,71,65,0,95,71,65,95,95,95,95,71,65,95,103,71,65,69,95,103,71,65,95,0,103,0,103,0,95,103,71,65,103,95,103,71,65,95,103,0,103,71,103,103,103,0,0,0,65,0,0,0,95,71,65,71,103,69,95,103,71,65,95,95,95,103,71,71,65,65,95,103,71,65,95,103,71,65,71,71,95,103,71,65,0,0,0,0,106,107,106,107,106,107,107,106,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,0,0,108,109,108,109,108,108,109,108,109,108,109,108,109,108,109,108,109,109,108,109,108,109,108,109,108,109,0,0,0,0,110,110,111,110,111,110,111,110,111,110,111,110,111,110,111,110,111,111,110,111,110,111,110,111,111,110,111,0,0,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,113,112,113,112,113,112,113,112,112,113,0,0,0,0,114,115,114,115,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,0,0,116,117,116,117,116,117,116,117,116,117,116,117,116,117,116,116,117,117,116,117,116,117,116,117,116,117,0,0,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,121,121,121,121,121,121,121,121,121,121,121,121,121,0,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,123,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,0,0,125,126,125,126,125,126,125,126,125,126,125,126,125,126,125,125,126,126,125,126,125,126,125,126,125,126,0,0,0,127,127,127,127,127,127,127,127,127,127,127,127,127,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,0,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,0,0,133,44,133,44,44,0,133,133,133,44,44,44,133,44,133,44,133,133,44,133,44,44,44,133,44,0,133,133,44,44,133,44,133,44,133,44,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,136,136,136,136,136,136,136,136,136,136,136,136,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[1,2],3],[[]],[[]],[[],4],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[8,8],[9,9],[7,7],[10,10],[[]],[[]],[[]],[[]],0,0,[[9,11],[[5,[[13,[12]],14]]]],[[9,15],[[5,[16,17]]]],[[[19,[18]]],[[5,[9,14]]]],[[],[[5,[7]]]],[[],[[5,[10]]]],[8],[9],[10],[[8,20],[[5,[[13,[20]],17]]]],[[9,12,11],[[5,[[13,[12]],17]]]],[[9,9],21],[[7,7],21],[[],21],[[],21],[[8,2],3],[[9,2],3],[[7,2],3],[[10,2],3],[[]],[[]],[[]],[22,10],[[]],[23,10],[[]],[[]],[[]],[[]],[11,[[5,[7,14]]]],0,[[],24],[7],[[]],[[]],[[]],[[]],[7],[[],4],[[],4],[[],4],[[],4],[10,[[5,[23,14]]]],0,0,0,0,[7,5],[10,5],[23,25],0,0,0,[[]],[[]],[[]],[[]],[[],5],[[[28,[26,27]]],[[5,[8]]]],[[],5],[29,[[5,[7]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[30,25],[[5,[14]]]],[[]],[[]],[[]],[[]],[8],[9],0,0,0,0,0,[[]],[[]],[22,22],[[]],[22,15],[[12,11,7],[[5,[14]]]],[[],[[5,[22]]]],[22],[[22,22],21],[[],21],[[22,2],3],[[22,2],3],[[]],[[]],[[12,11,7],[[5,[14]]]],[[]],[[],4],[22,5],[[]],[[],31],[[[32,[26]]],[[5,[22]]]],[10,[[5,[22]]]],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[17,17],[15,15],[[[13,[33]]],[[13,[33]]]],[16,16],[34,34],[[]],[[]],[[]],[[]],[[]],[34,15],0,0,[[[13,[23]],16,11,7,[32,[35]]],[[5,[23,14]]]],[[13,16],[[5,[17]]]],[[[13,[20]],8],[[5,[20,14]]]],[[[13,[22]],12],[[5,[22,14]]]],[[[13,[23]],12,11,7],[[5,[23,14]]]],[[[13,[23]],36,11,7],[[5,[23,14]]]],[[[13,[12]],9,11],[[5,[12,14]]]],[[],15],[[],[[5,[15]]]],[[],[[5,[13]]]],[[],[[5,[34]]]],[[],35],[16],[34],[[16,15],[[5,[13,17]]]],[[15,15],21],[[[13,[37]],13],21],[[16,16],21],[[34,34],21],[[],21],[[],21],[[],21],[[],21],[[17,2],3],[[17,2],3],[[15,2],3],[[[13,[38]],2],3],[[16,2],3],[[34,2],3],[[]],[39,17],[[]],[[]],[[]],[[]],[15,16],[15,34],[[]],[[]],[[]],[[]],[[]],[[40,15],34],[[],24],[[],24],[34],[15],[16],[[]],[[]],[[]],[[]],[[]],[16],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[],15],[[],16],0,0,[41],[15,5],[13,5],[34,5],[17,[[43,[42]]]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],5],[[[32,[26]]],[[5,[15]]]],[[],5],[[],5],[44,[[5,[[13,[22]]]]]],[45,[[5,[[13,[23]]]]]],[[[32,[26]]],[[5,[16]]]],[[],5],[[[32,[26]]],[[5,[34]]]],[[],5],[20,[[5,[[13,[20]],14]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[[13,[20]]],[[5,[20,14]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[15,46],15],[[15,35],15],[16],0,0,0,0,0,0,0,0,0,0,0,0,0,[47],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[23,23],[30,30],[48,48],[25,25],[[]],[[]],[[]],[[]],[[]],[23,15],0,[[12,11,7],[[5,[14]]]],[[],[[5,[47]]]],[[],[[5,[30]]]],[[],[[5,[48]]]],[[],[[5,[25]]]],[[],35],[23],[48],[[]],[[]],[[]],[[]],[[23,23],21],[[30,30],21],[[25,25],21],[[],21],[[],21],[[],21],[[47,2],3],[[23,2],3],[[30,2],3],[[48,2],3],[[25,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,23],0,[[12,11,7],[[5,[14]]]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[48,11,7],[[5,[23,14]]]],0,[[[32,[26]]],[[5,[48,14]]]],[23,30],[[11,7],23],[47,5],[30,5],[48,5],[25,5],[23,25],[[47,23],25],0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[44,[[5,[23]]]],[[[32,[26]]],[[5,[23]]]],[[],5],[[],5],[[],[[5,[48]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[30,25],[[5,[14]]]],[[47,30,25],[[5,[14]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[36,36],[12,12],[[]],[[]],[[],35],[36],[12],[[36,23],[[5,[[13,[23]],14]]]],[[12,12],21],[[],21],[[36,2],3],[[12,2],3],[[]],[[]],[[],[[5,[36,14]]]],[[]],[[]],[[],36],[[],12],[[]],[[]],[[],4],[[],4],[[[50,[49]]],[[5,[36,14]]]],[[]],[[]],[[],5],[[[32,[26]]],[[5,[12]]]],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],[36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[14,2],3],[[14,2],3],[51,14],[52,14],[[]],[53,14],[54,14],[55,14],[17,14],[56,14],[57,14],[[]],[[],4],[41],[14,[[43,[42]]]],[[],31],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],4],[[],4],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[[58,[38]],2],3],[[]],[[]],[[[58,[59]],8,[63,[[62,[[0,[60,61]]]]]]],[[58,[[64,[[0,[60,61]]]]]]]],[58,65],[[],4],[58,65],0,[[[66,[20]],[68,[[67,[20]]]]],[[5,[[58,[59]],14]]]],[[[58,[[64,[[0,[60,61]]]]]]],[[5,[69,14]]]],[[[58,[59]]],[[5,[69,14]]]],0,[[[58,[59]],69],[[5,[14]]]],[[[58,[[64,[[0,[60,61]]]]]],69],[[5,[14]]]],0,[[],5],[[],5],[[],6],[[]],0,0,[[]],[[]],[[[70,[38]],2],3],[[]],[[]],[[[70,[59]],8,[63,[[62,[[0,[60,61]]]]]]],[[70,[[64,[[0,[60,61]]]]]]]],[70,71],[[],4],[70,71],0,[[[4,[[67,[20]]]]],[[5,[14]]]],[[[70,[[64,[[0,[60,61]]]]]]],[[5,[69,14]]]],[[[70,[59]]],[[5,[69,14]]]],0,[[[70,[59]],69],[[5,[14]]]],[[[70,[[64,[[0,[60,61]]]]]],69],[[5,[14]]]],[[70,[72,[52]]],[[5,[14]]]],0,[[70,11]],[[],5],[[],5],[[],6],[[]],[[35,38]],[[[50,[49]]],[[5,[[32,[73]],14]]]],[[],[[5,[74,14]]]],[[[50,[49]]],[[5,[74,14]]]],0,0,[[]],[[]],[[]],[[]],0,[20],[75],[20,20],[75,75],[[]],[[]],0,[[],20],[[],75],[20,40],[75,40],[[20,20],21],[[75,75],21],[[20,2],3],[[75,2],3],[[[32,[26]]],20],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,[[76,77],76],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[]],[[]],[[[76,[33]]],[[76,[33]]]],[[]],[[],[[5,[[76,[79]],80]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[[76,[38]],2],3],[[]],[[]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,[81,[75]]],[[5,[[68,[75]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],0,[[]],[[],4],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[],76],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,78],[[5,[[68,[[67,[20]]]],52]]]],[[76,77],76],[[]],[[],5],[[],5],[[],6],[[]],[[],[[76,[82]]]],[83,76],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[85,[84]],77],[[85,[84]]]],0,[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[]],[[]],[[]],[[]],[[85,89]],[89],[[[90,[84]]],[[90,[84]]]],[[[85,[84]]],[[85,[84]]]],[[]],[[]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[90,[38]],2],3],[[[85,[[0,[38,84]]]],2],3],[[]],[[]],[[[63,[84]]],[[85,[84]]]],[[]],[[]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[75]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],0,[[]],[[]],[[],91],[[],4],[[],4],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[84,[[85,[84]]]],[92,[[93,[5]]]],[[85,92],[[93,[5]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[4,[[67,[20]]]]],[[88,[[87,[86]]]]]],[[[85,[84]],77],[[85,[84]]]],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],[84,[[82,[[85,[84]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94,95],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[[]],[94,97],0,[[],98],[[],[[5,[96]]]],[[],[[5,[94]]]],[[],[[5,[99]]]],[[],[[5,[98]]]],[[96,96],21],[[],21],[[96,2],3],[[94,2],3],[[94,2],3],[[99,2],3],[[98,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,[[32,[95]]]],[[],4],[[],4],[[],4],[[],4],[94,[[43,[7]]]],0,[[100,[43,[7]],95,96],94],0,[96,5],[94,5],[99,5],[98,5],[94,96],0,[[]],[[],31],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[29,29],[[]],[[],[[5,[29]]]],[[29,2],3],[[29,2],3],[11,29],[50,29],[7,29],[[]],[[]],[[]],[[],4],0,[29,5],[[]],[[],31],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],0,[[],[[5,[45]]]],[[45,45],21],[[],21],[[45,2],3],[[]],[[7,11,[13,[22]]],[[5,[45,14]]]],[[7,[13,[23]],11],[[5,[45,14]]]],[[7,11,[13,[23]]],[[5,[45,14]]]],[[]],[[],4],0,[[7,11,[72,[31]],[72,[[32,[26]]]]],[[5,[45,14]]]],0,0,0,[45,5],[[],5],[[],5],[[],6],0,[[]],0,0,0,0,0,0,0,0,0,[11],[100],[100,35],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[100,100],[[]],[[]],[[],11],[[],[[5,[101]]]],[[],[[5,[11]]]],[[],[[5,[100]]]],[[11,11],21],[[100,100],21],[[],21],[[],21],[[101,2],3],[[11,2],3],[[11,2],3],[[100,2],3],[[100,2],3],[[]],[[]],[[]],[[]],[[]],[35,[[5,[100]]]],[[],24],[11],[[]],[[]],[[]],[11],[101],[[],4],[[],4],[[],4],[11,40],[[11,100,[102,[1]]],101],[[],[[5,[11,14]]]],[101,5],[11,5],[100,5],0,0,[[]],[[]],[[],31],[[],31],[[],5],[[],5],[29,[[5,[11]]]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[71,100],0,[71,95],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,95],[103,103],[71,71],[65,65],[[]],[[]],[[]],[[]],0,[[],[[5,[95]]]],[[],[[5,[71]]]],[[],[[5,[65]]]],[[95,95],21],[[],21],[[95,2],[[5,[104]]]],[[95,2],3],[[71,2],3],[[65,2],3],[[]],[[]],[[]],[[]],[20,[[5,[14]]]],[[]],[[]],[[]],[[]],[35,[[5,[95]]]],0,[[103,40],[[43,[95]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],103],[103,40],0,0,[[100,95,[43,[11]]],71],[103,43],[103,43],[[103,40],43],0,0,0,0,0,0,0,[95,5],[71,5],[65,5],[[71,11]],[103],[[],[[5,[20,14]]]],[[]],[[]],[[]],[[]],[[],31],[[],5],[35,[[5,[95]]]],[[],5],[105,[[5,[71]]]],[[],5],[[],5],[105,[[5,[65]]]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[71,[[43,[11]]]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[5,[106]]]],[[],[[5,[107]]]],[[106,2],3],[[107,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[106,5],[107,5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,[[],[[5,[108]]]],[[],[[5,[109]]]],[[108,2],3],[[109,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[108,5],[109,5],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[5,[110]]]],[[],[[5,[111]]]],[[110,2],3],[[111,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[110,5],[111,5],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[5,[112]]]],[[],[[5,[113]]]],[[112,2],3],[[113,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[112,5],[113,5],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],[[5,[114]]]],[[],[[5,[115]]]],[[114,2],3],[[115,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[114,5],[115,5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[5,[116]]]],[[],[[5,[117]]]],[[116,2],3],[[117,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],0,[116,5],[117,5],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[],[[5,[118]]]],[[118,2],3],[[]],[[]],[[],4],[118,5],[[],5],[[],5],[[],6],0,[[]],0,0,0,[[]],[[]],[[],[[5,[119]]]],[[119,2],3],[[]],[[]],[[],4],0,[119,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],[[],[[5,[120]]]],[[120,2],3],[[]],[[]],[[],4],0,[120,5],[[],5],[[],5],[[],6],[[]],0,0,0,[[]],[[]],[[],[[5,[121]]]],[[121,2],3],[[]],[[]],[[],4],[121,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],[[],[[5,[122]]]],[[122,2],3],[[]],[[]],[[],4],[122,5],0,[[],5],[[],5],[[],6],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[5,[123]]]],[[],[[5,[124]]]],[[123,2],3],[[124,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],0,0,[123,5],[124,5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],[[5,[125]]]],[[],[[5,[126]]]],[[125,2],3],[[126,2],3],[[]],[[]],[[]],[[]],[[],4],[[],4],0,[125,5],[126,5],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,0,0,[[]],[[]],[[],[[5,[127]]]],[[127,2],3],[[]],[[]],[[],4],[127,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],[[],[[5,[128]]]],[[128,2],3],[[]],[[]],[[],4],0,0,[128,5],[[],5],[[],5],[[],6],[[]],0,0,0,[[]],[[]],0,[[],[[5,[129]]]],[[129,2],3],[[]],[[]],[[],4],0,[129,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],[[],[[5,[130]]]],[[130,2],3],[[]],[[]],[[],4],[130,5],0,[[],5],[[],5],[[],6],[[]],0,0,0,[[]],[[]],[[],[[5,[131]]]],0,[[131,2],3],[[]],[[]],[[],4],0,[131,5],[[],5],[[],5],[[],6],[[]],0,[[]],[[]],[[],[[5,[132]]]],[[132,2],3],[[]],[[]],[[],4],[132,5],0,[[],5],[[],5],[[],6],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,[133,133],[[]],[[],[[5,[133]]]],[[],[[5,[44]]]],[[44,44],21],[[],21],[[133,2],3],[[44,2],3],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],0,0,[133,5],[44,5],0,[[]],[[],5],[[],5],[[45,11,36],[[5,[44,14]]]],[[],5],[[],5],[[],6],[[],6],[[]],[[]],0,[[]],[[]],0,[[],[[5,[134]]]],[[134,2],3],[[]],[[]],[[],4],0,0,[134,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],[[],[[5,[135]]]],[[135,2],3],[[]],[[]],[[],4],0,[135,5],[[],5],[[],5],[[],6],[[]],0,0,0,[[]],[[]],[[],[[5,[136]]]],[[136,2],3],[[]],[[]],[[],4],[136,5],[[],5],[[],5],[[],6],0,[[]],0,[[]],[[]],0,[[],[[5,[137]]]],[[137,2],3],[[]],[[]],[[],4],[137,5],[[],5],[[],5],[[],6],[[]]],"p":[[3,"OpaqueCipherSuite"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"KeyId"],[3,"OpaqueSessionKey"],[3,"MasterKey"],[3,"Export"],[3,"UserId"],[3,"StorageKey"],[3,"Encrypted"],[4,"LockKeeperError"],[3,"AssociatedData"],[3,"EncryptionKey"],[4,"CryptoError"],[6,"Sha512"],[6,"Output"],[3,"Message"],[15,"bool"],[3,"Secret"],[3,"SigningKeyPair"],[15,"u64"],[3,"Signature"],[15,"u8"],[6,"U64"],[3,"GenericArray"],[3,"HexBytes"],[3,"SigningPublicKey"],[3,"String"],[3,"Vec"],[8,"Clone"],[3,"Secret"],[15,"str"],[3,"RemoteStorageKey"],[8,"PartialEq"],[8,"Debug"],[4,"Infallible"],[15,"usize"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"RetrievedSecret"],[3,"StoredSecret"],[8,"IntoIterator"],[3,"SignableBytes"],[3,"Import"],[3,"Path"],[8,"AsRef"],[4,"FromHexError"],[3,"Status"],[3,"Error"],[3,"InvalidMetadataValueBytes"],[3,"Error"],[4,"ProtocolError"],[3,"SendError"],[3,"ClientChannel"],[3,"Unauthenticated"],[8,"CryptoRng"],[8,"RngCore"],[3,"Mutex"],[3,"Arc"],[3,"Authenticated"],[3,"ResponseMetadata"],[3,"Sender"],[3,"Streaming"],[3,"Response"],[8,"ConvertMessage"],[3,"ServerChannel"],[3,"RequestMetadata"],[8,"Into"],[3,"Certificate"],[3,"PrivateKey"],[3,"HealthCheck"],[3,"LockKeeperRpcClient"],[4,"CompressionEncoding"],[8,"IntoStreamingRequest"],[3,"Channel"],[3,"Error"],[8,"IntoRequest"],[3,"InterceptedService"],[3,"Uri"],[8,"LockKeeperRpc"],[3,"LockKeeperRpcServer"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"_Inner"],[3,"IntoMakeService"],[3,"Context"],[4,"Poll"],[3,"AuditEvent"],[4,"ClientAction"],[4,"EventStatus"],[3,"DateTime"],[3,"AuditEventOptions"],[4,"EventType"],[3,"AccountName"],[3,"User"],[3,"ServerRegistration"],[3,"ClientActionIter"],[3,"Error"],[3,"MetadataValue"],[3,"AuthenticateStart"],[3,"AuthenticateFinish"],[3,"AuthenticateStart"],[3,"AuthenticateFinish"],[3,"RequestUserId"],[3,"SendStorageKey"],[3,"SendUserId"],[3,"CreateStorageKeyResult"],[3,"Generate"],[3,"Store"],[3,"Generate"],[3,"Store"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"Request"],[3,"Response"],[3,"RegisterStart"],[3,"RegisterFinish"],[3,"RegisterStart"],[3,"RegisterFinish"],[3,"RequestRemoteGenerate"],[3,"ReturnKeyId"],[3,"RequestRemoteSign"],[3,"ReturnSignature"],[3,"Request"],[3,"Response"],[4,"RetrieveContext"],[3,"Request"],[3,"Response"],[3,"Request"],[3,"Response"],[8,"Signable"],[13,"KeyDerivationFailed"],[13,"Infallible"],[13,"Crypto"],[13,"UnknownSecretType"],[13,"Hex"],[13,"Io"],[13,"OpaqueProtocol"],[13,"SerdeJson"],[13,"TokioSender"],[13,"TonicMetadata"],[13,"TonicStatus"]]},\
"lock_keeper_client":{"doc":"This crate is an implementation of a client to a key …","t":[2,2,2,2,2,0,0,0,0,0,3,3,3,0,11,11,0,11,11,11,0,0,0,11,11,12,12,12,12,12,0,0,0,0,0,11,11,11,11,11,5,5,5,5,3,11,11,11,11,5,5,11,11,12,12,11,11,11,11,5,5,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,3,3,6,3,17,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,3,3,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,6,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["Config","LockKeeperClient","LockKeeperClientError","LockKeeperResponse","Result","api","client","config","error","response","GenerateResult","LocalStorage","RemoteGenerateResult","authenticate","borrow","borrow_mut","create_storage_key","deserialize","fmt","from","generate_secret","get_user_id","import","into","into_request","key_id","key_id","local_storage","material","public_key","register","remote_generate_signing_key","remote_sign_bytes","retrieve","retrieve_audit_events","serialize","try_from","try_into","type_id","vzip","authenticate_finish","authenticate_start","create_and_send_storage_key","request_user_id","GenerateResult","borrow","borrow_mut","fmt","from","generate_and_store","get_key_id","into","into_request","key_id","local_storage","try_from","try_into","type_id","vzip","register_finish","register_start","RemoteGenerateResult","borrow","borrow_mut","deserialize","fmt","from","into","into_request","key_id","public_key","serialize","try_from","try_into","type_id","vzip","0","AuthenticateResult","LockKeeperClient","LockKeeperRpcClientInner","Password","_DERIVE_Drop_FOR_Password","account_name","account_name","as_bytes","authenticate","authenticated_client","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","config","connect","create_authenticated_channel","create_channel","create_metadata","default","drop","export_secret","export_signing_key","fmt","fmt","from","from","from","from_str","generate_secret","handle_authentication","handle_create_storage_key","handle_generate_secret","handle_get_user_id","handle_import_signing_key","handle_logout","handle_registration","handle_remote_generate_signing_key","handle_remote_sign_bytes","handle_retrieve_audit_events","handle_retrieve_secret","handle_retrieve_signing_key","health","import_signing_key","into","into","into","into_request","into_request","into_request","logout","master_key","master_key","register","remote_generate","remote_sign_bytes","retrieve_audit_event_log","retrieve_secret","retrieve_storage_key","rng","session_key","session_key","tonic_client","tonic_client","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","user_id","vzip","vzip","vzip","zeroize","ClientAuth","Config","ConfigFile","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ca_chain","certificate_chain","client_auth","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from_config_file","from_file","from_ref","from_ref","from_ref","from_str","into","into","into","into_request","into_request","into_request","private_key","serialize","serialize","server_uri","server_uri","tls_config","tls_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AccountAlreadyRegistered","AuthenticatedChannelNeeded","ClientAuthMissing","ExportFailed","HealthCheckFailed","HttpNotAllowed","InvalidAccount","InvalidKeyRetrieved","InvalidLogin","InvalidUri","Io","LockKeeper","LockKeeperClientError","LockKeeperCrypto","LogoutFailed","OpaqueProtocol","PrivateKeyMissing","Result","Rustls","ServerReturnedFailure","Toml","TonicStatus","TonicTransport","UnauthenticatedChannelNeeded","WebPki","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","LockKeeperResponse","borrow","borrow_mut","clone","clone_into","data","fmt","from","from_channel","from_ref","into","into_inner","into_request","metadata","to_owned","try_from","try_into","type_id","vzip"],"q":["lock_keeper_client","","","","","","","","","","lock_keeper_client::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::api::authenticate","","lock_keeper_client::api::create_storage_key","","lock_keeper_client::api::generate_secret","","","","","","","","","","","","","","","lock_keeper_client::api::register","","lock_keeper_client::api::remote_generate_signing_key","","","","","","","","","","","","","","","lock_keeper_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client::error::LockKeeperClientError","","","","","","","","","","","lock_keeper_client::response","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Full implementation of the public API for the Lock Keeper …","Client object to interact with the key server.","","","","","Wrapper for secrets prepared for local storage","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A <code>LockKeeperClient</code> is an abstraction over client …","Connection type used by <code>LockKeeperRpcClient</code>. This would …","","","Get <code>AccountName</code> for the authenticated client.","","","","Authenticate to the Lock Keeper key server as a previously …","","","","","","","","Create a <code>tonic</code> client object and return it to the client …","Helper to create the appropriate <code>ClientChannel</code> to send to …","Helper to create the appropriate <code>ClientChannel</code> to send to …","","","","Export an arbitrary key from the key servers.","Export signing key pair material from the key servers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate an arbitrary secret client-side, store this …","","Creates a storage key and sends it to the key server","","","","Close a session.","","","","","Handles the retrieval of arbitrary secrets (…","Handles the retrieval of signing keys (…","Ping the server to make sure it is running and reachable","Import signing key material to the key server","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Expire the current session and session key for this user.","","","Register a new user who has not yet interacted with the …","Request that the server generate a new signing key.","Sign an arbitrary blob of bytes with a remotely generated …","Retrieve the log of audit events from the key server for …","Retrieve a secret from the key server by <code>KeyId</code>","Retrieve the <code>lock_keeper::crypto::Encrypted&lt;StorageKey&gt;</code> …","","","","","","","","","","","","","","","Get <code>UserId</code> for the authenticated client.","","","","","","","Client configuration with all fields ready to use.","Client configuration file format.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The private key can be provided as a file or passed to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Consumes a <code>ClientChannel</code> and returns a response.","","Calls <code>U::from(self)</code>.","Consumes the response and returns the inner data.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,1,1,22,28,22,1,28,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,22,22,22,22,0,0,22,22,22,22,22,22,22,22,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,10,0,0,0,0,0,29,29,10,29,29,47,10,29,47,10,29,29,29,29,29,29,10,10,29,29,10,29,47,10,29,10,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,47,10,29,47,10,29,29,47,29,29,29,29,29,29,29,29,47,29,29,29,47,10,29,47,10,29,47,10,29,29,29,47,10,29,10,0,0,0,37,58,59,37,58,59,58,59,58,37,58,59,37,58,59,58,59,37,58,59,37,58,59,37,37,37,58,59,58,37,58,59,37,58,59,59,58,59,37,58,58,37,37,58,59,37,58,59,37,58,59,37,58,59,37,58,59,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,77,78,79,80,81,82,83,84,85,86,87,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],[[2,[1]]]],[[[1,[3]],4],5],[[]],0,0,0,[[]],[[],6],0,0,0,0,0,0,0,0,0,0,[1,2],[[],2],[[],2],[[],7],[[]],[[8,9,10,[12,[11]],13],[[2,[[14,[11]],15]]]],[[8,12,9],[[2,[13,15]]]],[[8,[19,[[18,[[0,[16,17]]]]]],20,21],[[2,[15]]]],[[8,9],[[2,[20,15]]]],0,[[]],[[]],[[22,4],5],[[]],[[8,20,23,[19,[[18,[24]]]],25],[[2,[[1,[26]],15]]]],[[8,20],[[2,[25,15]]]],[[]],[[],6],0,0,[[],2],[[],2],[[],7],[[]],[[8,[19,[[18,[24]]]],10,[27,[11]]],[[2,[21,15]]]],[[8,[19,[[18,[24]]]],9,10],[[2,[[27,[11]],15]]]],0,[[]],[[]],[[],[[2,[28]]]],[[28,4],5],[[]],[[]],[[],6],0,0,[28,2],[[],2],[[],2],[[],7],[[]],0,0,0,0,0,0,[29,9],0,[10],[[[36,[[35,[[31,[30]],[34,[32,33]]]]]],9,10,37],[[39,[[38,[29]]]]]],[[9,10,37],[[2,[[38,[29]],15]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[37,[[39,[[36,[[35,[[31,[30]],[34,[32,33]]]]]]]]]],[[36,40,41,[19,[[18,[24]]]]],[[39,[[8,[[42,[24]]]]]]]],[[36,40],[[39,[[8,[43]]]]]],[[29,44],40],[[],10],[10],[[29,25],[[2,[[38,[45]],15]]]],[[29,25],[[2,[[38,[45]],15]]]],[[10,4],5],[[29,4],5],[[]],[[]],[[]],[46,[[39,[10]]]],[29,[[2,[[38,[22]],15]]]],[[[8,[43]],[19,[[18,[24]]]],9,10],[[2,[[38,[47]],15]]]],[[[8,[[42,[24]]]],[19,[[18,[[0,[16,17]]]]]],9,21],[[2,[15]]]],[[29,[8,[[42,[24]]]]],[[2,[[38,[22]],15]]]],[[[8,[[42,[24]]]]],[[2,[20,15]]]],[[29,[8,[[42,[24]]]],48],[[2,[[38,[25]],15]]]],[[29,[8,[[42,[24]]]]],[[39,[38]]]],[[[8,[43]],[19,[[18,[24]]]],9,10],[[2,[21,15]]]],[[29,[8,[[42,[24]]]]],[[2,[[38,[28]],15]]]],[[29,[8,[[42,[24]]]],25,49],[[2,[[38,[50]],15]]]],[[29,[8,[[42,[24]]]],51,52],[[2,[[38,[[54,[53]]]],15]]]],[[29,[8,[[42,[24]]]],25,55],[[2,[[38,[[56,[[1,[26]]]]]],15]]]],[[29,[8,[[42,[24]]]],25,55],[[2,[[38,[[56,[[1,[57]]]]]],15]]]],[37,[[2,[15]]]],[[29,48],[[2,[[38,[25]],15]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[29,[[2,[38,15]]]],0,0,[[9,10,37],[[2,[38,15]]]],[29,[[2,[[38,[28]],15]]]],[[29,25,49],[[2,[[38,[50]],15]]]],[[29,51,52],[[2,[[38,[[54,[53]]]],15]]]],[[29,25,55],[[2,[[38,[[56,[[1,[26]]]]]],15]]]],[29,[[39,[23]]]],0,0,0,[29,[[36,[[35,[[31,[30]],[34,[32,33]]]]]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],7],[[],7],[[],7],[29,20],0,[[]],[[]],[[]],[10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[37,37],[58,58],[59,59],[[]],[[]],[[]],[[],[[2,[58]]]],[[],[[2,[59]]]],[[37,4],5],[[58,4],5],[[59,4],5],[[]],[[]],[[]],[[58,[56,[[54,[60]]]]],[[2,[37,15]]]],[[[62,[61]],[56,[[54,[60]]]]],[[2,[37,15]]]],[[]],[[]],[[]],[46,[[2,[58]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],0,[58,2],[59,2],0,0,[[58,[56,[[54,[60]]]]],[[2,[63,15]]]],0,[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],7],[[],7],[[],7],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[15,4],5],[[15,4],5],[64,15],[65,15],[33,15],[66,15],[67,15],[[]],[68,15],[69,15],[70,15],[71,15],[72,15],[[]],[[],6],[73],[15,[[56,[74]]]],[[],75],[[],2],[[],2],[[],7],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[38,[76]]],[[38,[76]]]],[[]],0,[[[38,[3]],4],5],[[]],[8,38],[[]],[[]],[38],[[],6],0,[[]],[[],2],[[],2],[[],7],[[]]],"p":[[3,"LocalStorage"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"ClientChannel"],[3,"AccountName"],[3,"Password"],[3,"OpaqueCipherSuite"],[3,"ClientLoginStartResult"],[3,"AuthenticateStart"],[3,"ClientLoginFinishResult"],[4,"LockKeeperClientError"],[8,"CryptoRng"],[8,"RngCore"],[3,"Mutex"],[3,"Arc"],[3,"UserId"],[3,"MasterKey"],[3,"GenerateResult"],[3,"StorageKey"],[3,"StdRng"],[3,"KeyId"],[3,"Secret"],[3,"ClientRegistrationStartResult"],[3,"RemoteGenerateResult"],[3,"LockKeeperClient"],[3,"HttpConnector"],[3,"HttpsConnector"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[3,"Client"],[3,"LockKeeperRpcClient"],[3,"Config"],[3,"LockKeeperResponse"],[6,"Result"],[3,"RequestMetadata"],[3,"OpaqueSessionKey"],[3,"Authenticated"],[3,"Unauthenticated"],[4,"ClientAction"],[3,"Export"],[15,"str"],[3,"AuthenticateResult"],[3,"Import"],[8,"Signable"],[3,"Signature"],[4,"EventType"],[3,"AuditEventOptions"],[3,"AuditEvent"],[3,"Vec"],[4,"RetrieveContext"],[4,"Option"],[3,"SigningKeyPair"],[3,"ConfigFile"],[3,"ClientAuth"],[15,"u8"],[3,"Path"],[8,"AsRef"],[3,"ClientConfig"],[4,"LockKeeperError"],[3,"InvalidUri"],[4,"ProtocolError"],[4,"Error"],[3,"Error"],[3,"Error"],[4,"Error"],[4,"CryptoError"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[8,"Clone"],[13,"HealthCheckFailed"],[13,"LockKeeper"],[13,"LockKeeperCrypto"],[13,"Io"],[13,"InvalidUri"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"Toml"],[13,"TonicStatus"],[13,"TonicTransport"],[13,"WebPki"]]},\
"lock_keeper_client_cli":{"doc":"","t":[0,0,0,5,0,0,3,11,11,11,11,11,11,5,5,5,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,2,8,6,2,16,2,2,8,2,2,2,2,2,2,2,2,2,2,2,10,0,10,10,0,10,11,0,0,5,10,0,0,0,0,0,10,0,0,0,0,0,0,11,3,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,13,4,3,13,13,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["app","cli","cli_command","main","state","storage","Parse","borrow","borrow_mut","from","get_function","into","into_request","parse_cli_command","parse_input","run","try_from","try_into","type_id","vzip","Cli","augment_args","augment_args_for_update","borrow","borrow_mut","config","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","into_request","storage_path","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Authenticate","CliCommand","DynCommand","Export","FunctionSignature","Generate","GetAuditEvents","GetCmdFunction","Health","Help","Import","List","Logout","Print","Quit","Register","RemoteGenerate","RemoteSign","Retrieve","aliases","authenticate","description","execute","export","format","from_str","generate","get_audit_events","get_cmd_functions","get_function","health","help","import","list","logout","parse_command_args","print","quit","register","remote_generate","remote_sign","retrieve","to_dyn","Authenticate","account_name","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","password","try_from","try_into","type_id","vzip","Export","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","Generate","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","new","new_name","parse_command_args","try_from","try_into","type_id","vzip","GetAuditEvents","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","try_from","try_into","type_id","vzip","Health","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","try_from","try_into","type_id","vzip","FindCommand","Help","HelpString","aliases","all_commands","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","description","execute","fmt","format","from","from","from","get_function","get_function","help_string","help_string","into","into","into","into_request","into_request","into_request","parse_command_args","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Import","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","List","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","try_from","try_into","type_id","vzip","Logout","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","try_from","try_into","type_id","vzip","Print","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","Quit","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","try_from","try_into","type_id","vzip","Register","account_name","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","parse_command_args","password","try_from","try_into","type_id","vzip","RemoteGenerate","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","RemoteSign","aliases","borrow","borrow_mut","data","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","Retrieve","aliases","borrow","borrow_mut","description","execute","fmt","format","from","into","into_request","name","parse_command_args","try_from","try_into","type_id","vzip","Credentials","State","account_name","borrow","borrow","borrow_mut","borrow_mut","config","credentials","fmt","fmt","from","from","get_credentials","get_key_id","into","into","into_request","into_request","new","password","storage","store_entry","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArbitraryKey","DataType","Entry","Export","None","Storage","UserStore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","data","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get","get","into","into","into","into","into_request","into_request","into_request","into_request","key_id","keys","list","list","load","new","new","new","next_index","path","save","serialize","serialize","serialize","serialize","store","store","store_named","store_named","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_as_string","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0"],"q":["lock_keeper_client_cli","","","","","","lock_keeper_client_cli::app","","","","","","","","","","","","","","lock_keeper_client_cli::cli","","","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::authenticate","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::export","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::generate","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::get_audit_events","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::health","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::help","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::import","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::list","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::logout","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::print","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::quit","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::register","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::remote_generate","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::remote_sign","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::cli_command::retrieve","","","","","","","","","","","","","","","","","lock_keeper_client_cli::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_client_cli::storage::DataType",""],"d":["","Command-line arguments","","","Types for the state of the running application and any …","Local storage types for in-memory and on-disk storage of …","Helper type to implement GetCmdFunction. This returns the …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Reads next command from standard input.","Runs the interactive client","","","","","","","","","","Location of client config file.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Directory where persistent storage files will be saved.","","","","","","","","","","","The signature of the function this implementor will be …","","","This trait allows us to specify two things: The …","","","","","","","","","","","","","","","Execute the command.","","Expected format for this command such as “register …","","","","This code supports numerous commands which have similar …","Given a specific implementor of CliCommand, T, return the …","","","","","","Given the proper string arguments to a command, return an …","","","","","","","Convert a string into a <code>Box&lt;dyn Command&gt;</code> suitable for …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Helper type to generate functions for all our CliCommand …","","Helper type to generate help strings based on the methods …","","Generate help string from all registered commands.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Generate a help string from the other trait methods in …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","User credentials","In-memory state for a running application","","","","","","<code>LockKeeperClient</code> config","Contains the credentials of the currently logged-in user","","","Returns the argument unchanged.","Returns the argument unchanged.","","Fetch the key_id named <code>named</code> belonging to the currently …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Local storage for key information","Store an entry with the given name, if no name is …","","","","","","","","","","Type of key being stored in local storage.","Key data returned from a key server.","","","Container for all locally stored key data. This type …","Key data for an individual account.","","","","","","","","","Mapping from account_name to key data","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Get a key from local storage","Get a key with the given name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Mapping from key name to key data","List all keys in storage for the given account.","List all keys stored for this account.","Load all key data from the filesystem in the given path.","Create a new <code>Storage</code> with local data in the given path.","Create a new <code>UserStore</code>.","","Next key name for keys that are stored without a custom …","Directory for persistent storage files","Save all key data for the given account.","","","","","Store a key in local storage. Key names are automatically …","Store a key. Key names are automatically generated as …","Store a key in local storage with the specified key name.","Store a key with the specified key name.","","","","","","","","","","Return a string representing the type of data this …","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,49,49,49,49,49,49,0,0,0,49,49,49,49,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,3,3,0,0,0,50,0,0,0,0,0,3,0,0,0,0,0,0,3,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,28,28,51,52,28,51,52,28,28,28,28,28,51,52,28,51,52,28,28,51,52,28,51,52,28,28,51,52,28,51,52,28,51,52,28,51,52,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,38,7,38,7,38,7,7,7,38,7,38,7,7,7,38,7,38,7,38,7,7,7,38,7,38,7,38,7,38,43,0,0,43,43,0,0,41,42,43,39,41,42,43,39,41,39,41,42,43,39,41,42,43,39,39,41,42,43,39,39,39,39,39,41,42,41,42,43,39,41,42,43,39,39,42,41,42,41,41,42,39,42,41,41,41,42,43,39,41,42,41,42,39,41,42,43,39,41,42,43,39,43,41,42,43,39,41,42,43,39,53,54],"f":[0,0,0,[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],1],[2,[[6,[[4,[3]],5]]]],[7,[[8,[[4,[3]]]]]],[[9,10],8],[[],6],[[],6],[[],11],[[]],0,[12,12],[12,12],[[]],[[]],0,[[13,14],15],[[]],[16,[[6,[13,17]]]],[16,[[6,[13,17]]]],[[]],[[],12],[[],12],[[],1],0,[[],6],[[],6],[[],11],[[13,16],[[6,[17]]]],[[13,16],[[6,[17]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[18,[2]]]],0,[[],2],[[4,7],[[20,[[4,[19]]]]]],0,[[],2],[2,[[6,[5]]]],0,0,[[],18],[[]],0,0,0,0,0,[[],21],0,0,0,0,0,0,[[],[[4,[3]]]],0,0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[22]],7],[[20,[[4,[19]]]]]],[[22,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[22]]]],0,[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[23]],7],[[20,[[4,[19]]]]]],[[23,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[23]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[24]],7],[[20,[[4,[19]]]]]],[[24,14],15],[[],2],[[]],[[]],[[],1],0,[[],24],[2,24],[[],[[21,[24]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[25]],7],[[20,[[4,[19]]]]]],[[25,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[25]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[26]],7],[[20,[[4,[19]]]]]],[[26,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[26]]]],[[],6],[[],6],[[],11],[[]],0,0,0,[[],[[18,[2]]]],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[[4,[28]],7],[[20,[[4,[19]]]]]],[[28,14],15],[[],2],[[]],[[]],[[]],[[]],[[]],[[2,2],27],0,[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],[[21,[28]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[29]],7],[[20,[[4,[19]]]]]],[[29,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[29]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[30]],7],[[20,[[4,[19]]]]]],[[30,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[30]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[31]],7],[[20,[[4,[19]]]]]],[[31,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[31]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[32]],7],[[20,[[4,[19]]]]]],[[32,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[32]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[33]],7],[[20,[[4,[19]]]]]],[[33,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[33]]]],[[],6],[[],6],[[],11],[[]],0,0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[34]],7],[[20,[[4,[19]]]]]],[[34,14],15],[[],2],[[]],[[]],[[],1],[[],[[21,[34]]]],0,[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[35]],7],[[20,[[4,[19]]]]]],[[35,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[35]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],0,[[],2],[[[4,[36]],7],[[20,[[4,[19]]]]]],[[36,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[36]]]],[[],6],[[],6],[[],11],[[]],0,[[],[[18,[2]]]],[[]],[[]],[[],2],[[[4,[37]],7],[[20,[[4,[19]]]]]],[[37,14],15],[[],2],[[]],[[]],[[],1],0,[[],[[21,[37]]]],[[],6],[[],6],[[],11],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[[7,14],15],[[38,14],15],[[]],[[]],[7,[[6,[38,5]]]],[[7,2],[[6,[39,5]]]],[[]],[[]],[[],1],[[],1],[[9,10],[[8,[7]]]],0,0,[[7,[21,[27]],[40,[39]]],[[6,[27,5]]]],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[6,[41]]]],[[],[[6,[42]]]],[[],[[6,[43]]]],[[],[[6,[39]]]],[[41,14],15],[[42,14],15],[[43,14],15],[[39,14],15],[[39,14],15],[[]],[[]],[[]],[44,39],[[],39],[[],39],[[]],[45,39],[[41,[46,[2]],[46,[2]]],[[8,[[21,[39]]]]]],[[42,[46,[2]]],[[21,[39]]]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],0,0,[[41,[46,[2]]],8],[42],[[[46,[47]]],[[8,[[48,[27,42]]]]]],[[[40,[10]]],[[8,[41]]]],[[],42],[[44,43],39],0,0,[[41,[46,[2]]],8],[41,6],[42,6],[43,6],[39,6],[[41,[40,[27]],[40,[39]]],[[8,[27]]]],[[42,[40,[39]]],27],[[41,[40,[27]],[40,[27]],[40,[39]]],8],[[42,[40,[27]],[40,[39]]]],[[],27],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[43,27],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0],"p":[[3,"Request"],[15,"str"],[8,"CliCommand"],[3,"Box"],[3,"Error"],[4,"Result"],[3,"State"],[6,"Result"],[3,"Config"],[3,"PathBuf"],[3,"TypeId"],[6,"Command"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[3,"Vec"],[8,"Future"],[3,"Pin"],[4,"Option"],[3,"Authenticate"],[3,"Export"],[3,"Generate"],[3,"GetAuditEvents"],[3,"Health"],[3,"String"],[3,"Help"],[3,"Import"],[3,"List"],[3,"Logout"],[3,"Print"],[3,"Quit"],[3,"Register"],[3,"RemoteGenerate"],[3,"RemoteSign"],[3,"Retrieve"],[3,"Credentials"],[3,"Entry"],[8,"Into"],[3,"Storage"],[3,"UserStore"],[4,"DataType"],[3,"KeyId"],[3,"GenerateResult"],[8,"AsRef"],[3,"Path"],[3,"HashMap"],[3,"Parse"],[8,"GetCmdFunction"],[3,"HelpString"],[3,"FindCommand"],[13,"ArbitraryKey"],[13,"Export"]]},\
"lock_keeper_key_server":{"doc":"This crate is an implementation of a key server to a key …","t":[2,2,0,0,0,0,0,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,3,10,11,11,11,11,10,10,11,10,10,10,10,11,11,11,10,11,11,11,12,10,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,5,5,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,5,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,0,0,11,11,11,11,11,11,12,12,0,0,12,12,5,11,11,11,11,11,11,11,11,5,8,5,5,11,10,5,5,5,13,13,13,8,4,13,11,11,10,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Config","LockKeeperServerError","config","database","error","operations","server","Config","ConfigFile","LoggingConfig","TlsConfig","address","address","all_logs_file_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_chain","client_auth","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_config_file","from_file","from_ref","from_ref","from_ref","from_ref","from_str","into","into","into","into","into_request","into_request","into_request","into_request","into_rustls_config","lock_keeper_logs_file_name","logging","logging","opaque_path","opaque_server_key","opaque_server_setup","port","port","private_key","remote_storage_key","remote_storage_key","remote_storage_key_config","serialize","serialize","serialize","tls_config","tls_config","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DataStore","Error","SecretFilter","add_user_secret","borrow","borrow_mut","clone","clone_into","create_audit_event","create_user","default","delete_user","find_audit_events","find_user","find_user_by_id","fmt","from","from_ref","get_user_secret","into","into_request","secret_type","secret_type","set_storage_key","to_owned","try_from","try_into","type_id","vzip","AccountAlreadyRegistered","Bincode","Database","EnvVar","Hyper","InvalidAccount","InvalidLogFilePath","InvalidOpaqueDirectory","Io","KeyNotFound","LockKeeper","LockKeeperServerError","MissingService","OpaqueProtocol","PrivateKeyMissing","RemoteStorageKeyMissing","Rustls","SessionCache","StorageKeyAlreadySet","StorageKeyNotSet","StrumParseError","Toml","TonicStatus","TonicTransport","WebPki","borrow","borrow_mut","database","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Authenticate","CreateStorageKey","GenerateSecret","GetUserId","ImportSigningKey","Logout","Register","RemoteGenerateSigningKey","RemoteSignBytes","RetrieveAuditEvents","RetrieveSecret","RetrieveStorageKey","authenticate","create_storage_key","generate_secret","get_user_id","import_signing_key","logout","register","remote_generate_signing_key","remote_sign_bytes","retrieve_audit_events","retrieve_secret","retrieve_storage_key","Authenticate","AuthenticateStartResult","authenticate_finish","authenticate_start","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","into_request","into_request","login_start_result","operation","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","CreateStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","send_user_id","store_storage_key","try_from","try_into","type_id","vzip","GenerateSecret","borrow","borrow_mut","fmt","from","generate_key","into","into_request","operation","store_key","try_from","try_into","type_id","vzip","GetUserId","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","ImportSigningKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Logout","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Register","borrow","borrow_mut","fmt","from","into","into_request","operation","register_finish","register_start","try_from","try_into","type_id","vzip","RemoteGenerateSigningKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RemoteSignBytes","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveAuditEvents","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveSecret","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","RetrieveStorageKey","borrow","borrow_mut","fmt","from","into","into_request","operation","try_from","try_into","type_id","vzip","Context","LockKeeperKeyServer","authenticate","borrow","borrow","borrow_mut","borrow_mut","config","config","context","create_authenticated_channel","create_storage_key","create_unauthenticated_channel","db","db","from","from","generate_secret","get_user_id","health","import_signing_key","into","into","into_request","into_request","key_id","logout","new","opaque_storage","operation","register","remote_generate","remote_sign_bytes","retrieve_audit_events","retrieve_secret","retrieve_storage_key","rng","rng","service","session_key_cache","session_key_cache","session_key_cache","start_lock_keeper_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_or_retrieve_server_key_opaque","Operation","audit_event","handle_error","handle_request","operation","handle_connection","start_lock_keeper_server","start_service","ExpiredSessionKey","InternalInvariantError","MissingSessionKey","SessionCache","SessionCacheError","SessionKeyExists","borrow","borrow_mut","create_session","delete_session","eq","equivalent","find_session","fmt","fmt","from","into","into_request","partial_cmp","provide","to_string","try_from","try_into","type_id","vzip"],"q":["lock_keeper_key_server","","","","","","","lock_keeper_key_server::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::error::LockKeeperServerError","","","","","","","","","","","","","","","lock_keeper_key_server::operations","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::operations::authenticate","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::operations::create_storage_key","","","","","","","","","","","","","","lock_keeper_key_server::operations::generate_secret","","","","","","","","","","","","","","lock_keeper_key_server::operations::get_user_id","","","","","","","","","","","","lock_keeper_key_server::operations::import_signing_key","","","","","","","","","","","","lock_keeper_key_server::operations::logout","","","","","","","","","","","","lock_keeper_key_server::operations::register","","","","","","","","","","","","","","lock_keeper_key_server::operations::remote_generate_signing_key","","","","","","","","","","","","lock_keeper_key_server::operations::remote_sign_bytes","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_audit_events","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_secret","","","","","","","","","","","","lock_keeper_key_server::operations::retrieve_storage_key","","","","","","","","","","","","lock_keeper_key_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_key_server::server::opaque_storage","lock_keeper_key_server::server::operation","","","","","lock_keeper_key_server::server::service","","","lock_keeper_key_server::server::session_key_cache","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Database for key-servers.","","","","Server configuration with all fields ready to use","Server configuration file format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The private key can be provided as a file or passed to the …","","The remote storage key can be provided as a file or passed …","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the expected interface between a key server and …","","Filters that can be used to influence database queries. …","Add a <code>StoredSecret</code> to a <code>User</code>’s list of arbitrary secrets","","","","","Create a new <code>AuditEvent</code> for the given actor, action, and …","Create a new <code>User</code> with their authentication information …","","Delete a <code>User</code> by their <code>UserId</code>","Find <code>AuditEvent</code>s that correspond to the event type and …","Find a <code>User</code> by their human-readable <code>AccountName</code>.","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","","Get a <code>User</code>’s <code>StoredSecret</code> based on its <code>KeyId</code>. A …","Calls <code>U::from(self)</code>.","","Convenience function to filter by secret type.","","Set the <code>storage_key</code> field for the <code>User</code> associated with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import signing key operation. This protocol allows the …","","","Client has asked server to generate a new signing key and …","This operation allows client to specify a key ID for a key …","This operation allows client to retrieve the stored audit …","","","","","Second part of our sever-side authentication protocol. …","Returns the server-side start message along with a login …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Executes the sever-side opaque authentication protocol. …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Look up account and ensure the user doesn’t already have …","","","","","","","","","","Returns the argument unchanged.","First step for generation:","Calls <code>U::from(self)</code>.","","Generate a new signing key for remotely (on the server …","Second step for generation operation.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Remote generation protocol works as follows:","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Remotely sign protocol:","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Retrieve a stored secret from server.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Our user session keys are held in this cache after …","Starts a full Lock Keeper server stack based on the given …","","","","","","","","","Retrieves the <code>ServerSetup</code> used for OPAQUE authentication, …","A type implementing <code>Operation</code> can process <code>tonic</code> requests …","Log the given action as an audit event.","","Takes a request from <code>tonic</code> and spawns a new thread to …","Core logic for a given operation.","Processes an individual connection through our service …","Starts a full Lock Keeper server stack based on the given …","Starts a new thread that accepts connections and sends …","","","","Cache holding our session keys, per user, after …","","","","","Add a new session key for the specified user. The previous …","Indicate that the session key for this user has expired. …","","","Get the session key for the specified user, if one exists. …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,4,1,2,3,4,4,4,1,2,3,4,1,2,3,4,2,3,4,3,3,1,2,3,4,1,2,3,4,1,1,1,2,3,4,2,1,2,3,4,1,2,3,4,4,3,1,2,2,2,1,1,2,4,1,2,2,2,3,4,1,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,72,0,72,24,24,24,24,72,72,24,72,72,72,72,24,24,24,72,24,24,24,24,72,24,24,24,24,24,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,59,60,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,59,60,0,61,61,61,61,61,61,61,0,0,61,61,61,61,0,62,62,62,62,0,62,62,62,0,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,0,66,66,66,66,66,66,66,0,0,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,68,68,68,68,0,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,0,0,73,73,58,73,58,73,58,73,73,73,73,73,58,73,58,73,73,73,73,73,58,73,58,58,73,73,0,0,73,73,73,73,73,73,73,58,0,0,73,58,0,73,58,73,58,73,58,73,58,0,0,0,0,105,105,0,0,0,41,41,41,0,0,41,41,41,78,78,41,41,78,41,41,41,41,41,41,41,41,41,41,41,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[],[[5,[2]]]],[[],[[5,[3]]]],[[],[[5,[4]]]],[[3,3],6],[[],6],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[]],[[]],[[]],[[]],[[2,[11,[[10,[9]]]],[11,[[10,[9]]]]],[[5,[1,12]]]],[[[14,[13]],[11,[[10,[9]]]],[11,[[10,[9]]]]],[[5,[1,12]]]],[[]],[[]],[[]],[[]],[15,[[5,[2]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[4,[11,[[10,[9]]]]],[[5,[17,12]]]],0,0,0,0,0,0,0,0,0,0,0,[[2,[11,[[10,[9]]]]],[[5,[18,12]]]],[2,5],[3,5],[4,5],0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],0,0,0,[20,[[23,[[22,[21]]]]]],[[]],[[]],[24,24],[[]],[[25,11,26,27],[[23,[[22,[21]]]]]],[[28,25,29],[[23,[[22,[21]]]]]],[[],24],[28,[[23,[[22,[21]]]]]],[[25,30,31],[[23,[[22,[21]]]]]],[25,[[23,[[22,[21]]]]]],[28,[[23,[[22,[21]]]]]],[[24,7],8],[[]],[[]],[[28,32,24],[[23,[[22,[21]]]]]],[[]],[[],16],[33,24],0,[[28,[35,[34]]],[[23,[[22,[21]]]]]],[[]],[[],5],[[],5],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[0,[36,37,38]]],12],[[12,7],8],[[12,7],8],[39,12],[40,12],[41,12],[42,12],[43,12],[44,12],[[]],[45,12],[46,12],[47,12],[48,12],[49,12],[50,12],[51,12],[[]],[[],16],[52],[12,[[11,[36]]]],[[],53],[[],5],[[],5],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,[56,[55]]],[[5,[57,12]]]],[[54,58],[[5,[59,12]]]],[[]],[[]],[[]],[[]],[[60,7],8],[[]],[[]],[[]],[[]],[[],16],[[],16],0,[[60,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],5],[[],5],[[],19],[[],19],0,[[]],[[]],0,[[]],[[]],[[61,7],8],[[]],[[]],[[],16],[[61,54,58],[[23,[[22,[21]]]]]],[[54,58],[[5,[28,12]]]],[[28,54,58],[[5,[12]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[62,7],8],[[]],[[54,58],[[5,[32,12]]]],[[]],[[],16],[[62,54,58],[[23,[[22,[21]]]]]],[[54,58,32],[[5,[12]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[63,7],8],[[]],[[]],[[],16],[[63,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[64,7],8],[[]],[[]],[[],16],[[64,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[65,7],8],[[]],[[]],[[],16],[[65,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[66,7],8],[[]],[[]],[[],16],[[66,54,58],[[23,[[22,[21]]]]]],[[25,54,58],[[5,[12]]]],[[54,58],[[5,[25,12]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[67,7],8],[[]],[[]],[[],16],[[67,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[68,7],8],[[]],[[]],[[],16],[[68,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[69,7],8],[[]],[[]],[[],16],[[69,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[70,7],8],[[]],[[]],[[],16],[[70,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,[[]],[[]],[[71,7],8],[[]],[[]],[[],16],[[71,54,58],[[23,[[22,[21]]]]]],[[],5],[[],5],[[],19],[[]],0,0,[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[]],[[]],[[]],[[]],0,0,[[[73,[72]]],[[58,[72]]]],[[[73,[72]],[16,[[75,[74]]]]],[[5,[12]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[5,[12]]]],0,0,[[]],[[]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[76]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[]],[[]],[[],16],[[],16],0,[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[77,[72]],[77,[[79,[78]]]],1],[[5,[[73,[72]],12]]]],0,0,[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],[[[73,[72]],[16,[[75,[74]]]]],[[23,[[22,[21]]]]]],0,0,0,0,0,0,[[1,[0,[72,80]],78],[[5,[12]]]],[[],5],[[],5],[[],5],[[],5],[[],19],[[],19],[[]],[[]],[[81,[14,[13]]],[[5,[[84,[55,[83,[82]]]],12]]]],0,[[54,58,27]],[[54,12]],[[58,54],[[23,[[22,[21]]]]]],[[54,58],[[23,[[22,[21]]]]]],[[85,86,[11,[87]],88],[[5,[12]]]],[[1,[0,[72,80]],78],[[5,[12]]]],[[1,[77,[[0,[72,80]]]],[77,[[79,[78]]]]],[[5,[12]]]],0,0,0,0,0,0,[[]],[[]],[[28,57]],[28,[[5,[41]]]],[[41,41],6],[[],6],[28,[[5,[57,41]]]],[[41,7],8],[[41,7],8],[[]],[[]],[[],16],[[41,41],[[11,[89]]]],[52],[[],53],[[],5],[[],5],[[],19],[[]]],"p":[[3,"Config"],[3,"ConfigFile"],[3,"LoggingConfig"],[3,"TlsConfig"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"LockKeeperServerError"],[3,"Path"],[8,"AsRef"],[15,"str"],[3,"Request"],[3,"ServerConfig"],[3,"RemoteStorageKey"],[3,"TypeId"],[3,"StoredSecret"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SecretFilter"],[3,"AccountName"],[4,"ClientAction"],[4,"EventStatus"],[3,"UserId"],[3,"ServerRegistration"],[4,"EventType"],[3,"AuditEventOptions"],[3,"KeyId"],[8,"Display"],[3,"StorageKey"],[3,"Encrypted"],[8,"Error"],[8,"Send"],[8,"Sync"],[4,"VarError"],[3,"Error"],[4,"SessionCacheError"],[4,"LockKeeperError"],[6,"Error"],[4,"ProtocolError"],[4,"Error"],[4,"Error"],[4,"ParseError"],[3,"Error"],[3,"Error"],[3,"Status"],[3,"Error"],[3,"Demand"],[3,"String"],[3,"ServerChannel"],[3,"OpaqueCipherSuite"],[3,"ServerLoginStartResult"],[3,"OpaqueSessionKey"],[3,"Context"],[3,"AuthenticateStartResult"],[3,"Authenticate"],[3,"CreateStorageKey"],[3,"GenerateSecret"],[3,"GetUserId"],[3,"ImportSigningKey"],[3,"Logout"],[3,"Register"],[3,"RemoteGenerateSigningKey"],[3,"RemoteSignBytes"],[3,"RetrieveAuditEvents"],[3,"RetrieveSecret"],[3,"RetrieveStorageKey"],[8,"DataStore"],[3,"LockKeeperKeyServer"],[3,"Message"],[3,"Streaming"],[3,"HealthCheck"],[3,"Arc"],[8,"SessionCache"],[3,"Mutex"],[8,"Clone"],[3,"StdRng"],[3,"Ristretto255"],[3,"PrivateKey"],[3,"ServerSetup"],[3,"Http"],[3,"TcpStream"],[3,"TlsAcceptor"],[3,"Routes"],[4,"Ordering"],[13,"SessionCache"],[13,"InvalidLogFilePath"],[13,"Bincode"],[13,"Database"],[13,"EnvVar"],[13,"Hyper"],[13,"Io"],[13,"LockKeeper"],[13,"OpaqueProtocol"],[13,"Rustls"],[13,"StrumParseError"],[13,"Toml"],[13,"TonicStatus"],[13,"TonicTransport"],[13,"WebPki"],[8,"Operation"]]},\
"lock_keeper_mongodb":{"doc":"This crate is an implementation of a database for a key …","t":[2,0,0,0,0,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,11,11,0,11,5,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Database","api","config","constants","error","Database","add_user_secret","add_user_secret","audit_event","borrow","borrow_mut","clone","clone_into","connect","create_audit_event","create_audit_event","create_user","create_user","delete_user","delete_user","find_audit_events","find_audit_events","find_user","find_user","find_user_by_id","find_user_by_id","fmt","from","from_ref","get_user_secret","get_user_secret","handle","into","into_request","secret","set_storage_key","set_storage_key","to_owned","try_from","try_into","type_id","user","vzip","construct_query_with_options","Config","borrow","borrow_mut","clone","clone_into","db_name","deserialize","fmt","from","from_file","from_ref","from_str","into","into_request","mongodb_uri","serialize","to_owned","try_from","try_into","type_id","vzip","ACTION","ACTOR","AUDIT_EVENTS","DATE","MAX_AUDIT_ENTRIES","SECRETS","SECRET_ID","STORAGE_KEY","USERS","Bson","Error","InvalidAccount","Io","KeyNotFound","MongoDb","Toml","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0"],"q":["lock_keeper_mongodb","","","","","lock_keeper_mongodb::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_mongodb::api::audit_event","lock_keeper_mongodb::config","","","","","","","","","","","","","","","","","","","","","lock_keeper_mongodb::constants","","","","","","","","","lock_keeper_mongodb::error","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_mongodb::error::Error","","",""],"d":["","","Config for database.","Constants used throughout the database API.","","Our wrapper around the <code>MongoDB</code> type. We implement the trait","","Add a `StoredSecret to the to database.","Operations on audit events in the MongoDB database.","","","","","Connect to the MongoDB instance specified by the given …","","Create a new <code>AuditEvent</code> for the given actor, action, and …","","Create a new <code>User</code> with their authentication information …","Delete a <code>User</code> by their <code>UserId</code>","","","Find <code>AuditEvent</code>s that correspond to the event type and …","","Find a <code>User</code> by their human-readable <code>AccountName</code>.","","Find a <code>User</code> by their machine-readable <code>UserId</code>.","","Returns the argument unchanged.","","Get a <code>StoredSecret</code> based on its <code>KeyId</code>. Ensures that the …","","","Calls <code>U::from(self)</code>.","","Operations on secrets in the database.","","Set the <code>storage_key</code> field for the <code>User</code> associated with a …","","","","","Operations on users in the database.","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,39,40,41,42],"f":[0,0,0,0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[1,2],[[7,[6]]]],0,[[]],[[]],[1,1],[[]],[8,[[7,[1,6]]]],[[1,9,10,11,12],[[5,[[4,[3]]]]]],[[1,9,10,11,12],[[7,[6]]]],[[1,13,9,14],[[5,[[4,[3]]]]]],[[1,13,9,14],[[7,[15,6]]]],[[1,13],[[7,[6]]]],[[1,13],[[5,[[4,[3]]]]]],[[1,9,16,17],[[5,[[4,[3]]]]]],[[1,9,16,17],[[7,[[19,[18]],6]]]],[[1,9],[[5,[[4,[3]]]]]],[[1,9],[[7,[[10,[15]],6]]]],[[1,13],[[5,[[4,[3]]]]]],[[1,13],[[7,[[10,[15]],6]]]],[[1,20],21],[[]],[[]],[[1,13,22,23],[[7,[2,6]]]],[[1,13,22,23],[[5,[[4,[3]]]]]],0,[[]],[[],24],0,[[1,13,[26,[25]]],[[5,[[4,[3]]]]]],[[1,13,[26,[25]]],[[7,[6]]]],[[]],[[],7],[[],7],[[],27],0,[[]],[[17,28],[[7,[28,6]]]],0,[[]],[[]],[8,8],[[]],0,[[],[[7,[8]]]],[[8,20],21],[[]],[[[30,[29]]],[[7,[8,6]]]],[[]],[31,[[7,[8]]]],[[]],[[],24],0,[8,7],[[]],[[],7],[[],7],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[6,20],21],[[6,20],21],[32,6],[33,6],[34,6],[35,6],[[]],[[]],[[],24],[36],[6,[[10,[37]]]],[[],38],[[],7],[[],7],[[],27],[[]],0,0,0,0],"p":[[3,"Database"],[3,"StoredSecret"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Error"],[4,"Result"],[3,"Config"],[3,"AccountName"],[4,"Option"],[4,"ClientAction"],[4,"EventStatus"],[3,"UserId"],[3,"ServerRegistration"],[3,"User"],[4,"EventType"],[3,"AuditEventOptions"],[3,"AuditEvent"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"KeyId"],[3,"SecretFilter"],[3,"Request"],[3,"StorageKey"],[3,"Encrypted"],[3,"TypeId"],[3,"Document"],[3,"Path"],[8,"AsRef"],[15,"str"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[13,"Bson"],[13,"Io"],[13,"MongoDb"],[13,"Toml"]]},\
"lock_keeper_tests":{"doc":"","t":[13,3,13,13,4,11,11,11,11,11,11,12,11,11,0,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,14,5,0,12,11,11,11,11,11,11,11,11,11,0,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,13,13,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,0,0,0,5,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,3,17,0,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,5,0,11,11,11,11,0,11,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,0,5,5,5,5,5,5,3,12,0,11,11,12,0,11,0,0,5,11,11,12,0,0,0,0,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,17,13,4,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,5],"n":["All","Cli","E2E","Integration","TestType","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","client_config","clone","clone_into","config","eq","equivalent","error","filters","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_str","into","into","into_app","into_app_for_update","into_request","into_request","main","mutual_auth_client_config","run_parallel","run_tests","test_suites","test_type","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","vzip","vzip","Config","TestFilters","borrow","borrow","borrow_mut","borrow_mut","client_config","client_config_path","clone","clone","clone_into","clone_into","default","filters","filters","fmt","fmt","from","from","from","from_ref","from_ref","into","into","into_request","into_request","matches","mutual_auth_client_config","mutual_auth_client_config_path","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InvalidTestType","Io","LockKeeper","LockKeeperClient","LockKeeperMongoDb","LockKeeperServer","LockKeeperTestError","MongoDb","Rand","Result","TestFailed","WaitForServerTimedOut","WrongErrorReturned","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","config_files","database","end_to_end","mutual_auth","run_all","CLIENT_CONFIG_NO_KEY","CLIENT_CONFIG_WITH_KEY","SAMPLE_PRIVATE_KEY","SAMPLE_SSE_KEY","SERVER_CONFIG_NO_KEY","SERVER_CONFIG_NO_SSE_KEY","SERVER_CONFIG_WITH_KEY","client_config_with_file_private_key_works","client_config_with_manual_private_key_works","client_config_without_private_key_fails","run_tests","server_config_with_file_private_key_works","server_config_with_manual_private_key_works","server_config_with_manual_remote_storage_key_works","server_config_without_private_key_fails","server_config_without_remote_storage_key_fails","TestDatabase","USERS_TABLE","audit_event","borrow","borrow_mut","clone","clone_into","config","create_test_master_key","create_test_storage_key","create_test_user","db","deref","drop","fmt","from","from_db_name","from_ref","into","into_request","is_user_valid","mongo","new","run_tests","secret","to_owned","try_from","try_into","type_id","user","vzip","NUM_LOGS","NUM_SAMPLE","after_date_filter_works","before_date_filter_works","check_after_date","check_before_date","compare_actions","compare_key_ids","create_random_audit_events","event_type_filter_works","key_id_filter_works","run_tests","add_arbitrary_secret","cannot_get_another_users_secrets","import_signing_key","remote_generate_signing_key","run_tests","user_is_serializable_after_adding_secrets","multiple_connections_do_not_overwrite_db","run_tests","storage_key_is_set","unique_indices_enforced","user_findable_by_account_name","user_findable_by_id","user_is_deleted","operations","run_tests","test_cases","authenticate","check_audit_events","compare_errors","compare_status_errors","generate_fake_key_id","import_signing_key","TestState","account_name","authenticate","borrow","borrow_mut","config","export","from","generate","import","init_test_state","into","into_request","password","register","remote_generate","remote_sign","retrieve","try_from","try_into","type_id","vzip","authenticate_before_register_fails","cannot_authenticate_with_wrong_password","multiple_sessions_from_same_client_allowed","run_tests","cannot_export_after_logout","cannot_export_fake_key","cannot_export_fake_signing_key","cannot_export_secret_as_signing_key","cannot_export_signing_key_after_logout","cannot_export_signing_key_as_secret","export_signing_key_works","export_works","run_tests","cannot_generate_after_logout","generate_works","run_tests","cannot_import_after_logout","import_works","run_tests","register_same_user_twice_fails","run_tests","cannot_remote_generate_after_logout","remote_generate_works","run_tests","cannot_remote_sign_after_logout","remote_sign_works","run_tests","cannot_retrieve_after_logout","cannot_retrieve_fake_key","retrieve_local_only_works","retrieve_null_works","run_tests","mutual_auth_not_required","mutual_auth_not_required_but_provided","mutual_auth_required","mutual_auth_required_not_provided","run_tests","Failed","Passed","RNG_SEED","Skipped","TestResult","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from_ref","into","into_request","random_bytes","report_test_results","run_test_case","server_registration","tagged","to_owned","try_from","try_into","type_id","vzip","wait_for_server"],"q":["lock_keeper_tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::error::LockKeeperTestError","","","","","","","","lock_keeper_tests::test_suites","","","","","lock_keeper_tests::test_suites::config_files","","","","","","","","","","","","","","","","lock_keeper_tests::test_suites::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::test_suites::database::audit_event","","","","","","","","","","","","lock_keeper_tests::test_suites::database::secret","","","","","","lock_keeper_tests::test_suites::database::user","","","","","","","lock_keeper_tests::test_suites::end_to_end","","","lock_keeper_tests::test_suites::end_to_end::operations","","","","","","lock_keeper_tests::test_suites::end_to_end::test_cases","","","","","","","","","","","","","","","","","","","","","","lock_keeper_tests::test_suites::end_to_end::test_cases::authenticate","","","","lock_keeper_tests::test_suites::end_to_end::test_cases::export","","","","","","","","","lock_keeper_tests::test_suites::end_to_end::test_cases::generate","","","lock_keeper_tests::test_suites::end_to_end::test_cases::import","","","lock_keeper_tests::test_suites::end_to_end::test_cases::register","","lock_keeper_tests::test_suites::end_to_end::test_cases::remote_generate","","","lock_keeper_tests::test_suites::end_to_end::test_cases::remote_sign","","","lock_keeper_tests::test_suites::end_to_end::test_cases::retrieve","","","","","lock_keeper_tests::test_suites::mutual_auth","","","","","lock_keeper_tests::utils","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Test config types","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Pass a list of async test functions with parameters …","","","","","","","","","","","","","Various testing utilities","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Config file tests that depend on files to exist at …","Database integration tests","End-to-end tests","TLS mutual authentication tests","","","","","","","","","","","","","","","","","","","","Integration tests for audit event objects in the database","","","","","","Create a master key for testing using random bytes.","Create a storage key for a test user.","Creates a test user with a randomized name and returns the …","","","Drops the underlying database. Call this when you’re …","","Returns the argument unchanged.","Create a new test database with a specific name. Use this …","","Calls <code>U::from(self)</code>.","","Retrieves a user from the database and ensures that it can …","Direct connection to MongoDB for actions that we don’t …","Create a new test database with random characters appended …","","Integration tests for secret objects in the database","","","","","Integration tests for user objects in the database","","","","","","","","","","","","","","","","","","","","","","Test that <code>set_storage_key</code> works correctly","","","","","","","","Authenticate to the LockKeeper key server and get a …","Make sure the last audit log for the tested operation has …","Helper to compare result errors.","Helper to compare status errors.","Generate a fake key ID to test retrieve/export failure …","Authenticate and import a signing key.","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Generate a sequence of random bytes with the given length.","","Runs a test case and manually handles any panics triggered …","Locally simulates OPAQUE registration to get a valid …","Add random text to the end of a string","","","","","",""],"i":[2,0,2,2,0,4,4,4,2,4,2,4,2,2,0,2,2,0,4,4,2,4,2,4,4,2,2,4,2,4,4,4,2,0,4,0,0,0,4,2,4,2,4,2,4,2,4,4,0,4,2,0,0,12,15,12,15,12,12,12,15,12,15,15,12,15,12,15,12,15,15,12,15,12,15,12,15,15,12,12,12,15,12,12,15,12,15,12,15,12,15,13,13,13,13,13,13,0,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,59,60,61,62,63,64,65,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,30,30,30,30,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,43,43,43,0,43,0,0,0,43,43,43,0,0,0,0,43,43,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,28,0,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,28,28,28,28,28,0],"f":[0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],0,[2,2],[[]],0,[[2,2],3],[[],3],0,0,[[4,5],6],[[2,5],6],[[]],[[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[[]],[10,[[9,[2]]]],[[]],[[]],[[],1],[[],1],[[],11],[[],11],[[]],0,0,[[2,12],[[9,[13]]]],0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],14],[[],14],[[4,7],[[9,[8]]]],[[4,7],[[9,[8]]]],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[12,12],[15,15],[[]],[[]],[[],15],0,0,[[12,5],6],[[15,5],6],[[]],[[]],[[[17,[16]]],15],[[]],[[]],[[]],[[]],[[],11],[[],11],[[15,10],3],0,0,[[]],[[]],[[],9],[4,[[9,[12]]]],[[],9],[[],9],[[],9],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[13,5],6],[[13,5],6],[18,13],[[]],[19,13],[20,13],[21,13],[22,13],[23,13],[24,13],[[]],[[],11],[25],[13,[[27,[26]]]],[[],16],[[],9],[[],9],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[12,[[29,[[17,[28]]]]]],0,0,0,0,0,0,0,[[],29],[[],29],[[],29],[12,[[29,[[17,[28]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[[]],[[]],[30,30],[[]],0,[31,[[29,[32]]]],[[30,33],29],[30,29],0,[30],[30,29],[[30,5],6],[[]],[[[34,[16]]],[[29,[30]]]],[[]],[[]],[[],11],[[30,35],3],0,[[[36,[10]]],[[29,[30]]]],[12,[[29,[[17,[28]]]]]],0,[[]],[[],9],[[],9],[[],14],0,[[]],0,0,[30,29],[30,29],[[[17,[37]],38]],[[[17,[37]],38]],[[[17,[37]],39]],[[[17,[37]],[17,[40]]]],[[35,33,41],[[29,[[17,[40]]]]]],[30,29],[30,29],[12,[[29,[[17,[28]]]]]],[[41,31,42,33],[[29,[40]]]],[30,29],[[41,31,33],[[29,[40]]]],[[41,31,33],[[29,[40]]]],[12,[[29,[[17,[28]]]]]],[30,29],[[],29],[12,[[29,[[17,[28]]]]]],[30,29],[30,29],[30,29],[30,29],[30,29],0,[12,[[29,[[17,[28]]]]]],0,[43,[[9,[44,21]]]],[[43,45,46],[[9,[21]]]],[[[9,[21]]]],[[[9,[21]],47],[[9,[13]]]],[44,[[9,[40,21]]]],[44,[[9,[48,21]]]],0,0,0,[[]],[[]],0,0,[[]],0,0,[49,[[9,[43,21]]]],[[]],[[],11],0,0,0,0,0,[[],9],[[],9],[[],14],[[]],[49,29],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[49,29],[49,29],[49,29],[49,29],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[49,29],[49,29],[49,29],[49,29],[12,[[29,[[17,[28]]]]]],[12,29],[12,29],[12,29],[12,29],[12,[[29,[[17,[28]]]]]],0,0,0,0,0,[[]],[[]],[28,28],[[]],[[28,28],3],[[],3],[[28,5],6],[[]],[[]],[[]],[[],11],[[50,51],[[17,[52]]]],[[],16],[[12,10,[0,[53,54]],[56,[[55,[[17,[28]]]]]]],29],[[],[[58,[57]]]],[[[36,[10]]],16],[[]],[[],9],[[],9],[[],14],[[]],[49,29]],"p":[[6,"Command"],[4,"TestType"],[15,"bool"],[3,"Cli"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[15,"str"],[3,"Request"],[3,"Config"],[4,"LockKeeperTestError"],[3,"TypeId"],[3,"TestFilters"],[3,"String"],[3,"Vec"],[4,"Error"],[3,"Error"],[4,"LockKeeperError"],[4,"LockKeeperClientError"],[4,"LockKeeperServerError"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[4,"TestResult"],[6,"Result"],[3,"TestDatabase"],[3,"StdRng"],[3,"MasterKey"],[3,"UserId"],[8,"Into"],[3,"AccountName"],[8,"AsRef"],[3,"AuditEvent"],[3,"DateTime"],[4,"EventType"],[3,"KeyId"],[3,"Database"],[3,"StorageKey"],[3,"TestState"],[3,"LockKeeperClient"],[4,"EventStatus"],[4,"ClientAction"],[3,"Status"],[3,"LockKeeperResponse"],[3,"Config"],[8,"Rng"],[15,"usize"],[15,"u8"],[8,"Future"],[8,"Send"],[3,"Mutex"],[3,"Arc"],[3,"OpaqueCipherSuite"],[3,"ServerRegistration"],[13,"InvalidTestType"],[13,"Io"],[13,"LockKeeper"],[13,"LockKeeperClient"],[13,"LockKeeperServer"],[13,"LockKeeperMongoDb"],[13,"MongoDb"],[13,"Rand"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
