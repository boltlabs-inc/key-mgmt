window.SIDEBAR_ITEMS = {"enum":[["CryptoError","Errors that arise in the cryptography module."]],"mod":[["arbitrary_secret",""],["data_blob","This module defines `[DataBlob]`: A blob of bytes for storing in the server. As well as accompanying functionality for server-side encrypting and decrypting `[DataBlob]s`."],["generic",""],["signing_key",""],["storage_key",""]],"struct":[["DataBlob","A blob of bytes for storing in the server."],["Encrypted","A ciphertext representing an object of type `T`, encrypted under the ChaCha20Poly1305 scheme for authenticated encryption with associated data (AEAD)."],["Export","Raw material for an exported signing key."],["Import","Raw material for an imported signing key."],["KeyId","Universally unique identifier for a stored secret or signing key. Wrapped in a `Box` to avoid stack overflows during heavy traffic. [KeyId]s are created by implementors of our DataStore trait. So we expose the internal as pub."],["MasterKey","The master key is a default-length symmetric encryption key for an AEAD scheme."],["OpaqueSessionKey","A session key is produced as shared output for client and server from OPAQUE."],["RemoteStorageKey","The remote storage key is a default-length symmetric encryption key for an AEAD scheme."],["Secret","An arbitrary secret."],["SignableBytes","Wrapper used to declare arbitrary bytes as [`Signable`]."],["Signature","A signature on an object encrypted under the ECDSA signature scheme."],["SigningKeyPair","An ECDSA signing key pair, including a public component for verifying signatures, a private component for creating them, and context about the key pair."],["SigningPublicKey","The public component of an ECDSA signing key, and context about the key."],["StorageKey","A storage key is a default-length symmetric encryption key for an AEAD scheme. The storage key is used to encrypt stored secrets and signing keys."]],"trait":[["Signable","Provides the methods necessary to sign and verify a piece of data with a [`SigningKeyPair`]. This trait should be explicitly implemented on types that are intended to be signed."]]};